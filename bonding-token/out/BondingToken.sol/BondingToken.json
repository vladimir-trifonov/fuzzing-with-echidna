{
  "abi": [
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "_name",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "_symbol",
          "type": "string"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Approval",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "Buy",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "Sell",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Transfer",
      "type": "event"
    },
    {
      "stateMutability": "payable",
      "type": "fallback"
    },
    {
      "inputs": [],
      "name": "MAX_BUY_AMOUNT_PER_TX",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "MAX_SUPPLY_THRESHOLD",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        }
      ],
      "name": "allowance",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "approve",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "approveAndCall",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "data",
          "type": "bytes"
        }
      ],
      "name": "approveAndCall",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "buy",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "calculatePriceForTokens",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "calculateTokensForPrice",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "decimals",
      "outputs": [
        {
          "internalType": "uint8",
          "name": "",
          "type": "uint8"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "subtractedValue",
          "type": "uint256"
        }
      ],
      "name": "decreaseAllowance",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "addedValue",
          "type": "uint256"
        }
      ],
      "name": "increaseAllowance",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "name",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        }
      ],
      "name": "onTransferReceived",
      "outputs": [
        {
          "internalType": "bytes4",
          "name": "",
          "type": "bytes4"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "sell",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes4",
          "name": "interfaceId",
          "type": "bytes4"
        }
      ],
      "name": "supportsInterface",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "symbol",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "totalSupply",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "transfer",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "transferAndCall",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "data",
          "type": "bytes"
        }
      ],
      "name": "transferAndCall",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "transferFrom",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "data",
          "type": "bytes"
        }
      ],
      "name": "transferFromAndCall",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "transferFromAndCall",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "stateMutability": "payable",
      "type": "receive"
    }
  ],
  "bytecode": {
    "object": "0x60806040523480156200001157600080fd5b5060405162001f2f38038062001f2f833981016040819052620000349162000131565b818160036200004483826200022a565b5060046200005382826200022a565b5050600160055550620002f6915050565b634e487b7160e01b600052604160045260246000fd5b600082601f8301126200008c57600080fd5b81516001600160401b0380821115620000a957620000a962000064565b604051601f8301601f19908116603f01168101908282118183101715620000d457620000d462000064565b81604052838152602092508683858801011115620000f157600080fd5b600091505b83821015620001155785820183015181830184015290820190620000f6565b83821115620001275760008385830101525b9695505050505050565b600080604083850312156200014557600080fd5b82516001600160401b03808211156200015d57600080fd5b6200016b868387016200007a565b935060208501519150808211156200018257600080fd5b5062000191858286016200007a565b9150509250929050565b600181811c90821680620001b057607f821691505b602082108103620001d157634e487b7160e01b600052602260045260246000fd5b50919050565b601f8211156200022557600081815260208120601f850160051c81016020861015620002005750805b601f850160051c820191505b8181101562000221578281556001016200020c565b5050505b505050565b81516001600160401b0381111562000246576200024662000064565b6200025e816200025784546200019b565b84620001d7565b602080601f8311600181146200029657600084156200027d5750858301515b600019600386901b1c1916600185901b17855562000221565b600085815260208120601f198616915b82811015620002c757888601518255948401946001909101908401620002a6565b5085821015620002e65787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b611c2980620003066000396000f3fe60806040526004361061016a5760003560e01c806370a08231116100d1578063b9615a6e1161008a578063d8fbe99411610064578063d8fbe99414610530578063d96a094a14610550578063dd62ed3e14610565578063e4849b3214610585576101ac565b8063b9615a6e146104d0578063c1d34b89146104f0578063cae9ca5114610510576101ac565b806370a08231146103f357806388a7ca5c1461042957806395d89b4114610462578063a457c2d714610477578063a9059cbb14610497578063b4a0b8c7146104b7576101ac565b8063313ce56711610123578063313ce5671461033f5780633177029f1461035b578063395093511461037b5780634000aea01461039b578063465fa408146103bb57806354d0a685146103db576101ac565b806301ffc9a71461026957806306fdde031461029e578063095ea7b3146102c05780631296ee62146102e057806318160ddd1461030057806323b872dd1461031f576101ac565b366101ac5760405162461bcd60e51b815260206004820152600d60248201526c139bdd081cdd5c1c1bdc9d1959609a1b60448201526064015b60405180910390fd5b6000366060600034116101d15760405162461bcd60e51b81526004016101a3906116e7565b60006101dc346105a5565b905060006101ec84860186611713565b9050808210156102365760405162461bcd60e51b8152602060048201526015602482015274105b5bdd5b9d081a5cc81b9bdd0818dbdc9c9958dd605a1b60448201526064016101a3565b61023f82610636565b60408051602081018490520160405160208183030381529060405292505050915050805190602001f35b34801561027557600080fd5b50610289610284366004611742565b6106ff565b60405190151581526020015b60405180910390f35b3480156102aa57600080fd5b506102b3610724565b60405161029591906117ac565b3480156102cc57600080fd5b506102896102db3660046117db565b6107b6565b3480156102ec57600080fd5b506102896102fb3660046117db565b6107ce565b34801561030c57600080fd5b506002545b604051908152602001610295565b34801561032b57600080fd5b5061028961033a366004611805565b6107f1565b34801561034b57600080fd5b5060405160128152602001610295565b34801561036757600080fd5b506102896103763660046117db565b610815565b34801561038757600080fd5b506102896103963660046117db565b610831565b3480156103a757600080fd5b506102896103b63660046118e4565b610853565b3480156103c757600080fd5b506103116103d6366004611713565b610888565b3480156103e757600080fd5b50610311633b9aca0081565b3480156103ff57600080fd5b5061031161040e36600461193b565b6001600160a01b031660009081526020819052604090205490565b34801561043557600080fd5b50610449610444366004611956565b6108ae565b6040516001600160e01b03199091168152602001610295565b34801561046e57600080fd5b506102b3610906565b34801561048357600080fd5b506102896104923660046117db565b610915565b3480156104a357600080fd5b506102896104b23660046117db565b610990565b3480156104c357600080fd5b5061031164e8d4a5100081565b3480156104dc57600080fd5b506103116104eb366004611713565b6105a5565b3480156104fc57600080fd5b5061028961050b3660046119f1565b61099e565b34801561051c57600080fd5b5061028961052b3660046118e4565b6109dc565b34801561053c57600080fd5b5061028961054b366004611805565b610a4c565b61056361055e366004611713565b610636565b005b34801561057157600080fd5b50610311610580366004611a59565b610a69565b34801561059157600080fd5b506105636105a0366004611713565b610a94565b600073__$1fab406747547f63deabbec4bf80336282$__6318d8e8e0836105cb60025490565b6040516001600160e01b031960e085901b16815260048101929092526024820152604401602060405180830381865af415801561060c573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106309190611a8c565b92915050565b61063e610b49565b6000341161065e5760405162461bcd60e51b81526004016101a3906116e7565b6000811161069f5760405162461bcd60e51b815260206004820152600e60248201526d416d6f756e74206973207a65726f60901b60448201526064016101a3565b633b9aca008111156106e85760405162461bcd60e51b8152602060048201526012602482015271082dadeeadce840d2e640e8dede40d0d2ced60731b60448201526064016101a3565b6106f23382610ba2565b6106fc6001600555565b50565b60006001600160e01b03198216636168360f60e11b1480610630575061063082610c99565b60606003805461073390611aa5565b80601f016020809104026020016040519081016040528092919081815260200182805461075f90611aa5565b80156107ac5780601f10610781576101008083540402835291602001916107ac565b820191906000526020600020905b81548152906001019060200180831161078f57829003601f168201915b5050505050905090565b6000336107c4818585610cce565b5060019392505050565b60006107ea838360405180602001604052806000815250610853565b9392505050565b6000336107ff858285610df2565b61080a858585610e6c565b506001949350505050565b60006107ea8383604051806020016040528060008152506109dc565b6000336107c48185856108448383610a69565b61084e9190611af5565b610cce565b600061085f8484610990565b5061086c33858585611016565b6107c45760405162461bcd60e51b81526004016101a390611b0d565b600073__$1fab406747547f63deabbec4bf80336282$",
    "sourceMap": "760:5550:12:-:0;;;1374:102;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1458:5;1465:7;2042:5:5;:13;1458:5:12;2042::5;:13;:::i;:::-;-1:-1:-1;2065:7:5;:17;2075:7;2065;:17;:::i;:::-;-1:-1:-1;;1716:1:4;1821:7;:22;-1:-1:-1;760:5550:12;;-1:-1:-1;;760:5550:12;14:127:16;75:10;70:3;66:20;63:1;56:31;106:4;103:1;96:15;130:4;127:1;120:15;146:885;200:5;253:3;246:4;238:6;234:17;230:27;220:55;;271:1;268;261:12;220:55;294:13;;-1:-1:-1;;;;;356:10:16;;;353:36;;;369:18;;:::i;:::-;444:2;438:9;412:2;498:13;;-1:-1:-1;;494:22:16;;;518:2;490:31;486:40;474:53;;;542:18;;;562:22;;;539:46;536:72;;;588:18;;:::i;:::-;628:10;624:2;617:22;663:2;655:6;648:18;685:4;675:14;;730:3;725:2;720;712:6;708:15;704:24;701:33;698:53;;;747:1;744;737:12;698:53;769:1;760:10;;779:133;793:2;790:1;787:9;779:133;;;881:14;;;877:23;;871:30;850:14;;;846:23;;839:63;804:10;;;;779:133;;;930:2;927:1;924:9;921:80;;;989:1;984:2;979;971:6;967:15;963:24;956:35;921:80;1019:6;146:885;-1:-1:-1;;;;;;146:885:16:o;1036:562::-;1135:6;1143;1196:2;1184:9;1175:7;1171:23;1167:32;1164:52;;;1212:1;1209;1202:12;1164:52;1239:16;;-1:-1:-1;;;;;1304:14:16;;;1301:34;;;1331:1;1328;1321:12;1301:34;1354:61;1407:7;1398:6;1387:9;1383:22;1354:61;:::i;:::-;1344:71;;1461:2;1450:9;1446:18;1440:25;1424:41;;1490:2;1480:8;1477:16;1474:36;;;1506:1;1503;1496:12;1474:36;;1529:63;1584:7;1573:8;1562:9;1558:24;1529:63;:::i;:::-;1519:73;;;1036:562;;;;;:::o;1603:380::-;1682:1;1678:12;;;;1725;;;1746:61;;1800:4;1792:6;1788:17;1778:27;;1746:61;1853:2;1845:6;1842:14;1822:18;1819:38;1816:161;;1899:10;1894:3;1890:20;1887:1;1880:31;1934:4;1931:1;1924:15;1962:4;1959:1;1952:15;1816:161;;1603:380;;;:::o;2114:545::-;2216:2;2211:3;2208:11;2205:448;;;2252:1;2277:5;2273:2;2266:17;2322:4;2318:2;2308:19;2392:2;2380:10;2376:19;2373:1;2369:27;2363:4;2359:38;2428:4;2416:10;2413:20;2410:47;;;-1:-1:-1;2451:4:16;2410:47;2506:2;2501:3;2497:12;2494:1;2490:20;2484:4;2480:31;2470:41;;2561:82;2579:2;2572:5;2569:13;2561:82;;;2624:17;;;2605:1;2594:13;2561:82;;;2565:3;;;2205:448;2114:545;;;:::o;2835:1352::-;2955:10;;-1:-1:-1;;;;;2977:30:16;;2974:56;;;3010:18;;:::i;:::-;3039:97;3129:6;3089:38;3121:4;3115:11;3089:38;:::i;:::-;3083:4;3039:97;:::i;:::-;3191:4;;3255:2;3244:14;;3272:1;3267:663;;;;3974:1;3991:6;3988:89;;;-1:-1:-1;4043:19:16;;;4037:26;3988:89;-1:-1:-1;;2792:1:16;2788:11;;;2784:24;2780:29;2770:40;2816:1;2812:11;;;2767:57;4090:81;;3237:944;;3267:663;2061:1;2054:14;;;2098:4;2085:18;;-1:-1:-1;;3303:20:16;;;3421:236;3435:7;3432:1;3429:14;3421:236;;;3524:19;;;3518:26;3503:42;;3616:27;;;;3584:1;3572:14;;;;3451:19;;3421:236;;;3425:3;3685:6;3676:7;3673:19;3670:201;;;3746:19;;;3740:26;-1:-1:-1;;3829:1:16;3825:14;;;3841:3;3821:24;3817:37;3813:42;3798:58;3783:74;;3670:201;-1:-1:-1;;;;;3917:1:16;3901:14;;;3897:22;3884:36;;-1:-1:-1;2835:1352:16:o;:::-;760:5550:12;;;;;;",
    "linkReferences": {
      "src/utils/BondingCurve.sol": {
        "BondingCurve": [
          {
            "start": 2223,
            "length": 20
          },
          {
            "start": 2962,
            "length": 20
          }
        ]
      }
    }
  },
  "deployedBytecode": {
    "object": "0x60806040526004361061016a5760003560e01c806370a08231116100d1578063b9615a6e1161008a578063d8fbe99411610064578063d8fbe99414610530578063d96a094a14610550578063dd62ed3e14610565578063e4849b3214610585576101ac565b8063b9615a6e146104d0578063c1d34b89146104f0578063cae9ca5114610510576101ac565b806370a08231146103f357806388a7ca5c1461042957806395d89b4114610462578063a457c2d714610477578063a9059cbb14610497578063b4a0b8c7146104b7576101ac565b8063313ce56711610123578063313ce5671461033f5780633177029f1461035b578063395093511461037b5780634000aea01461039b578063465fa408146103bb57806354d0a685146103db576101ac565b806301ffc9a71461026957806306fdde031461029e578063095ea7b3146102c05780631296ee62146102e057806318160ddd1461030057806323b872dd1461031f576101ac565b366101ac5760405162461bcd60e51b815260206004820152600d60248201526c139bdd081cdd5c1c1bdc9d1959609a1b60448201526064015b60405180910390fd5b6000366060600034116101d15760405162461bcd60e51b81526004016101a3906116e7565b60006101dc346105a5565b905060006101ec84860186611713565b9050808210156102365760405162461bcd60e51b8152602060048201526015602482015274105b5bdd5b9d081a5cc81b9bdd0818dbdc9c9958dd605a1b60448201526064016101a3565b61023f82610636565b60408051602081018490520160405160208183030381529060405292505050915050805190602001f35b34801561027557600080fd5b50610289610284366004611742565b6106ff565b60405190151581526020015b60405180910390f35b3480156102aa57600080fd5b506102b3610724565b60405161029591906117ac565b3480156102cc57600080fd5b506102896102db3660046117db565b6107b6565b3480156102ec57600080fd5b506102896102fb3660046117db565b6107ce565b34801561030c57600080fd5b506002545b604051908152602001610295565b34801561032b57600080fd5b5061028961033a366004611805565b6107f1565b34801561034b57600080fd5b5060405160128152602001610295565b34801561036757600080fd5b506102896103763660046117db565b610815565b34801561038757600080fd5b506102896103963660046117db565b610831565b3480156103a757600080fd5b506102896103b63660046118e4565b610853565b3480156103c757600080fd5b506103116103d6366004611713565b610888565b3480156103e757600080fd5b50610311633b9aca0081565b3480156103ff57600080fd5b5061031161040e36600461193b565b6001600160a01b031660009081526020819052604090205490565b34801561043557600080fd5b50610449610444366004611956565b6108ae565b6040516001600160e01b03199091168152602001610295565b34801561046e57600080fd5b506102b3610906565b34801561048357600080fd5b506102896104923660046117db565b610915565b3480156104a357600080fd5b506102896104b23660046117db565b610990565b3480156104c357600080fd5b5061031164e8d4a5100081565b3480156104dc57600080fd5b506103116104eb366004611713565b6105a5565b3480156104fc57600080fd5b5061028961050b3660046119f1565b61099e565b34801561051c57600080fd5b5061028961052b3660046118e4565b6109dc565b34801561053c57600080fd5b5061028961054b366004611805565b610a4c565b61056361055e366004611713565b610636565b005b34801561057157600080fd5b50610311610580366004611a59565b610a69565b34801561059157600080fd5b506105636105a0366004611713565b610a94565b600073__$1fab406747547f63deabbec4bf80336282$__6318d8e8e0836105cb60025490565b6040516001600160e01b031960e085901b16815260048101929092526024820152604401602060405180830381865af415801561060c573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106309190611a8c565b92915050565b61063e610b49565b6000341161065e5760405162461bcd60e51b81526004016101a3906116e7565b6000811161069f5760405162461bcd60e51b815260206004820152600e60248201526d416d6f756e74206973207a65726f60901b60448201526064016101a3565b633b9aca008111156106e85760405162461bcd60e51b8152602060048201526012602482015271082dadeeadce840d2e640e8dede40d0d2ced60731b60448201526064016101a3565b6106f23382610ba2565b6106fc6001600555565b50565b60006001600160e01b03198216636168360f60e11b1480610630575061063082610c99565b60606003805461073390611aa5565b80601f016020809104026020016040519081016040528092919081815260200182805461075f90611aa5565b80156107ac5780601f10610781576101008083540402835291602001916107ac565b820191906000526020600020905b81548152906001019060200180831161078f57829003601f168201915b5050505050905090565b6000336107c4818585610cce565b5060019392505050565b60006107ea838360405180602001604052806000815250610853565b9392505050565b6000336107ff858285610df2565b61080a858585610e6c565b506001949350505050565b60006107ea8383604051806020016040528060008152506109dc565b6000336107c48185856108448383610a69565b61084e9190611af5565b610cce565b600061085f8484610990565b5061086c33858585611016565b6107c45760405162461bcd60e51b81526004016101a390611b0d565b600073__$1fab406747547f63deabbec4bf80336282$",
    "sourceMap": "760:5550:12:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6278:23;;-1:-1:-1;;;6278:23:12;;216:2:16;6278:23:12;;;198:21:16;255:2;235:18;;;228:30;-1:-1:-1;;;274:18:16;;;267:43;327:18;;6278:23:12;;;;;;;;760:5550;;;5917:20;5969:1;5957:9;:13;5949:44;;;;-1:-1:-1;;;5949:44:12;;;;;;;:::i;:::-;6003:14;6020:34;6044:9;6020:23;:34::i;:::-;6003:51;-1:-1:-1;6064:15:12;6082:29;;;;6093:6;6082:29;:::i;:::-;6064:47;;6139:7;6129:6;:17;;6121:51;;;;-1:-1:-1;;;6121:51:12;;1090:2:16;6121:51:12;;;1072:21:16;1129:2;1109:18;;;1102:30;-1:-1:-1;;;1148:18:16;;;1141:51;1209:18;;6121:51:12;888:345:16;6121:51:12;6182:11;6186:6;6182:3;:11::i;:::-;6210:18;;;;;;1384:25:16;;;1357:18;6210::12;;;;;;;;;;;;6203:25;;;;5845:390;;;760:5550;;;;;;1721:240;;;;;;;;;;-1:-1:-1;1721:240:12;;;;;:::i;:::-;;:::i;:::-;;;1971:14:16;;1964:22;1946:41;;1934:2;1919:18;1721:240:12;;;;;;;;2154:98:5;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;4431:197::-;;;;;;;;;;-1:-1:-1;4431:197:5;;;;;:::i;:::-;;:::i;1041:147:0:-;;;;;;;;;;-1:-1:-1;1041:147:0;;;;;:::i;:::-;;:::i;3242:106:5:-;;;;;;;;;;-1:-1:-1;3329:12:5;;3242:106;;;1384:25:16;;;1372:2;1357:18;3242:106:5;1238:177:16;5190:286:5;;;;;;;;;;-1:-1:-1;5190:286:5;;;;;:::i;:::-;;:::i;3091:91::-;;;;;;;;;;-1:-1:-1;3091:91:5;;3173:2;3612:36:16;;3600:2;3585:18;3091:91:5;3470:184:16;3433:155:0;;;;;;;;;;-1:-1:-1;3433:155:0;;;;;:::i;:::-;;:::i;5871:234:5:-;;;;;;;;;;-1:-1:-1;5871:234:5;;;;;:::i;:::-;;:::i;1525:285:0:-;;;;;;;;;;-1:-1:-1;1525:285:0;;;;;:::i;:::-;;:::i;4690:176:12:-;;;;;;;;;;-1:-1:-1;4690:176:12;;;;;:::i;:::-;;:::i;865:61::-;;;;;;;;;;;;913:13;865:61;;3406:125:5;;;;;;;;;;-1:-1:-1;3406:125:5;;;;;:::i;:::-;-1:-1:-1;;;;;3506:18:5;3480:7;3506:18;;;;;;;;;;;;3406:125;5435:234:12;;;;;;;;;;-1:-1:-1;5435:234:12;;;;;:::i;:::-;;:::i;:::-;;;-1:-1:-1;;;;;;6147:33:16;;;6129:52;;6117:2;6102:18;5435:234:12;5985:202:16;2365:102:5;;;;;;;;;;;;;:::i;6592:427::-;;;;;;;;;;-1:-1:-1;6592:427:5;;;;;:::i;:::-;;:::i;3727:189::-;;;;;;;;;;-1:-1:-1;3727:189:5;;;;;:::i;:::-;;:::i;932:64:12:-;;;;;;;;;;;;979:17;932:64;;5144:176;;;;;;;;;;-1:-1:-1;5144:176:12;;;;;:::i;:::-;;:::i;2791:343:0:-;;;;;;;;;;-1:-1:-1;2791:343:0;;;;;:::i;:::-;;:::i;3950:283::-;;;;;;;;;;-1:-1:-1;3950:283:0;;;;;:::i;:::-;;:::i;2183:175::-;;;;;;;;;;-1:-1:-1;2183:175:0;;;;;:::i;:::-;;:::i;2107:272:12:-;;;;;;:::i;:::-;;:::i;:::-;;3974:149:5;;;;;;;;;;-1:-1:-1;3974:149:5;;;;;:::i;:::-;;:::i;3201:262:12:-;;;;;;;;;;-1:-1:-1;3201:262:12;;;;;:::i;:::-;;:::i;5144:176::-;5228:7;5254:12;:36;5291:6;5299:13;3329:12:5;;;3242:106;5299:13:12;5254:59;;-1:-1:-1;;;;;;5254:59:12;;;;;;;;;;7181:25:16;;;;7222:18;;;7215:34;7154:18;;5254:59:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;5247:66;5144:176;-1:-1:-1;;5144:176:12:o;2107:272::-;2261:21:4;:19;:21::i;:::-;2194:1:12::1;2182:9;:13;2174:44;;;;-1:-1:-1::0;;;2174:44:12::1;;;;;;;:::i;:::-;2245:1;2236:6;:10;2228:37;;;::::0;-1:-1:-1;;;2228:37:12;;7651:2:16;2228:37:12::1;::::0;::::1;7633:21:16::0;7690:2;7670:18;;;7663:30;-1:-1:-1;;;7709:18:16;;;7702:44;7763:18;;2228:37:12::1;7449:338:16::0;2228:37:12::1;913:13;2283:6;:31;;2275:62;;;::::0;-1:-1:-1;;;2275:62:12;;7994:2:16;2275:62:12::1;::::0;::::1;7976:21:16::0;8033:2;8013:18;;;8006:30;-1:-1:-1;;;8052:18:16;;;8045:48;8110:18;;2275:62:12::1;7792:342:16::0;2275:62:12::1;2348:24;2353:10;2365:6;2348:4;:24::i;:::-;2303:20:4::0;1716:1;2809:7;:22;2629:209;2303:20;2107:272:12;:::o;1721:240::-;1821:4;-1:-1:-1;;;;;;1856:46:12;;-1:-1:-1;;;1856:46:12;;:98;;;1918:36;1942:11;1918:23;:36::i;2154:98:5:-;2208:13;2240:5;2233:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2154:98;:::o;4431:197::-;4514:4;719:10:9;4568:32:5;719:10:9;4584:7:5;4593:6;4568:8;:32::i;:::-;-1:-1:-1;4617:4:5;;4431:197;-1:-1:-1;;;4431:197:5:o;1041:147:0:-;1127:4;1150:31;1166:2;1170:6;1150:31;;;;;;;;;;;;:15;:31::i;:::-;1143:38;1041:147;-1:-1:-1;;;1041:147:0:o;5190:286:5:-;5317:4;719:10:9;5373:38:5;5389:4;719:10:9;5404:6:5;5373:15;:38::i;:::-;5421:27;5431:4;5437:2;5441:6;5421:9;:27::i;:::-;-1:-1:-1;5465:4:5;;5190:286;-1:-1:-1;;;;5190:286:5:o;3433:155:0:-;3523:4;3546:35;3561:7;3570:6;3546:35;;;;;;;;;;;;:14;:35::i;5871:234:5:-;5959:4;719:10:9;6013:64:5;719:10:9;6029:7:5;6066:10;6038:25;719:10:9;6029:7:5;6038:9;:25::i;:::-;:38;;;;:::i;:::-;6013:8;:64::i;1525:285:0:-;1630:4;1646:20;1655:2;1659:6;1646:8;:20::i;:::-;-1:-1:-1;1684:56:0;719:10:9;1723:2:0;1727:6;1735:4;1684:24;:56::i;:::-;1676:106;;;;-1:-1:-1;;;1676:106:0;;;;;;;:::i;4690:176:12:-;4774:7;4800:12;:36;4837:6;4845:13;3329:12:5;;;3242:106;5435:234:12;5593:6;1125:10;1147:4;1125:27;1117:58;;;;-1:-1:-1;;;1117:58:12;;9397:2:16;1117:58:12;;;9379:21:16;9436:2;9416:18;;;9409:30;-1:-1:-1;;;9455:18:16;;;9448:48;9513:18;;1117:58:12;9195:342:16;1117:58:12;-1:-1:-1;;;;5435:234:12;;;;;;;:::o;2365:102:5:-;2421:13;2453:7;2446:14;;;;;:::i;6592:427::-;6685:4;719:10:9;6685:4:5;6766:25;719:10:9;6783:7:5;6766:9;:25::i;:::-;6739:52;;6829:15;6809:16;:35;;6801:85;;;;-1:-1:-1;;;6801:85:5;;9744:2:16;6801:85:5;;;9726:21:16;9783:2;9763:18;;;9756:30;9822:34;9802:18;;;9795:62;-1:-1:-1;;;9873:18:16;;;9866:35;9918:19;;6801:85:5;9542:401:16;6801:85:5;6920:60;6929:5;6936:7;6964:15;6945:16;:34;6920:8;:60::i;3727:189::-;3806:4;719:10:9;3860:28:5;719:10:9;3877:2:5;3881:6;3860:9;:28::i;2791:343:0:-;2952:4;2968:30;2981:4;2987:2;2991:6;2968:12;:30::i;:::-;;3016:48;3041:4;3047:2;3051:6;3059:4;3016:24;:48::i;:::-;3008:98;;;;-1:-1:-1;;;3008:98:0;;;;;;;:::i;2791:343::-;;;;;;;:::o;3950:283::-;4059:4;4075:24;4083:7;4092:6;4075:7;:24::i;:::-;;4117:47;4142:7;4151:6;4159:4;4117:24;:47::i;:::-;4109:96;;;;-1:-1:-1;;;4109:96:0;;10150:2:16;4109:96:0;;;10132:21:16;10189:2;10169:18;;;10162:30;10228:34;10208:18;;;10201:62;-1:-1:-1;;;10279:18:16;;;10272:34;10323:19;;4109:96:0;9948:400:16;2183:175:0;2287:4;2310:41;2330:4;2336:2;2340:6;2310:41;;;;;;;;;;;;:19;:41::i;3974:149:5:-;-1:-1:-1;;;;;4089:18:5;;;4063:7;4089:18;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;3974:149::o;3201:262:12:-;2261:21:4;:19;:21::i;:::-;3281:10:12::1;3480:7:5::0;3506:18;;;;;;;;;;;3296:6:12;-1:-1:-1;3271:31:12::1;3263:63;;;::::0;-1:-1:-1;;;3263:63:12;;10555:2:16;3263:63:12::1;::::0;::::1;10537:21:16::0;10594:2;10574:18;;;10567:30;-1:-1:-1;;;10613:18:16;;;10606:49;10672:18;;3263:63:12::1;10353:343:16::0;3263:63:12::1;3337:12;3352:31;3369:4;3376:6;3352:8;:31::i;:::-;3337:46;;3398:7;3393:64;;3421:25;::::0;-1:-1:-1;;;3421:25:12;;10903:2:16;3421:25:12::1;::::0;::::1;10885:21:16::0;10942:2;10922:18;;;10915:30;-1:-1:-1;;;10961:18:16;;;10954:45;11016:18;;3421:25:12::1;10701:339:16::0;3393:64:12::1;3253:210;2303:20:4::0;1716:1;2809:7;:22;2629:209;2336:287;1759:1;2468:7;;:19;2460:63;;;;-1:-1:-1;;;2460:63:4;;11247:2:16;2460:63:4;;;11229:21:16;11286:2;11266:18;;;11259:30;11325:33;11305:18;;;11298:61;11376:18;;2460:63:4;11045:355:16;2460:63:4;1759:1;2598:7;:18;2336:287::o;2568:475:12:-;2633:12;2648:31;2672:6;2648:23;:31::i;:::-;2633:46;;2710:4;2697:9;:17;;2689:48;;;;-1:-1:-1;;;2689:48:12;;;;;;;:::i;:::-;2747:22;2753:7;2762:6;2747:5;:22::i;:::-;979:17;2800:13;3329:12:5;;;3242:106;2800:13:12;:37;;2779:112;;;;-1:-1:-1;;;2779:112:12;;11607:2:16;2779:112:12;;;11589:21:16;11646:2;11626:18;;;11619:30;11685;11665:18;;;11658:58;11733:18;;2779:112:12;11405:352:16;2779:112:12;2917:4;2905:9;:16;2901:100;;;2937:53;2963:7;2973:16;2985:4;2973:9;:16;:::i;:::-;2937:17;:53::i;:::-;3020:7;-1:-1:-1;;;;;3016:20:12;;3029:6;3016:20;;;;1384:25:16;;1372:2;1357:18;;1238:177;3016:20:12;;;;;;;;2623:420;2568:475;;:::o;549:213:0:-;651:4;-1:-1:-1;;;;;;674:41:0;;-1:-1:-1;;;674:41:0;;:81;;-1:-1:-1;;;;;;;;;;937:40:10;;;719:36:0;829:155:10;10504:370:5;-1:-1:-1;;;;;10635:19:5;;10627:68;;;;-1:-1:-1;;;10627:68:5;;12094:2:16;10627:68:5;;;12076:21:16;12133:2;12113:18;;;12106:30;12172:34;12152:18;;;12145:62;-1:-1:-1;;;12223:18:16;;;12216:34;12267:19;;10627:68:5;11892:400:16;10627:68:5;-1:-1:-1;;;;;10713:21:5;;10705:68;;;;-1:-1:-1;;;10705:68:5;;12499:2:16;10705:68:5;;;12481:21:16;12538:2;12518:18;;;12511:30;12577:34;12557:18;;;12550:62;-1:-1:-1;;;12628:18:16;;;12621:32;12670:19;;10705:68:5;12297:398:16;10705:68:5;-1:-1:-1;;;;;10784:18:5;;;;;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;:36;;;10835:32;;1384:25:16;;;10835:32:5;;1357:18:16;10835:32:5;;;;;;;10504:370;;;:::o;11155:441::-;11285:24;11312:25;11322:5;11329:7;11312:9;:25::i;:::-;11285:52;;-1:-1:-1;;11351:16:5;:37;11347:243;;11432:6;11412:16;:26;;11404:68;;;;-1:-1:-1;;;11404:68:5;;12902:2:16;11404:68:5;;;12884:21:16;12941:2;12921:18;;;12914:30;12980:31;12960:18;;;12953:59;13029:18;;11404:68:5;12700:353:16;11404:68:5;11514:51;11523:5;11530:7;11558:6;11539:16;:25;11514:8;:51::i;:::-;11275:321;11155:441;;;:::o;7473:818::-;-1:-1:-1;;;;;7599:18:5;;7591:68;;;;-1:-1:-1;;;7591:68:5;;13260:2:16;7591:68:5;;;13242:21:16;13299:2;13279:18;;;13272:30;13338:34;13318:18;;;13311:62;-1:-1:-1;;;13389:18:16;;;13382:35;13434:19;;7591:68:5;13058:401:16;7591:68:5;-1:-1:-1;;;;;7677:16:5;;7669:64;;;;-1:-1:-1;;;7669:64:5;;13666:2:16;7669:64:5;;;13648:21:16;13705:2;13685:18;;;13678:30;13744:34;13724:18;;;13717:62;-1:-1:-1;;;13795:18:16;;;13788:33;13838:19;;7669:64:5;13464:399:16;7669:64:5;-1:-1:-1;;;;;7815:15:5;;7793:19;7815:15;;;;;;;;;;;7848:21;;;;7840:72;;;;-1:-1:-1;;;7840:72:5;;14070:2:16;7840:72:5;;;14052:21:16;14109:2;14089:18;;;14082:30;14148:34;14128:18;;;14121:62;-1:-1:-1;;;14199:18:16;;;14192:36;14245:19;;7840:72:5;13868:402:16;7840:72:5;-1:-1:-1;;;;;7946:15:5;;;:9;:15;;;;;;;;;;;7964:20;;;7946:38;;8161:13;;;;;;;;;;:23;;;;;;8210:26;;1384:25:16;;;8161:13:5;;8210:26;;1357:18:16;8210:26:5;;;;;;;8247:37;8267:4;8273:2;8277:6;8247:19;:37::i;4808:850:0:-;4976:4;-1:-1:-1;;;;;4997:20:0;;1465:19:8;4992:105:0;;5035:51;;-1:-1:-1;;;5035:51:0;;14477:2:16;5035:51:0;;;14459:21:16;14516:2;14496:18;;;14489:30;14555:34;14535:18;;;14528:62;-1:-1:-1;;;14606:18:16;;;14599:39;14655:19;;5035:51:0;14275:405:16;4992:105:0;5111:82;;-1:-1:-1;;;5111:82:0;;-1:-1:-1;;;;;5111:46:0;;;;;:82;;719:10:9;;5172:6:0;;5180;;5188:4;;5111:82;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;-1:-1:-1;5111:82:0;;;;;;;;-1:-1:-1;;5111:82:0;;;;;;;;;;;;:::i;:::-;;;5107:545;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5351:6;:13;5368:1;5351:18;5347:295;;5389:62;;-1:-1:-1;;;5389:62:0;;15635:2:16;5389:62:0;;;15617:21:16;15674:2;15654:18;;;15647:30;15713:34;15693:18;;;15686:62;-1:-1:-1;;;15764:18:16;;;15757:50;15824:19;;5389:62:0;15433:416:16;5347:295:0;5602:6;5596:13;5587:6;5583:2;5579:15;5572:38;5107:545;-1:-1:-1;;;;;;5239:54:0;-1:-1:-1;;;5239:54:0;;-1:-1:-1;5232:61:0;;6127:805;6269:4;-1:-1:-1;;;;;6290:18:0;;1465:19:8;6285:101:0;;6326:49;;-1:-1:-1;;;6326:49:0;;16056:2:16;6326:49:0;;;16038:21:16;16095:2;16075:18;;;16068:30;16134:34;16114:18;;;16107:62;-1:-1:-1;;;16185:18:16;;;16178:37;16232:19;;6326:49:0;15854:403:16;6285:101:0;6400:71;;-1:-1:-1;;;6400:71:0;;-1:-1:-1;;;;;6400:43:0;;;;;:71;;719:10:9;;6458:6:0;;6466:4;;6400:71;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;-1:-1:-1;6400:71:0;;;;;;;;-1:-1:-1;;6400:71:0;;;;;;;;;;;;:::i;:::-;;;6396:530;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6628:6;:13;6645:1;6628:18;6624:292;;6666:59;;-1:-1:-1;;;6666:59:0;;16855:2:16;6666:59:0;;;16837:21:16;16894:2;16874:18;;;16867:30;16933:34;16913:18;;;16906:62;-1:-1:-1;;;16984:18:16;;;16977:47;17041:19;;6666:59:0;16653:413:16;6396:530:0;-1:-1:-1;;;;;;6517:53:0;-1:-1:-1;;;6517:53:0;;-1:-1:-1;6510:60:0;;8567:535:5;-1:-1:-1;;;;;8650:21:5;;8642:65;;;;-1:-1:-1;;;8642:65:5;;17273:2:16;8642:65:5;;;17255:21:16;17312:2;17292:18;;;17285:30;17351:33;17331:18;;;17324:61;17402:18;;8642:65:5;17071:355:16;8642:65:5;8794:6;8778:12;;:22;;;;;;;:::i;:::-;;;;-1:-1:-1;;;;;;;8946:18:5;;:9;:18;;;;;;;;;;;:28;;;;;;8999:37;1384:25:16;;;8999:37:5;;1357:18:16;8999:37:5;;;;;;;9047:48;9075:1;9079:7;9088:6;9047:19;:48::i;:::-;8567:535;;:::o;2412:312:8:-;2526:6;2501:21;:31;;2493:73;;;;-1:-1:-1;;;2493:73:8;;17633:2:16;2493:73:8;;;17615:21:16;17672:2;17652:18;;;17645:30;17711:31;17691:18;;;17684:59;17760:18;;2493:73:8;17431:353:16;2493:73:8;2578:12;2596:9;-1:-1:-1;;;;;2596:14:8;2618:6;2596:33;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2577:52;;;2647:7;2639:78;;;;-1:-1:-1;;;2639:78:8;;18201:2:16;2639:78:8;;;18183:21:16;18240:2;18220:18;;;18213:30;18279:34;18259:18;;;18252:62;18350:28;18330:18;;;18323:56;18396:19;;2639:78:8;17999:422:16;2639:78:8;2483:241;2412:312;;:::o;4243:226:12:-;-1:-1:-1;;;;;4376:18:12;;;;;;:41;;-1:-1:-1;;;;;;4398:19:12;;4412:4;4398:19;4376:41;4372:91;;;4433:19;4439:4;4445:6;3719:28;3733:4;3740:6;3719:5;:28::i;:::-;3757:14;3774:31;3798:6;3774:23;:31::i;:::-;3757:48;;3815:43;3841:7;3851:6;3815:17;:43::i;:::-;3879:7;-1:-1:-1;;;;;3874:21:12;;3888:6;3874:21;;;;1384:25:16;;1372:2;1357:18;;1238:177;9422:659:5;-1:-1:-1;;;;;9505:21:5;;9497:67;;;;-1:-1:-1;;;9497:67:5;;18628:2:16;9497:67:5;;;18610:21:16;18667:2;18647:18;;;18640:30;18706:34;18686:18;;;18679:62;-1:-1:-1;;;18757:18:16;;;18750:31;18798:19;;9497:67:5;18426:397:16;9497:67:5;-1:-1:-1;;;;;9660:18:5;;9635:22;9660:18;;;;;;;;;;;9696:24;;;;9688:71;;;;-1:-1:-1;;;9688:71:5;;19030:2:16;9688:71:5;;;19012:21:16;19069:2;19049:18;;;19042:30;19108:34;19088:18;;;19081:62;-1:-1:-1;;;19159:18:16;;;19152:32;19201:19;;9688:71:5;18828:398:16;9688:71:5;-1:-1:-1;;;;;9793:18:5;;:9;:18;;;;;;;;;;;9814:23;;;9793:44;;9930:12;:22;;;;;;;9978:37;1384:25:16;;;9793:9:5;;:18;9978:37;;1357:18:16;9978:37:5;;;;;;;10026:48;10046:7;10063:1;10067:6;10026:19;:48::i;356:342:16:-;558:2;540:21;;;597:2;577:18;;;570:30;-1:-1:-1;;;631:2:16;616:18;;609:48;689:2;674:18;;356:342::o;703:180::-;762:6;815:2;803:9;794:7;790:23;786:32;783:52;;;831:1;828;821:12;783:52;-1:-1:-1;854:23:16;;703:180;-1:-1:-1;703:180:16:o;1420:131::-;-1:-1:-1;;;;;;1494:32:16;;1484:43;;1474:71;;1541:1;1538;1531:12;1556:245;1614:6;1667:2;1655:9;1646:7;1642:23;1638:32;1635:52;;;1683:1;1680;1673:12;1635:52;1722:9;1709:23;1741:30;1765:5;1741:30;:::i;1998:472::-;2040:3;2078:5;2072:12;2105:6;2100:3;2093:19;2130:1;2140:162;2154:6;2151:1;2148:13;2140:162;;;2216:4;2272:13;;;2268:22;;2262:29;2244:11;;;2240:20;;2233:59;2169:12;2140:162;;;2320:6;2317:1;2314:13;2311:87;;;2386:1;2379:4;2370:6;2365:3;2361:16;2357:27;2350:38;2311:87;-1:-1:-1;2452:2:16;2431:15;-1:-1:-1;;2427:29:16;2418:39;;;;2459:4;2414:50;;1998:472;-1:-1:-1;;1998:472:16:o;2475:220::-;2624:2;2613:9;2606:21;2587:4;2644:45;2685:2;2674:9;2670:18;2662:6;2644:45;:::i;2700:173::-;2768:20;;-1:-1:-1;;;;;2817:31:16;;2807:42;;2797:70;;2863:1;2860;2853:12;2797:70;2700:173;;;:::o;2878:254::-;2946:6;2954;3007:2;2995:9;2986:7;2982:23;2978:32;2975:52;;;3023:1;3020;3013:12;2975:52;3046:29;3065:9;3046:29;:::i;:::-;3036:39;3122:2;3107:18;;;;3094:32;;-1:-1:-1;;;2878:254:16:o;3137:328::-;3214:6;3222;3230;3283:2;3271:9;3262:7;3258:23;3254:32;3251:52;;;3299:1;3296;3289:12;3251:52;3322:29;3341:9;3322:29;:::i;:::-;3312:39;;3370:38;3404:2;3393:9;3389:18;3370:38;:::i;:::-;3360:48;;3455:2;3444:9;3440:18;3427:32;3417:42;;3137:328;;;;;:::o;3659:127::-;3720:10;3715:3;3711:20;3708:1;3701:31;3751:4;3748:1;3741:15;3775:4;3772:1;3765:15;3791:718;3833:5;3886:3;3879:4;3871:6;3867:17;3863:27;3853:55;;3904:1;3901;3894:12;3853:55;3940:6;3927:20;3966:18;4003:2;3999;3996:10;3993:36;;;4009:18;;:::i;:::-;4084:2;4078:9;4052:2;4138:13;;-1:-1:-1;;4134:22:16;;;4158:2;4130:31;4126:40;4114:53;;;4182:18;;;4202:22;;;4179:46;4176:72;;;4228:18;;:::i;:::-;4268:10;4264:2;4257:22;4303:2;4295:6;4288:18;4349:3;4342:4;4337:2;4329:6;4325:15;4321:26;4318:35;4315:55;;;4366:1;4363;4356:12;4315:55;4430:2;4423:4;4415:6;4411:17;4404:4;4396:6;4392:17;4379:54;4477:1;4470:4;4465:2;4457:6;4453:15;4449:26;4442:37;4497:6;4488:15;;;;;;3791:718;;;;:::o;4514:462::-;4600:6;4608;4616;4669:2;4657:9;4648:7;4644:23;4640:32;4637:52;;;4685:1;4682;4675:12;4637:52;4708:29;4727:9;4708:29;:::i;:::-;4698:39;;4784:2;4773:9;4769:18;4756:32;4746:42;;4839:2;4828:9;4824:18;4811:32;4866:18;4858:6;4855:30;4852:50;;;4898:1;4895;4888:12;4852:50;4921:49;4962:7;4953:6;4942:9;4938:22;4921:49;:::i;:::-;4911:59;;;4514:462;;;;;:::o;4981:186::-;5040:6;5093:2;5081:9;5072:7;5068:23;5064:32;5061:52;;;5109:1;5106;5099:12;5061:52;5132:29;5151:9;5132:29;:::i;5172:808::-;5269:6;5277;5285;5293;5301;5354:3;5342:9;5333:7;5329:23;5325:33;5322:53;;;5371:1;5368;5361:12;5322:53;5394:29;5413:9;5394:29;:::i;:::-;5384:39;;5442:38;5476:2;5465:9;5461:18;5442:38;:::i;:::-;5432:48;;5527:2;5516:9;5512:18;5499:32;5489:42;;5582:2;5571:9;5567:18;5554:32;5605:18;5646:2;5638:6;5635:14;5632:34;;;5662:1;5659;5652:12;5632:34;5700:6;5689:9;5685:22;5675:32;;5745:7;5738:4;5734:2;5730:13;5726:27;5716:55;;5767:1;5764;5757:12;5716:55;5807:2;5794:16;5833:2;5825:6;5822:14;5819:34;;;5849:1;5846;5839:12;5819:34;5894:7;5889:2;5880:6;5876:2;5872:15;5868:24;5865:37;5862:57;;;5915:1;5912;5905:12;5862:57;5172:808;;;;-1:-1:-1;5172:808:16;;-1:-1:-1;5946:2:16;5938:11;;5968:6;5172:808;-1:-1:-1;;;5172:808:16:o;6192:537::-;6287:6;6295;6303;6311;6364:3;6352:9;6343:7;6339:23;6335:33;6332:53;;;6381:1;6378;6371:12;6332:53;6404:29;6423:9;6404:29;:::i;:::-;6394:39;;6452:38;6486:2;6475:9;6471:18;6452:38;:::i;:::-;6442:48;;6537:2;6526:9;6522:18;6509:32;6499:42;;6592:2;6581:9;6577:18;6564:32;6619:18;6611:6;6608:30;6605:50;;;6651:1;6648;6641:12;6605:50;6674:49;6715:7;6706:6;6695:9;6691:22;6674:49;:::i;:::-;6664:59;;;6192:537;;;;;;;:::o;6734:260::-;6802:6;6810;6863:2;6851:9;6842:7;6838:23;6834:32;6831:52;;;6879:1;6876;6869:12;6831:52;6902:29;6921:9;6902:29;:::i;:::-;6892:39;;6950:38;6984:2;6973:9;6969:18;6950:38;:::i;:::-;6940:48;;6734:260;;;;;:::o;7260:184::-;7330:6;7383:2;7371:9;7362:7;7358:23;7354:32;7351:52;;;7399:1;7396;7389:12;7351:52;-1:-1:-1;7422:16:16;;7260:184;-1:-1:-1;7260:184:16:o;8139:380::-;8218:1;8214:12;;;;8261;;;8282:61;;8336:4;8328:6;8324:17;8314:27;;8282:61;8389:2;8381:6;8378:14;8358:18;8355:38;8352:161;;8435:10;8430:3;8426:20;8423:1;8416:31;8470:4;8467:1;8460:15;8498:4;8495:1;8488:15;8352:161;;8139:380;;;:::o;8524:127::-;8585:10;8580:3;8576:20;8573:1;8566:31;8616:4;8613:1;8606:15;8640:4;8637:1;8630:15;8656:128;8696:3;8727:1;8723:6;8720:1;8717:13;8714:39;;;8733:18;;:::i;:::-;-1:-1:-1;8769:9:16;;8656:128::o;8789:401::-;8991:2;8973:21;;;9030:2;9010:18;;;9003:30;9069:34;9064:2;9049:18;;9042:62;-1:-1:-1;;;9135:2:16;9120:18;;9113:35;9180:3;9165:19;;8789:401::o;11762:125::-;11802:4;11830:1;11827;11824:8;11821:34;;;11835:18;;:::i;:::-;-1:-1:-1;11872:9:16;;11762:125::o;14685:489::-;-1:-1:-1;;;;;14954:15:16;;;14936:34;;15006:15;;15001:2;14986:18;;14979:43;15053:2;15038:18;;15031:34;;;15101:3;15096:2;15081:18;;15074:31;;;14879:4;;15122:46;;15148:19;;15140:6;15122:46;:::i;:::-;15114:54;14685:489;-1:-1:-1;;;;;;14685:489:16:o;15179:249::-;15248:6;15301:2;15289:9;15280:7;15276:23;15272:32;15269:52;;;15317:1;15314;15307:12;15269:52;15349:9;15343:16;15368:30;15392:5;15368:30;:::i;16262:386::-;16494:1;16490;16485:3;16481:11;16477:19;16469:6;16465:32;16454:9;16447:51;16534:6;16529:2;16518:9;16514:18;16507:34;16577:2;16572;16561:9;16557:18;16550:30;16428:4;16597:45;16638:2;16627:9;16623:18;16615:6;16597:45;:::i;:::-;16589:53;16262:386;-1:-1:-1;;;;;16262:386:16:o",
    "linkReferences": {
      "src/utils/BondingCurve.sol": {
        "BondingCurve": [
          {
            "start": 1449,
            "length": 20
          },
          {
            "start": 2188,
            "length": 20
          }
        ]
      }
    }
  },
  "methodIdentifiers": {
    "MAX_BUY_AMOUNT_PER_TX()": "54d0a685",
    "MAX_SUPPLY_THRESHOLD()": "b4a0b8c7",
    "allowance(address,address)": "dd62ed3e",
    "approve(address,uint256)": "095ea7b3",
    "approveAndCall(address,uint256)": "3177029f",
    "approveAndCall(address,uint256,bytes)": "cae9ca51",
    "balanceOf(address)": "70a08231",
    "buy(uint256)": "d96a094a",
    "calculatePriceForTokens(uint256)": "465fa408",
    "calculateTokensForPrice(uint256)": "b9615a6e",
    "decimals()": "313ce567",
    "decreaseAllowance(address,uint256)": "a457c2d7",
    "increaseAllowance(address,uint256)": "39509351",
    "name()": "06fdde03",
    "onTransferReceived(address,address,uint256,bytes)": "88a7ca5c",
    "sell(uint256)": "e4849b32",
    "supportsInterface(bytes4)": "01ffc9a7",
    "symbol()": "95d89b41",
    "totalSupply()": "18160ddd",
    "transfer(address,uint256)": "a9059cbb",
    "transferAndCall(address,uint256)": "1296ee62",
    "transferAndCall(address,uint256,bytes)": "4000aea0",
    "transferFrom(address,address,uint256)": "23b872dd",
    "transferFromAndCall(address,address,uint256)": "d8fbe994",
    "transferFromAndCall(address,address,uint256,bytes)": "c1d34b89"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.15+commit.e14f2714\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_symbol\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Buy\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Sell\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"inputs\":[],\"name\":\"MAX_BUY_AMOUNT_PER_TX\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"MAX_SUPPLY_THRESHOLD\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approveAndCall\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"approveAndCall\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"buy\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"calculatePriceForTokens\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"calculateTokensForPrice\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"subtractedValue\",\"type\":\"uint256\"}],\"name\":\"decreaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"addedValue\",\"type\":\"uint256\"}],\"name\":\"increaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"onTransferReceived\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"sell\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferAndCall\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"transferAndCall\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"transferFromAndCall\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFromAndCall\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"details\":\"A token contract that implements a bonding curve for buying and selling tokens using Ether. The contract uses ERC1363 to accept and transfer tokens, and implements the IBondingToken interface for buying and selling tokens. The contract also implements the IERC1363Receiver interface to receive tokens that are sent to the contract.\",\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"approveAndCall(address,uint256)\":{\"details\":\"Approve spender to transfer tokens and then execute a callback on `spender`.\",\"params\":{\"amount\":\"The amount allowed to be transferred\",\"spender\":\"The address allowed to transfer to\"},\"returns\":{\"_0\":\"A boolean that indicates if the operation was successful.\"}},\"approveAndCall(address,uint256,bytes)\":{\"details\":\"Approve spender to transfer tokens and then execute a callback on `spender`.\",\"params\":{\"amount\":\"The amount allowed to be transferred.\",\"data\":\"Additional data with no specified format.\",\"spender\":\"The address allowed to transfer to.\"},\"returns\":{\"_0\":\"A boolean that indicates if the operation was successful.\"}},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"buy(uint256)\":{\"details\":\"Allows a user to buy tokens by sending Ether to the contract.\",\"params\":{\"amount\":\"The amount of tokens to buy.\"}},\"calculatePriceForTokens(uint256)\":{\"details\":\"Calculates the cost of buying a given amount of tokens.\",\"params\":{\"amount\":\"The amount of tokens to calculate the cost for.\"},\"returns\":{\"_0\":\"The cost of buying the given amount of tokens.\"}},\"calculateTokensForPrice(uint256)\":{\"details\":\"Calculates the amount of tokens that can be bought with a given amount of Ether.\",\"params\":{\"amount\":\"The amount of Ether to calculate the token amount for.\"},\"returns\":{\"_0\":\"The amount of tokens that can be bought with the given amount of Ether.\"}},\"constructor\":{\"details\":\"Initializes the contract with the given name and symbol.\",\"params\":{\"_name\":\"The name of the token.\",\"_symbol\":\"The symbol of the token.\"}},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {ERC20} uses, unless this function is overridden; NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"decreaseAllowance(address,uint256)\":{\"details\":\"Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`.\"},\"increaseAllowance(address,uint256)\":{\"details\":\"Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"onTransferReceived(address,address,uint256,bytes)\":{\"details\":\"Called by ERC1363 to indicate that tokens have been transferred to the contract.\"},\"sell(uint256)\":{\"details\":\"Allows a user to sell tokens back to the contract in exchange for Ether.\",\"params\":{\"amount\":\"The amount of tokens to sell.\"}},\"supportsInterface(bytes4)\":{\"details\":\"Checks if a contract implements the IBondingToken interface.\",\"params\":{\"interfaceId\":\"The interface ID being checked.\"},\"returns\":{\"_0\":\"A boolean indicating if the contract implements the IBondingToken interface.\"}},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `amount`.\"},\"transferAndCall(address,uint256)\":{\"details\":\"Transfer tokens to a specified address and then execute a callback on `to`.\",\"params\":{\"amount\":\"The amount to be transferred.\",\"to\":\"The address to transfer to.\"},\"returns\":{\"_0\":\"A boolean that indicates if the operation was successful.\"}},\"transferAndCall(address,uint256,bytes)\":{\"details\":\"Transfer tokens to a specified address and then execute a callback on `to`.\",\"params\":{\"amount\":\"The amount to be transferred\",\"data\":\"Additional data with no specified format\",\"to\":\"The address to transfer to\"},\"returns\":{\"_0\":\"A boolean that indicates if the operation was successful.\"}},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `amount`. - the caller must have allowance for ``from``'s tokens of at least `amount`.\"},\"transferFromAndCall(address,address,uint256)\":{\"details\":\"Transfer tokens from one address to another and then execute a callback on `to`.\",\"params\":{\"amount\":\"The amount of tokens to be transferred\",\"from\":\"The address which you want to send tokens from\",\"to\":\"The address which you want to transfer to\"},\"returns\":{\"_0\":\"A boolean that indicates if the operation was successful.\"}},\"transferFromAndCall(address,address,uint256,bytes)\":{\"details\":\"Transfer tokens from one address to another and then execute a callback on `to`.\",\"params\":{\"amount\":\"The amount of tokens to be transferred\",\"data\":\"Additional data with no specified format\",\"from\":\"The address which you want to send tokens from\",\"to\":\"The address which you want to transfer to\"},\"returns\":{\"_0\":\"A boolean that indicates if the operation was successful.\"}}},\"title\":\"BondingToken\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/BondingToken.sol\":\"BondingToken\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":@openzeppelin/=lib/openzeppelin-contracts/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":erc1363-payable-token/=lib/erc1363-payable-token/\",\":erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/\",\":forge-std/=lib/forge-std/src/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/\"]},\"sources\":{\"lib/erc1363-payable-token/contracts/token/ERC1363/ERC1363.sol\":{\"keccak256\":\"0x3df1f220528d08ee3f2beac71e875d70b86fdb425bf41340d42ae6dc1f24c67d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1ec70c27f13185cb3d43f1d037935a9407a189411bb9bcf11c3aeb6d5a9e2f8d\",\"dweb:/ipfs/QmUgNzpRhB3AX6Zm1Q4tGq1zm7g5BDaznd2fF4R6DiSHg7\"]},\"lib/erc1363-payable-token/contracts/token/ERC1363/IERC1363.sol\":{\"keccak256\":\"0x453cbc96319a4354ba7c6501d2f52c2914647554d71616838b37a0c38a272ceb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://49ceb84e994997f2752b6b1e05a6fc5cb1bffaf9d97b1372a5965054ade911f4\",\"dweb:/ipfs/QmasBjPs9Gk2XWEfs887UXGHCrivCypKmcQXgYRJ5qbSpG\"]},\"lib/erc1363-payable-token/contracts/token/ERC1363/IERC1363Receiver.sol\":{\"keccak256\":\"0xca0dfafb99619afc898862cb8d92ccf9026deb6ddc2951f6f4110f59d03ad087\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b0466d5ae40a61a0dfce81caf7e294921dacf470e014462ffcaf18f1e4021465\",\"dweb:/ipfs/QmfMzueVhFnBfU7gm4vJ5dL63NmN9uLcCvd9xeKWy2UxzQ\"]},\"lib/erc1363-payable-token/contracts/token/ERC1363/IERC1363Spender.sol\":{\"keccak256\":\"0x658c0f04a96a6730fed0c94a29a8205d3198f07d02dfb0f8ee22527c1f1ca78e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://18d44b9b350b8b2737af168f9405e597ac6707ceeec667ada699d3939a7c649c\",\"dweb:/ipfs/Qmajo3GnJ6RgcDgYBx3UcYWMsoFcQCHf8eRiyXHHX2bacg\"]},\"lib/openzeppelin-contracts/contracts/security/ReentrancyGuard.sol\":{\"keccak256\":\"0x190dd6f8d592b7e4e930feb7f4313aeb8e1c4ad3154c27ce1cf6a512fc30d8cc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4ce8dfb62d0c4fa260d6eec8f1cd47f5f2a044e11bde5b31d18072fa6e7d9010\",\"dweb:/ipfs/QmTyFztU3tLEcEDnqqiaW4UJetqsU77LXc6pjc9oTXCK5u\"]},\"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0x4ffc0547c02ad22925310c585c0f166f8759e2648a09e9b489100c42f15dd98d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://15f52f51413a9de1ff191e2f6367c62178e1df7806d7880fe857a98b0b66253d\",\"dweb:/ipfs/QmaQG1fwfgUt5E9nu2cccFiV47B2V78MM1tCy1qB7n4MsH\"]},\"lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a7d5b1ef5d8d5889ad2ed89d8619c09383b80b72ab226e0fe7bde1636481e34\",\"dweb:/ipfs/QmebXWgtEfumQGBdVeM6c71McLixYXQP5Bk6kKXuoY4Bmr\"]},\"lib/openzeppelin-contracts/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x8de418a5503946cabe331f35fe242d3201a73f67f77aaeb7110acb1f30423aca\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a376d3dda2cb70536c0a45c208b29b34ac560c4cb4f513a42079f96ba47d2dd\",\"dweb:/ipfs/QmZQg6gn1sUpM8wHzwNvSnihumUCAhxD119MpXeKp8B9s8\"]},\"lib/openzeppelin-contracts/contracts/utils/Address.sol\":{\"keccak256\":\"0xf96f969e24029d43d0df89e59d365f277021dac62b48e1c1e3ebe0acdd7f1ca1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ec772b45a624be516f1c81970caa8a2e144301e9d0921cbc1a2789fef39a1269\",\"dweb:/ipfs/QmNyjwxCrGhQMyzLD93oUobJXVe9ceJvRvfXwbEtuxPiEj\"]},\"lib/openzeppelin-contracts/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]},\"lib/openzeppelin-contracts/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0xd10975de010d89fd1c78dc5e8a9a7e7f496198085c151648f20cba166b32582b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fb0048dee081f6fffa5f74afc3fb328483c2a30504e94a0ddd2a5114d731ec4d\",\"dweb:/ipfs/QmZptt1nmYoA5SgjwnSgWqgUSDgm4q52Yos3xhnMv3MV43\"]},\"lib/openzeppelin-contracts/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]},\"src/BondingToken.sol\":{\"keccak256\":\"0xe97f0af26dd38b03840000eb0af683a2054fd286ff100bd72f0f3af8493a12e7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9766a2fb71398ff3b0ae459a5b3d5add9609bf5683fee9bfa8aa846a4b929567\",\"dweb:/ipfs/QmeyqHyu7YJiBiyhPfhMW1UrbfLUjiPCUgaQLvngfvFvyG\"]},\"src/IBondingToken.sol\":{\"keccak256\":\"0x0ba024cd7ee1bf4bbbda17503a59408fb4cbcb1b943e482fe9c44da2e85dc919\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ae80d1168db695dc1626f4078e74158481e945155df455b92fa24f7f7dadc0be\",\"dweb:/ipfs/QmQ8pLNvXxGQabcng3MpFCix8FTeFfMs1h3118yjKnoGnJ\"]},\"src/utils/BondingCurve.sol\":{\"keccak256\":\"0xc1efa0b8be43fa7ac07111d794bc1ed836e46675cf63bda59a37fbb374dc1246\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://778c2ab294497cae9210434d7d80504c6a9c2f6432cad7b0437ab23a8e25e2e2\",\"dweb:/ipfs/QmWPnjEis86iwJXaJWyEfmBVAYaUEPNoWAe4KRw2zRLCWz\"]}},\"version\":1}",
  "metadata": {
    "compiler": {
      "version": "0.8.15+commit.e14f2714"
    },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "_name",
              "type": "string"
            },
            {
              "internalType": "string",
              "name": "_symbol",
              "type": "string"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "constructor"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "owner",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "spender",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "value",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "Approval",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "account",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "Buy",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "account",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "Sell",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "from",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "to",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "value",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "Transfer",
          "anonymous": false
        },
        {
          "inputs": [],
          "stateMutability": "payable",
          "type": "fallback"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "MAX_BUY_AMOUNT_PER_TX",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "MAX_SUPPLY_THRESHOLD",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "owner",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "spender",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "allowance",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "spender",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "approve",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "spender",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "approveAndCall",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "spender",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            },
            {
              "internalType": "bytes",
              "name": "data",
              "type": "bytes"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "approveAndCall",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "account",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "balanceOf",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            }
          ],
          "stateMutability": "payable",
          "type": "function",
          "name": "buy"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "calculatePriceForTokens",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "calculateTokensForPrice",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "decimals",
          "outputs": [
            {
              "internalType": "uint8",
              "name": "",
              "type": "uint8"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "spender",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "subtractedValue",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "decreaseAllowance",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "spender",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "addedValue",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "increaseAllowance",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "name",
          "outputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            },
            {
              "internalType": "bytes",
              "name": "",
              "type": "bytes"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "onTransferReceived",
          "outputs": [
            {
              "internalType": "bytes4",
              "name": "",
              "type": "bytes4"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "sell"
        },
        {
          "inputs": [
            {
              "internalType": "bytes4",
              "name": "interfaceId",
              "type": "bytes4"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "supportsInterface",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "symbol",
          "outputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "totalSupply",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "transfer",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "transferAndCall",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            },
            {
              "internalType": "bytes",
              "name": "data",
              "type": "bytes"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "transferAndCall",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "from",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "transferFrom",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "from",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            },
            {
              "internalType": "bytes",
              "name": "data",
              "type": "bytes"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "transferFromAndCall",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "from",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "transferFromAndCall",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "payable",
          "type": "receive"
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {
          "allowance(address,address)": {
            "details": "See {IERC20-allowance}."
          },
          "approve(address,uint256)": {
            "details": "See {IERC20-approve}. NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."
          },
          "approveAndCall(address,uint256)": {
            "details": "Approve spender to transfer tokens and then execute a callback on `spender`.",
            "params": {
              "amount": "The amount allowed to be transferred",
              "spender": "The address allowed to transfer to"
            },
            "returns": {
              "_0": "A boolean that indicates if the operation was successful."
            }
          },
          "approveAndCall(address,uint256,bytes)": {
            "details": "Approve spender to transfer tokens and then execute a callback on `spender`.",
            "params": {
              "amount": "The amount allowed to be transferred.",
              "data": "Additional data with no specified format.",
              "spender": "The address allowed to transfer to."
            },
            "returns": {
              "_0": "A boolean that indicates if the operation was successful."
            }
          },
          "balanceOf(address)": {
            "details": "See {IERC20-balanceOf}."
          },
          "buy(uint256)": {
            "details": "Allows a user to buy tokens by sending Ether to the contract.",
            "params": {
              "amount": "The amount of tokens to buy."
            }
          },
          "calculatePriceForTokens(uint256)": {
            "details": "Calculates the cost of buying a given amount of tokens.",
            "params": {
              "amount": "The amount of tokens to calculate the cost for."
            },
            "returns": {
              "_0": "The cost of buying the given amount of tokens."
            }
          },
          "calculateTokensForPrice(uint256)": {
            "details": "Calculates the amount of tokens that can be bought with a given amount of Ether.",
            "params": {
              "amount": "The amount of Ether to calculate the token amount for."
            },
            "returns": {
              "_0": "The amount of tokens that can be bought with the given amount of Ether."
            }
          },
          "constructor": {
            "details": "Initializes the contract with the given name and symbol.",
            "params": {
              "_name": "The name of the token.",
              "_symbol": "The symbol of the token."
            }
          },
          "decimals()": {
            "details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {ERC20} uses, unless this function is overridden; NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
          },
          "decreaseAllowance(address,uint256)": {
            "details": "Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`."
          },
          "increaseAllowance(address,uint256)": {
            "details": "Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address."
          },
          "name()": {
            "details": "Returns the name of the token."
          },
          "onTransferReceived(address,address,uint256,bytes)": {
            "details": "Called by ERC1363 to indicate that tokens have been transferred to the contract."
          },
          "sell(uint256)": {
            "details": "Allows a user to sell tokens back to the contract in exchange for Ether.",
            "params": {
              "amount": "The amount of tokens to sell."
            }
          },
          "supportsInterface(bytes4)": {
            "details": "Checks if a contract implements the IBondingToken interface.",
            "params": {
              "interfaceId": "The interface ID being checked."
            },
            "returns": {
              "_0": "A boolean indicating if the contract implements the IBondingToken interface."
            }
          },
          "symbol()": {
            "details": "Returns the symbol of the token, usually a shorter version of the name."
          },
          "totalSupply()": {
            "details": "See {IERC20-totalSupply}."
          },
          "transfer(address,uint256)": {
            "details": "See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `amount`."
          },
          "transferAndCall(address,uint256)": {
            "details": "Transfer tokens to a specified address and then execute a callback on `to`.",
            "params": {
              "amount": "The amount to be transferred.",
              "to": "The address to transfer to."
            },
            "returns": {
              "_0": "A boolean that indicates if the operation was successful."
            }
          },
          "transferAndCall(address,uint256,bytes)": {
            "details": "Transfer tokens to a specified address and then execute a callback on `to`.",
            "params": {
              "amount": "The amount to be transferred",
              "data": "Additional data with no specified format",
              "to": "The address to transfer to"
            },
            "returns": {
              "_0": "A boolean that indicates if the operation was successful."
            }
          },
          "transferFrom(address,address,uint256)": {
            "details": "See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `amount`. - the caller must have allowance for ``from``'s tokens of at least `amount`."
          },
          "transferFromAndCall(address,address,uint256)": {
            "details": "Transfer tokens from one address to another and then execute a callback on `to`.",
            "params": {
              "amount": "The amount of tokens to be transferred",
              "from": "The address which you want to send tokens from",
              "to": "The address which you want to transfer to"
            },
            "returns": {
              "_0": "A boolean that indicates if the operation was successful."
            }
          },
          "transferFromAndCall(address,address,uint256,bytes)": {
            "details": "Transfer tokens from one address to another and then execute a callback on `to`.",
            "params": {
              "amount": "The amount of tokens to be transferred",
              "data": "Additional data with no specified format",
              "from": "The address which you want to send tokens from",
              "to": "The address which you want to transfer to"
            },
            "returns": {
              "_0": "A boolean that indicates if the operation was successful."
            }
          }
        },
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {},
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        ":@openzeppelin/=lib/openzeppelin-contracts/",
        ":ds-test/=lib/forge-std/lib/ds-test/src/",
        ":erc1363-payable-token/=lib/erc1363-payable-token/",
        ":erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/",
        ":forge-std/=lib/forge-std/src/",
        ":openzeppelin-contracts/=lib/openzeppelin-contracts/"
      ],
      "optimizer": {
        "enabled": true,
        "runs": 200
      },
      "metadata": {
        "bytecodeHash": "ipfs"
      },
      "compilationTarget": {
        "src/BondingToken.sol": "BondingToken"
      },
      "libraries": {}
    },
    "sources": {
      "lib/erc1363-payable-token/contracts/token/ERC1363/ERC1363.sol": {
        "keccak256": "0x3df1f220528d08ee3f2beac71e875d70b86fdb425bf41340d42ae6dc1f24c67d",
        "urls": [
          "bzz-raw://1ec70c27f13185cb3d43f1d037935a9407a189411bb9bcf11c3aeb6d5a9e2f8d",
          "dweb:/ipfs/QmUgNzpRhB3AX6Zm1Q4tGq1zm7g5BDaznd2fF4R6DiSHg7"
        ],
        "license": "MIT"
      },
      "lib/erc1363-payable-token/contracts/token/ERC1363/IERC1363.sol": {
        "keccak256": "0x453cbc96319a4354ba7c6501d2f52c2914647554d71616838b37a0c38a272ceb",
        "urls": [
          "bzz-raw://49ceb84e994997f2752b6b1e05a6fc5cb1bffaf9d97b1372a5965054ade911f4",
          "dweb:/ipfs/QmasBjPs9Gk2XWEfs887UXGHCrivCypKmcQXgYRJ5qbSpG"
        ],
        "license": "MIT"
      },
      "lib/erc1363-payable-token/contracts/token/ERC1363/IERC1363Receiver.sol": {
        "keccak256": "0xca0dfafb99619afc898862cb8d92ccf9026deb6ddc2951f6f4110f59d03ad087",
        "urls": [
          "bzz-raw://b0466d5ae40a61a0dfce81caf7e294921dacf470e014462ffcaf18f1e4021465",
          "dweb:/ipfs/QmfMzueVhFnBfU7gm4vJ5dL63NmN9uLcCvd9xeKWy2UxzQ"
        ],
        "license": "MIT"
      },
      "lib/erc1363-payable-token/contracts/token/ERC1363/IERC1363Spender.sol": {
        "keccak256": "0x658c0f04a96a6730fed0c94a29a8205d3198f07d02dfb0f8ee22527c1f1ca78e",
        "urls": [
          "bzz-raw://18d44b9b350b8b2737af168f9405e597ac6707ceeec667ada699d3939a7c649c",
          "dweb:/ipfs/Qmajo3GnJ6RgcDgYBx3UcYWMsoFcQCHf8eRiyXHHX2bacg"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/security/ReentrancyGuard.sol": {
        "keccak256": "0x190dd6f8d592b7e4e930feb7f4313aeb8e1c4ad3154c27ce1cf6a512fc30d8cc",
        "urls": [
          "bzz-raw://4ce8dfb62d0c4fa260d6eec8f1cd47f5f2a044e11bde5b31d18072fa6e7d9010",
          "dweb:/ipfs/QmTyFztU3tLEcEDnqqiaW4UJetqsU77LXc6pjc9oTXCK5u"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol": {
        "keccak256": "0x4ffc0547c02ad22925310c585c0f166f8759e2648a09e9b489100c42f15dd98d",
        "urls": [
          "bzz-raw://15f52f51413a9de1ff191e2f6367c62178e1df7806d7880fe857a98b0b66253d",
          "dweb:/ipfs/QmaQG1fwfgUt5E9nu2cccFiV47B2V78MM1tCy1qB7n4MsH"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol": {
        "keccak256": "0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b",
        "urls": [
          "bzz-raw://5a7d5b1ef5d8d5889ad2ed89d8619c09383b80b72ab226e0fe7bde1636481e34",
          "dweb:/ipfs/QmebXWgtEfumQGBdVeM6c71McLixYXQP5Bk6kKXuoY4Bmr"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
        "keccak256": "0x8de418a5503946cabe331f35fe242d3201a73f67f77aaeb7110acb1f30423aca",
        "urls": [
          "bzz-raw://5a376d3dda2cb70536c0a45c208b29b34ac560c4cb4f513a42079f96ba47d2dd",
          "dweb:/ipfs/QmZQg6gn1sUpM8wHzwNvSnihumUCAhxD119MpXeKp8B9s8"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/Address.sol": {
        "keccak256": "0xf96f969e24029d43d0df89e59d365f277021dac62b48e1c1e3ebe0acdd7f1ca1",
        "urls": [
          "bzz-raw://ec772b45a624be516f1c81970caa8a2e144301e9d0921cbc1a2789fef39a1269",
          "dweb:/ipfs/QmNyjwxCrGhQMyzLD93oUobJXVe9ceJvRvfXwbEtuxPiEj"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/Context.sol": {
        "keccak256": "0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7",
        "urls": [
          "bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92",
          "dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/introspection/ERC165.sol": {
        "keccak256": "0xd10975de010d89fd1c78dc5e8a9a7e7f496198085c151648f20cba166b32582b",
        "urls": [
          "bzz-raw://fb0048dee081f6fffa5f74afc3fb328483c2a30504e94a0ddd2a5114d731ec4d",
          "dweb:/ipfs/QmZptt1nmYoA5SgjwnSgWqgUSDgm4q52Yos3xhnMv3MV43"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/introspection/IERC165.sol": {
        "keccak256": "0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1",
        "urls": [
          "bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f",
          "dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy"
        ],
        "license": "MIT"
      },
      "src/BondingToken.sol": {
        "keccak256": "0xe97f0af26dd38b03840000eb0af683a2054fd286ff100bd72f0f3af8493a12e7",
        "urls": [
          "bzz-raw://9766a2fb71398ff3b0ae459a5b3d5add9609bf5683fee9bfa8aa846a4b929567",
          "dweb:/ipfs/QmeyqHyu7YJiBiyhPfhMW1UrbfLUjiPCUgaQLvngfvFvyG"
        ],
        "license": "MIT"
      },
      "src/IBondingToken.sol": {
        "keccak256": "0x0ba024cd7ee1bf4bbbda17503a59408fb4cbcb1b943e482fe9c44da2e85dc919",
        "urls": [
          "bzz-raw://ae80d1168db695dc1626f4078e74158481e945155df455b92fa24f7f7dadc0be",
          "dweb:/ipfs/QmQ8pLNvXxGQabcng3MpFCix8FTeFfMs1h3118yjKnoGnJ"
        ],
        "license": "MIT"
      },
      "src/utils/BondingCurve.sol": {
        "keccak256": "0xc1efa0b8be43fa7ac07111d794bc1ed836e46675cf63bda59a37fbb374dc1246",
        "urls": [
          "bzz-raw://778c2ab294497cae9210434d7d80504c6a9c2f6432cad7b0437ab23a8e25e2e2",
          "dweb:/ipfs/QmWPnjEis86iwJXaJWyEfmBVAYaUEPNoWAe4KRw2zRLCWz"
        ],
        "license": "MIT"
      }
    },
    "version": 1
  },
  "ast": {
    "absolutePath": "src/BondingToken.sol",
    "id": 1959,
    "exportedSymbols": {
      "Address": [
        1508
      ],
      "BondingCurve": [
        2260
      ],
      "BondingToken": [
        1958
      ],
      "Context": [
        1530
      ],
      "ERC1363": [
        320
      ],
      "ERC165": [
        1554
      ],
      "ERC20": [
        1075
      ],
      "IBondingToken": [
        2004
      ],
      "IERC1363": [
        400
      ],
      "IERC1363Receiver": [
        418
      ],
      "IERC1363Spender": [
        434
      ],
      "IERC165": [
        1566
      ],
      "IERC20": [
        1153
      ],
      "IERC20Metadata": [
        1178
      ],
      "ReentrancyGuard": [
        488
      ]
    },
    "nodeType": "SourceUnit",
    "src": "32:6279:12",
    "nodes": [
      {
        "id": 1568,
        "nodeType": "PragmaDirective",
        "src": "32:23:12",
        "nodes": [],
        "literals": [
          "solidity",
          "0.8",
          ".15"
        ]
      },
      {
        "id": 1569,
        "nodeType": "ImportDirective",
        "src": "57:67:12",
        "nodes": [],
        "absolutePath": "lib/erc1363-payable-token/contracts/token/ERC1363/ERC1363.sol",
        "file": "erc1363-payable-token/contracts/token/ERC1363/ERC1363.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 1959,
        "sourceUnit": 321,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 1570,
        "nodeType": "ImportDirective",
        "src": "125:76:12",
        "nodes": [],
        "absolutePath": "lib/erc1363-payable-token/contracts/token/ERC1363/IERC1363Receiver.sol",
        "file": "erc1363-payable-token/contracts/token/ERC1363/IERC1363Receiver.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 1959,
        "sourceUnit": 419,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 1571,
        "nodeType": "ImportDirective",
        "src": "202:51:12",
        "nodes": [],
        "absolutePath": "lib/openzeppelin-contracts/contracts/utils/Address.sol",
        "file": "@openzeppelin/contracts/utils/Address.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 1959,
        "sourceUnit": 1509,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 1572,
        "nodeType": "ImportDirective",
        "src": "254:62:12",
        "nodes": [],
        "absolutePath": "lib/openzeppelin-contracts/contracts/security/ReentrancyGuard.sol",
        "file": "@openzeppelin/contracts/security/ReentrancyGuard.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 1959,
        "sourceUnit": 489,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 1573,
        "nodeType": "ImportDirective",
        "src": "317:29:12",
        "nodes": [],
        "absolutePath": "src/IBondingToken.sol",
        "file": "./IBondingToken.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 1959,
        "sourceUnit": 2005,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 1574,
        "nodeType": "ImportDirective",
        "src": "347:34:12",
        "nodes": [],
        "absolutePath": "src/utils/BondingCurve.sol",
        "file": "./utils/BondingCurve.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 1959,
        "sourceUnit": 2261,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 1958,
        "nodeType": "ContractDefinition",
        "src": "760:5550:12",
        "nodes": [
          {
            "id": 1586,
            "nodeType": "VariableDeclaration",
            "src": "865:61:12",
            "nodes": [],
            "constant": true,
            "functionSelector": "54d0a685",
            "mutability": "constant",
            "name": "MAX_BUY_AMOUNT_PER_TX",
            "nameLocation": "889:21:12",
            "scope": 1958,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 1584,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "865:7:12",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "hexValue": "315f3030305f3030305f303030",
              "id": 1585,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "913:13:12",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_1000000000_by_1",
                "typeString": "int_const 1000000000"
              },
              "value": "1_000_000_000"
            },
            "visibility": "public"
          },
          {
            "id": 1589,
            "nodeType": "VariableDeclaration",
            "src": "932:64:12",
            "nodes": [],
            "constant": true,
            "functionSelector": "b4a0b8c7",
            "mutability": "constant",
            "name": "MAX_SUPPLY_THRESHOLD",
            "nameLocation": "956:20:12",
            "scope": 1958,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 1587,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "932:7:12",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "hexValue": "315f3030305f3030305f3030305f303030",
              "id": 1588,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "979:17:12",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_1000000000000_by_1",
                "typeString": "int_const 1000000000000"
              },
              "value": "1_000_000_000_000"
            },
            "visibility": "public"
          },
          {
            "id": 1605,
            "nodeType": "ModifierDefinition",
            "src": "1079:114:12",
            "nodes": [],
            "body": {
              "id": 1604,
              "nodeType": "Block",
              "src": "1107:86:12",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 1599,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 1593,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "1125:3:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 1594,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "1125:10:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "arguments": [
                            {
                              "id": 1597,
                              "name": "this",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -28,
                              "src": "1147:4:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_BondingToken_$1958",
                                "typeString": "contract BondingToken"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_BondingToken_$1958",
                                "typeString": "contract BondingToken"
                              }
                            ],
                            "id": 1596,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "1139:7:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 1595,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "1139:7:12",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 1598,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1139:13:12",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "1125:27:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4f6e6c7920616c6c6f77656420746f6b656e",
                        "id": 1600,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1154:20:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_825629458be90bfd2bb7acdc291ca24fe49ea08ef5b19fa90dc883d02cb0ac48",
                          "typeString": "literal_string \"Only allowed token\""
                        },
                        "value": "Only allowed token"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_825629458be90bfd2bb7acdc291ca24fe49ea08ef5b19fa90dc883d02cb0ac48",
                          "typeString": "literal_string \"Only allowed token\""
                        }
                      ],
                      "id": 1592,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "1117:7:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1601,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1117:58:12",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1602,
                  "nodeType": "ExpressionStatement",
                  "src": "1117:58:12"
                },
                {
                  "id": 1603,
                  "nodeType": "PlaceholderStatement",
                  "src": "1185:1:12"
                }
              ]
            },
            "documentation": {
              "id": 1590,
              "nodeType": "StructuredDocumentation",
              "src": "1003:71:12",
              "text": " @dev Throws if the caller is not the token contract."
            },
            "name": "onlyAllowedToken",
            "nameLocation": "1088:16:12",
            "parameters": {
              "id": 1591,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1104:2:12"
            },
            "virtual": false,
            "visibility": "internal"
          },
          {
            "id": 1618,
            "nodeType": "FunctionDefinition",
            "src": "1374:102:12",
            "nodes": [],
            "body": {
              "id": 1617,
              "nodeType": "Block",
              "src": "1474:2:12",
              "nodes": [],
              "statements": []
            },
            "documentation": {
              "id": 1606,
              "nodeType": "StructuredDocumentation",
              "src": "1199:170:12",
              "text": " @dev Initializes the contract with the given name and symbol.\n @param _name The name of the token.\n @param _symbol The symbol of the token."
            },
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 1613,
                    "name": "_name",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 1608,
                    "src": "1458:5:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  },
                  {
                    "id": 1614,
                    "name": "_symbol",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 1610,
                    "src": "1465:7:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  }
                ],
                "id": 1615,
                "kind": "baseConstructorSpecifier",
                "modifierName": {
                  "id": 1612,
                  "name": "ERC20",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 1075,
                  "src": "1452:5:12"
                },
                "nodeType": "ModifierInvocation",
                "src": "1452:21:12"
              }
            ],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "parameters": {
              "id": 1611,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1608,
                  "mutability": "mutable",
                  "name": "_name",
                  "nameLocation": "1409:5:12",
                  "nodeType": "VariableDeclaration",
                  "scope": 1618,
                  "src": "1395:19:12",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 1607,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1395:6:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1610,
                  "mutability": "mutable",
                  "name": "_symbol",
                  "nameLocation": "1438:7:12",
                  "nodeType": "VariableDeclaration",
                  "scope": 1618,
                  "src": "1424:21:12",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 1609,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1424:6:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1385:66:12"
            },
            "returnParameters": {
              "id": 1616,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1474:0:12"
            },
            "scope": 1958,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 1641,
            "nodeType": "FunctionDefinition",
            "src": "1721:240:12",
            "nodes": [],
            "body": {
              "id": 1640,
              "nodeType": "Block",
              "src": "1827:134:12",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "commonType": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "id": 1638,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "commonType": {
                        "typeIdentifier": "t_bytes4",
                        "typeString": "bytes4"
                      },
                      "id": 1633,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 1628,
                        "name": "interfaceId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1621,
                        "src": "1856:11:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes4",
                          "typeString": "bytes4"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "==",
                      "rightExpression": {
                        "expression": {
                          "arguments": [
                            {
                              "id": 1630,
                              "name": "IBondingToken",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2004,
                              "src": "1876:13:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_IBondingToken_$2004_$",
                                "typeString": "type(contract IBondingToken)"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_type$_t_contract$_IBondingToken_$2004_$",
                                "typeString": "type(contract IBondingToken)"
                              }
                            ],
                            "id": 1629,
                            "name": "type",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -27,
                            "src": "1871:4:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_metatype_pure$__$returns$__$",
                              "typeString": "function () pure"
                            }
                          },
                          "id": 1631,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1871:19:12",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_meta_type_t_contract$_IBondingToken_$2004",
                            "typeString": "type(contract IBondingToken)"
                          }
                        },
                        "id": 1632,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "memberName": "interfaceId",
                        "nodeType": "MemberAccess",
                        "src": "1871:31:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes4",
                          "typeString": "bytes4"
                        }
                      },
                      "src": "1856:46:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "||",
                    "rightExpression": {
                      "arguments": [
                        {
                          "id": 1636,
                          "name": "interfaceId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1621,
                          "src": "1942:11:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes4",
                            "typeString": "bytes4"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_bytes4",
                            "typeString": "bytes4"
                          }
                        ],
                        "expression": {
                          "id": 1634,
                          "name": "super",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -25,
                          "src": "1918:5:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_super$_BondingToken_$1958_$",
                            "typeString": "type(contract super BondingToken)"
                          }
                        },
                        "id": 1635,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "supportsInterface",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 41,
                        "src": "1918:23:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_view$_t_bytes4_$returns$_t_bool_$",
                          "typeString": "function (bytes4) view returns (bool)"
                        }
                      },
                      "id": 1637,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1918:36:12",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "1856:98:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 1627,
                  "id": 1639,
                  "nodeType": "Return",
                  "src": "1837:117:12"
                }
              ]
            },
            "baseFunctions": [
              41
            ],
            "documentation": {
              "id": 1619,
              "nodeType": "StructuredDocumentation",
              "src": "1482:234:12",
              "text": " @dev Checks if a contract implements the IBondingToken interface.\n @param interfaceId The interface ID being checked.\n @return A boolean indicating if the contract implements the IBondingToken interface."
            },
            "functionSelector": "01ffc9a7",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "supportsInterface",
            "nameLocation": "1730:17:12",
            "overrides": {
              "id": 1624,
              "nodeType": "OverrideSpecifier",
              "overrides": [
                {
                  "id": 1623,
                  "name": "ERC1363",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 320,
                  "src": "1803:7:12"
                }
              ],
              "src": "1794:17:12"
            },
            "parameters": {
              "id": 1622,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1621,
                  "mutability": "mutable",
                  "name": "interfaceId",
                  "nameLocation": "1764:11:12",
                  "nodeType": "VariableDeclaration",
                  "scope": 1641,
                  "src": "1757:18:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes4",
                    "typeString": "bytes4"
                  },
                  "typeName": {
                    "id": 1620,
                    "name": "bytes4",
                    "nodeType": "ElementaryTypeName",
                    "src": "1757:6:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes4",
                      "typeString": "bytes4"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1747:34:12"
            },
            "returnParameters": {
              "id": 1627,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1626,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1641,
                  "src": "1821:4:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 1625,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "1821:4:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1820:6:12"
            },
            "scope": 1958,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 1678,
            "nodeType": "FunctionDefinition",
            "src": "2107:272:12",
            "nodes": [],
            "body": {
              "id": 1677,
              "nodeType": "Block",
              "src": "2164:215:12",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 1653,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 1650,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "2182:3:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 1651,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "value",
                          "nodeType": "MemberAccess",
                          "src": "2182:9:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 1652,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "2194:1:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "2182:13:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "496e73756666696369656e742066756e6473",
                        "id": 1654,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2197:20:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_63452317cb6d597bef833f023ed2962a84dbd24c571e27629ed1e3056d6cfd8d",
                          "typeString": "literal_string \"Insufficient funds\""
                        },
                        "value": "Insufficient funds"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_63452317cb6d597bef833f023ed2962a84dbd24c571e27629ed1e3056d6cfd8d",
                          "typeString": "literal_string \"Insufficient funds\""
                        }
                      ],
                      "id": 1649,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "2174:7:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1655,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2174:44:12",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1656,
                  "nodeType": "ExpressionStatement",
                  "src": "2174:44:12"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 1660,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 1658,
                          "name": "amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1644,
                          "src": "2236:6:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 1659,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "2245:1:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "2236:10:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "416d6f756e74206973207a65726f",
                        "id": 1661,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2248:16:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_8955ab95281aea4ffc58a5f8944088fd3b4a14fefa4e2498e09100f16c46383c",
                          "typeString": "literal_string \"Amount is zero\""
                        },
                        "value": "Amount is zero"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_8955ab95281aea4ffc58a5f8944088fd3b4a14fefa4e2498e09100f16c46383c",
                          "typeString": "literal_string \"Amount is zero\""
                        }
                      ],
                      "id": 1657,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "2228:7:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1662,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2228:37:12",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1663,
                  "nodeType": "ExpressionStatement",
                  "src": "2228:37:12"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 1667,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 1665,
                          "name": "amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1644,
                          "src": "2283:6:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<=",
                        "rightExpression": {
                          "id": 1666,
                          "name": "MAX_BUY_AMOUNT_PER_TX",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1586,
                          "src": "2293:21:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "2283:31:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "416d6f756e7420697320746f6f2068696768",
                        "id": 1668,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2316:20:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_a5ba1278ea568ec68a997b9afa9cf2ce89400efad585d31bf5e21fe968a01be3",
                          "typeString": "literal_string \"Amount is too high\""
                        },
                        "value": "Amount is too high"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_a5ba1278ea568ec68a997b9afa9cf2ce89400efad585d31bf5e21fe968a01be3",
                          "typeString": "literal_string \"Amount is too high\""
                        }
                      ],
                      "id": 1664,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "2275:7:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1669,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2275:62:12",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1670,
                  "nodeType": "ExpressionStatement",
                  "src": "2275:62:12"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 1672,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "2353:3:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 1673,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "2353:10:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 1674,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1644,
                        "src": "2365:6:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 1671,
                      "name": "_buy",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1738,
                      "src": "2348:4:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 1675,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2348:24:12",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1676,
                  "nodeType": "ExpressionStatement",
                  "src": "2348:24:12"
                }
              ]
            },
            "baseFunctions": [
              1981
            ],
            "documentation": {
              "id": 1642,
              "nodeType": "StructuredDocumentation",
              "src": "1967:135:12",
              "text": " @dev Allows a user to buy tokens by sending Ether to the contract.\n @param amount The amount of tokens to buy."
            },
            "functionSelector": "d96a094a",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 1647,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 1646,
                  "name": "nonReentrant",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 464,
                  "src": "2151:12:12"
                },
                "nodeType": "ModifierInvocation",
                "src": "2151:12:12"
              }
            ],
            "name": "buy",
            "nameLocation": "2116:3:12",
            "parameters": {
              "id": 1645,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1644,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "2128:6:12",
                  "nodeType": "VariableDeclaration",
                  "scope": 1678,
                  "src": "2120:14:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1643,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2120:7:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2119:16:12"
            },
            "returnParameters": {
              "id": 1648,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2164:0:12"
            },
            "scope": 1958,
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 1738,
            "nodeType": "FunctionDefinition",
            "src": "2568:475:12",
            "nodes": [],
            "body": {
              "id": 1737,
              "nodeType": "Block",
              "src": "2623:420:12",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    1687
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1687,
                      "mutability": "mutable",
                      "name": "cost",
                      "nameLocation": "2641:4:12",
                      "nodeType": "VariableDeclaration",
                      "scope": 1737,
                      "src": "2633:12:12",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1686,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "2633:7:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1691,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 1689,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1683,
                        "src": "2672:6:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 1688,
                      "name": "calculatePriceForTokens",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1861,
                      "src": "2648:23:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_uint256_$",
                        "typeString": "function (uint256) view returns (uint256)"
                      }
                    },
                    "id": 1690,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2648:31:12",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2633:46:12"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 1696,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 1693,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "2697:3:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 1694,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "value",
                          "nodeType": "MemberAccess",
                          "src": "2697:9:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "id": 1695,
                          "name": "cost",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1687,
                          "src": "2710:4:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "2697:17:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "496e73756666696369656e742066756e6473",
                        "id": 1697,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2716:20:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_63452317cb6d597bef833f023ed2962a84dbd24c571e27629ed1e3056d6cfd8d",
                          "typeString": "literal_string \"Insufficient funds\""
                        },
                        "value": "Insufficient funds"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_63452317cb6d597bef833f023ed2962a84dbd24c571e27629ed1e3056d6cfd8d",
                          "typeString": "literal_string \"Insufficient funds\""
                        }
                      ],
                      "id": 1692,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "2689:7:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1698,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2689:48:12",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1699,
                  "nodeType": "ExpressionStatement",
                  "src": "2689:48:12"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 1701,
                        "name": "account",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1681,
                        "src": "2753:7:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 1702,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1683,
                        "src": "2762:6:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 1700,
                      "name": "_mint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 892,
                      "src": "2747:5:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 1703,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2747:22:12",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1704,
                  "nodeType": "ExpressionStatement",
                  "src": "2747:22:12"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 1709,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 1706,
                            "name": "totalSupply",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 573,
                            "src": "2800:11:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
                              "typeString": "function () view returns (uint256)"
                            }
                          },
                          "id": 1707,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2800:13:12",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<=",
                        "rightExpression": {
                          "id": 1708,
                          "name": "MAX_SUPPLY_THRESHOLD",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1589,
                          "src": "2817:20:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "2800:37:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4d617820737570706c79207468726573686f6c642072656163686564",
                        "id": 1710,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2851:30:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_ffd9f488c95a29c65e1cf8adec60ca8a63a22a43274486f9f2ee9cb4bd095b53",
                          "typeString": "literal_string \"Max supply threshold reached\""
                        },
                        "value": "Max supply threshold reached"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_ffd9f488c95a29c65e1cf8adec60ca8a63a22a43274486f9f2ee9cb4bd095b53",
                          "typeString": "literal_string \"Max supply threshold reached\""
                        }
                      ],
                      "id": 1705,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "2779:7:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1711,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2779:112:12",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1712,
                  "nodeType": "ExpressionStatement",
                  "src": "2779:112:12"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 1716,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "expression": {
                        "id": 1713,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -15,
                        "src": "2905:3:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 1714,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "value",
                      "nodeType": "MemberAccess",
                      "src": "2905:9:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">",
                    "rightExpression": {
                      "id": 1715,
                      "name": "cost",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1687,
                      "src": "2917:4:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "2905:16:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1731,
                  "nodeType": "IfStatement",
                  "src": "2901:100:12",
                  "trueBody": {
                    "id": 1730,
                    "nodeType": "Block",
                    "src": "2923:78:12",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "id": 1722,
                                  "name": "account",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1681,
                                  "src": "2963:7:12",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 1721,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "2955:8:12",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_payable_$",
                                  "typeString": "type(address payable)"
                                },
                                "typeName": {
                                  "id": 1720,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "2955:8:12",
                                  "stateMutability": "payable",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 1723,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "2955:16:12",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            },
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 1727,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "expression": {
                                  "id": 1724,
                                  "name": "msg",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -15,
                                  "src": "2973:3:12",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_message",
                                    "typeString": "msg"
                                  }
                                },
                                "id": 1725,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "value",
                                "nodeType": "MemberAccess",
                                "src": "2973:9:12",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "-",
                              "rightExpression": {
                                "id": 1726,
                                "name": "cost",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1687,
                                "src": "2985:4:12",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "2973:16:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "id": 1717,
                              "name": "Address",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1508,
                              "src": "2937:7:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_Address_$1508_$",
                                "typeString": "type(library Address)"
                              }
                            },
                            "id": 1719,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sendValue",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 1230,
                            "src": "2937:17:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_payable_$_t_uint256_$returns$__$",
                              "typeString": "function (address payable,uint256)"
                            }
                          },
                          "id": 1728,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2937:53:12",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1729,
                        "nodeType": "ExpressionStatement",
                        "src": "2937:53:12"
                      }
                    ]
                  }
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 1733,
                        "name": "account",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1681,
                        "src": "3020:7:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 1734,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1683,
                        "src": "3029:6:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 1732,
                      "name": "Buy",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1968,
                      "src": "3016:3:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 1735,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3016:20:12",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1736,
                  "nodeType": "EmitStatement",
                  "src": "3011:25:12"
                }
              ]
            },
            "documentation": {
              "id": 1679,
              "nodeType": "StructuredDocumentation",
              "src": "2385:178:12",
              "text": " @dev Internal function to buy tokens.\n @param account The address of the account to receive the tokens.\n @param amount The amount of tokens to buy."
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_buy",
            "nameLocation": "2577:4:12",
            "parameters": {
              "id": 1684,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1681,
                  "mutability": "mutable",
                  "name": "account",
                  "nameLocation": "2590:7:12",
                  "nodeType": "VariableDeclaration",
                  "scope": 1738,
                  "src": "2582:15:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1680,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2582:7:12",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1683,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "2607:6:12",
                  "nodeType": "VariableDeclaration",
                  "scope": 1738,
                  "src": "2599:14:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1682,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2599:7:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2581:33:12"
            },
            "returnParameters": {
              "id": 1685,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2623:0:12"
            },
            "scope": 1958,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "private"
          },
          {
            "id": 1775,
            "nodeType": "FunctionDefinition",
            "src": "3201:262:12",
            "nodes": [],
            "body": {
              "id": 1774,
              "nodeType": "Block",
              "src": "3253:210:12",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 1752,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 1748,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "3281:3:12",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 1749,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "3281:10:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 1747,
                            "name": "balanceOf",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 587,
                            "src": "3271:9:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
                              "typeString": "function (address) view returns (uint256)"
                            }
                          },
                          "id": 1750,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3271:21:12",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "id": 1751,
                          "name": "amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1741,
                          "src": "3296:6:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "3271:31:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "496e73756666696369656e7420616d6f756e74",
                        "id": 1753,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3304:21:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_bf58beaf08663d37df7e1961d65d3eff91b12706dfa2eef26f7dde8f1653c496",
                          "typeString": "literal_string \"Insufficient amount\""
                        },
                        "value": "Insufficient amount"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_bf58beaf08663d37df7e1961d65d3eff91b12706dfa2eef26f7dde8f1653c496",
                          "typeString": "literal_string \"Insufficient amount\""
                        }
                      ],
                      "id": 1746,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "3263:7:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1754,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3263:63:12",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1755,
                  "nodeType": "ExpressionStatement",
                  "src": "3263:63:12"
                },
                {
                  "assignments": [
                    1757
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1757,
                      "mutability": "mutable",
                      "name": "success",
                      "nameLocation": "3342:7:12",
                      "nodeType": "VariableDeclaration",
                      "scope": 1774,
                      "src": "3337:12:12",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "typeName": {
                        "id": 1756,
                        "name": "bool",
                        "nodeType": "ElementaryTypeName",
                        "src": "3337:4:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1765,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 1761,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "3369:4:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_BondingToken_$1958",
                              "typeString": "contract BondingToken"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_BondingToken_$1958",
                              "typeString": "contract BondingToken"
                            }
                          ],
                          "id": 1760,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "3361:7:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 1759,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "3361:7:12",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 1762,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3361:13:12",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 1763,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1741,
                        "src": "3376:6:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 1758,
                      "name": "transfer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 612,
                      "src": "3352:8:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,uint256) returns (bool)"
                      }
                    },
                    "id": 1764,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3352:31:12",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3337:46:12"
                },
                {
                  "condition": {
                    "id": 1767,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "UnaryOperation",
                    "operator": "!",
                    "prefix": true,
                    "src": "3397:8:12",
                    "subExpression": {
                      "id": 1766,
                      "name": "success",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1757,
                      "src": "3398:7:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1773,
                  "nodeType": "IfStatement",
                  "src": "3393:64:12",
                  "trueBody": {
                    "id": 1772,
                    "nodeType": "Block",
                    "src": "3407:50:12",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "hexValue": "5472616e73666572206661696c6564",
                              "id": 1769,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "3428:17:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_25adaa6d082ce15f901e0d8a3d393e7462ef9edf2e6bc8321fa14d1615b6fc51",
                                "typeString": "literal_string \"Transfer failed\""
                              },
                              "value": "Transfer failed"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_stringliteral_25adaa6d082ce15f901e0d8a3d393e7462ef9edf2e6bc8321fa14d1615b6fc51",
                                "typeString": "literal_string \"Transfer failed\""
                              }
                            ],
                            "id": 1768,
                            "name": "revert",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -19,
                              -19
                            ],
                            "referencedDeclaration": -19,
                            "src": "3421:6:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (string memory) pure"
                            }
                          },
                          "id": 1770,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3421:25:12",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1771,
                        "nodeType": "ExpressionStatement",
                        "src": "3421:25:12"
                      }
                    ]
                  }
                }
              ]
            },
            "baseFunctions": [
              1987
            ],
            "documentation": {
              "id": 1739,
              "nodeType": "StructuredDocumentation",
              "src": "3049:147:12",
              "text": " @dev Allows a user to sell tokens back to the contract in exchange for Ether.\n @param amount The amount of tokens to sell."
            },
            "functionSelector": "e4849b32",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 1744,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 1743,
                  "name": "nonReentrant",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 464,
                  "src": "3240:12:12"
                },
                "nodeType": "ModifierInvocation",
                "src": "3240:12:12"
              }
            ],
            "name": "sell",
            "nameLocation": "3210:4:12",
            "parameters": {
              "id": 1742,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1741,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "3223:6:12",
                  "nodeType": "VariableDeclaration",
                  "scope": 1775,
                  "src": "3215:14:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1740,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3215:7:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3214:16:12"
            },
            "returnParameters": {
              "id": 1745,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3253:0:12"
            },
            "scope": 1958,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 1813,
            "nodeType": "FunctionDefinition",
            "src": "3653:249:12",
            "nodes": [],
            "body": {
              "id": 1812,
              "nodeType": "Block",
              "src": "3709:193:12",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 1786,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "3733:4:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_BondingToken_$1958",
                              "typeString": "contract BondingToken"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_BondingToken_$1958",
                              "typeString": "contract BondingToken"
                            }
                          ],
                          "id": 1785,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "3725:7:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 1784,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "3725:7:12",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 1787,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3725:13:12",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 1788,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1780,
                        "src": "3740:6:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 1783,
                      "name": "_burn",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 964,
                      "src": "3719:5:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 1789,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3719:28:12",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1790,
                  "nodeType": "ExpressionStatement",
                  "src": "3719:28:12"
                },
                {
                  "assignments": [
                    1792
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1792,
                      "mutability": "mutable",
                      "name": "payout",
                      "nameLocation": "3765:6:12",
                      "nodeType": "VariableDeclaration",
                      "scope": 1812,
                      "src": "3757:14:12",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1791,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "3757:7:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1796,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 1794,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1780,
                        "src": "3798:6:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 1793,
                      "name": "calculatePriceForTokens",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1861,
                      "src": "3774:23:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_uint256_$",
                        "typeString": "function (uint256) view returns (uint256)"
                      }
                    },
                    "id": 1795,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3774:31:12",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3757:48:12"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 1802,
                            "name": "account",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1778,
                            "src": "3841:7:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 1801,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "3833:8:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_payable_$",
                            "typeString": "type(address payable)"
                          },
                          "typeName": {
                            "id": 1800,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "3833:8:12",
                            "stateMutability": "payable",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 1803,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3833:16:12",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "id": 1804,
                        "name": "payout",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1792,
                        "src": "3851:6:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 1797,
                        "name": "Address",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1508,
                        "src": "3815:7:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_Address_$1508_$",
                          "typeString": "type(library Address)"
                        }
                      },
                      "id": 1799,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sendValue",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1230,
                      "src": "3815:17:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_payable_$_t_uint256_$returns$__$",
                        "typeString": "function (address payable,uint256)"
                      }
                    },
                    "id": 1805,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3815:43:12",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1806,
                  "nodeType": "ExpressionStatement",
                  "src": "3815:43:12"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 1808,
                        "name": "account",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1778,
                        "src": "3879:7:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 1809,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1780,
                        "src": "3888:6:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 1807,
                      "name": "Sell",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1975,
                      "src": "3874:4:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 1810,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3874:21:12",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1811,
                  "nodeType": "EmitStatement",
                  "src": "3869:26:12"
                }
              ]
            },
            "documentation": {
              "id": 1776,
              "nodeType": "StructuredDocumentation",
              "src": "3469:179:12",
              "text": " @dev Internal function to sell tokens.\n @param account The address of the account to receive the Ether.\n @param amount The amount of tokens to sell."
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_sell",
            "nameLocation": "3662:5:12",
            "parameters": {
              "id": 1781,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1778,
                  "mutability": "mutable",
                  "name": "account",
                  "nameLocation": "3676:7:12",
                  "nodeType": "VariableDeclaration",
                  "scope": 1813,
                  "src": "3668:15:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1777,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3668:7:12",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1780,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "3693:6:12",
                  "nodeType": "VariableDeclaration",
                  "scope": 1813,
                  "src": "3685:14:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1779,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3685:7:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3667:33:12"
            },
            "returnParameters": {
              "id": 1782,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3709:0:12"
            },
            "scope": 1958,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "private"
          },
          {
            "id": 1845,
            "nodeType": "FunctionDefinition",
            "src": "4243:226:12",
            "nodes": [],
            "body": {
              "id": 1844,
              "nodeType": "Block",
              "src": "4362:107:12",
              "nodes": [],
              "statements": [
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "id": 1836,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "commonType": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "id": 1829,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 1824,
                        "name": "from",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1816,
                        "src": "4376:4:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "!=",
                      "rightExpression": {
                        "arguments": [
                          {
                            "hexValue": "30",
                            "id": 1827,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "4392:1:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "id": 1826,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "4384:7:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 1825,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "4384:7:12",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 1828,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4384:10:12",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "src": "4376:18:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "&&",
                    "rightExpression": {
                      "commonType": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "id": 1835,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 1830,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1818,
                        "src": "4398:2:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "==",
                      "rightExpression": {
                        "arguments": [
                          {
                            "id": 1833,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "4412:4:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_BondingToken_$1958",
                              "typeString": "contract BondingToken"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_BondingToken_$1958",
                              "typeString": "contract BondingToken"
                            }
                          ],
                          "id": 1832,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "4404:7:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 1831,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "4404:7:12",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 1834,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4404:13:12",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "src": "4398:19:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "4376:41:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1843,
                  "nodeType": "IfStatement",
                  "src": "4372:91:12",
                  "trueBody": {
                    "id": 1842,
                    "nodeType": "Block",
                    "src": "4419:44:12",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 1838,
                              "name": "from",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1816,
                              "src": "4439:4:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 1839,
                              "name": "amount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1820,
                              "src": "4445:6:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 1837,
                            "name": "_sell",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1813,
                            "src": "4433:5:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (address,uint256)"
                            }
                          },
                          "id": 1840,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4433:19:12",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1841,
                        "nodeType": "ExpressionStatement",
                        "src": "4433:19:12"
                      }
                    ]
                  }
                }
              ]
            },
            "baseFunctions": [
              1074
            ],
            "documentation": {
              "id": 1814,
              "nodeType": "StructuredDocumentation",
              "src": "3908:330:12",
              "text": " @dev Overrides the ERC20 _afterTokenTransfer function to sell tokens when\n they are transferred to the contract.\n @param from The address of the account sending the tokens.\n @param to The address of the account receiving the tokens.\n @param amount The amount of tokens being transferred."
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_afterTokenTransfer",
            "nameLocation": "4252:19:12",
            "overrides": {
              "id": 1822,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "4353:8:12"
            },
            "parameters": {
              "id": 1821,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1816,
                  "mutability": "mutable",
                  "name": "from",
                  "nameLocation": "4289:4:12",
                  "nodeType": "VariableDeclaration",
                  "scope": 1845,
                  "src": "4281:12:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1815,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4281:7:12",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1818,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "4311:2:12",
                  "nodeType": "VariableDeclaration",
                  "scope": 1845,
                  "src": "4303:10:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1817,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4303:7:12",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1820,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "4331:6:12",
                  "nodeType": "VariableDeclaration",
                  "scope": 1845,
                  "src": "4323:14:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1819,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4323:7:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4271:72:12"
            },
            "returnParameters": {
              "id": 1823,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4362:0:12"
            },
            "scope": 1958,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "id": 1861,
            "nodeType": "FunctionDefinition",
            "src": "4690:176:12",
            "nodes": [],
            "body": {
              "id": 1860,
              "nodeType": "Block",
              "src": "4783:83:12",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 1855,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1848,
                        "src": "4837:6:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 1856,
                          "name": "totalSupply",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 573,
                          "src": "4845:11:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
                            "typeString": "function () view returns (uint256)"
                          }
                        },
                        "id": 1857,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4845:13:12",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 1853,
                        "name": "BondingCurve",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2260,
                        "src": "4800:12:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_BondingCurve_$2260_$",
                          "typeString": "type(library BondingCurve)"
                        }
                      },
                      "id": 1854,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "calculatePriceForTokens",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2121,
                      "src": "4800:36:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_delegatecall_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
                        "typeString": "function (uint256,uint256) pure returns (uint256)"
                      }
                    },
                    "id": 1858,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4800:59:12",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 1852,
                  "id": 1859,
                  "nodeType": "Return",
                  "src": "4793:66:12"
                }
              ]
            },
            "baseFunctions": [
              1995
            ],
            "documentation": {
              "id": 1846,
              "nodeType": "StructuredDocumentation",
              "src": "4475:210:12",
              "text": " @dev Calculates the cost of buying a given amount of tokens.\n @param amount The amount of tokens to calculate the cost for.\n @return The cost of buying the given amount of tokens."
            },
            "functionSelector": "465fa408",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "calculatePriceForTokens",
            "nameLocation": "4699:23:12",
            "parameters": {
              "id": 1849,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1848,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "4740:6:12",
                  "nodeType": "VariableDeclaration",
                  "scope": 1861,
                  "src": "4732:14:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1847,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4732:7:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4722:30:12"
            },
            "returnParameters": {
              "id": 1852,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1851,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1861,
                  "src": "4774:7:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1850,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4774:7:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4773:9:12"
            },
            "scope": 1958,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 1877,
            "nodeType": "FunctionDefinition",
            "src": "5144:176:12",
            "nodes": [],
            "body": {
              "id": 1876,
              "nodeType": "Block",
              "src": "5237:83:12",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 1871,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1864,
                        "src": "5291:6:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 1872,
                          "name": "totalSupply",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 573,
                          "src": "5299:11:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
                            "typeString": "function () view returns (uint256)"
                          }
                        },
                        "id": 1873,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5299:13:12",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 1869,
                        "name": "BondingCurve",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2260,
                        "src": "5254:12:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_BondingCurve_$2260_$",
                          "typeString": "type(library BondingCurve)"
                        }
                      },
                      "id": 1870,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "calculateTokensForPrice",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2165,
                      "src": "5254:36:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_delegatecall_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
                        "typeString": "function (uint256,uint256) pure returns (uint256)"
                      }
                    },
                    "id": 1874,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5254:59:12",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 1868,
                  "id": 1875,
                  "nodeType": "Return",
                  "src": "5247:66:12"
                }
              ]
            },
            "baseFunctions": [
              2003
            ],
            "documentation": {
              "id": 1862,
              "nodeType": "StructuredDocumentation",
              "src": "4872:267:12",
              "text": " @dev Calculates the amount of tokens that can be bought with a given amount of Ether.\n @param amount The amount of Ether to calculate the token amount for.\n @return The amount of tokens that can be bought with the given amount of Ether."
            },
            "functionSelector": "b9615a6e",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "calculateTokensForPrice",
            "nameLocation": "5153:23:12",
            "parameters": {
              "id": 1865,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1864,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "5194:6:12",
                  "nodeType": "VariableDeclaration",
                  "scope": 1877,
                  "src": "5186:14:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1863,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5186:7:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5176:30:12"
            },
            "returnParameters": {
              "id": 1868,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1867,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1877,
                  "src": "5228:7:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1866,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5228:7:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5227:9:12"
            },
            "scope": 1958,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 1899,
            "nodeType": "FunctionDefinition",
            "src": "5435:234:12",
            "nodes": [],
            "body": {
              "id": 1898,
              "nodeType": "Block",
              "src": "5601:68:12",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "expression": {
                      "expression": {
                        "id": 1894,
                        "name": "IERC1363Receiver",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 418,
                        "src": "5618:16:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_IERC1363Receiver_$418_$",
                          "typeString": "type(contract IERC1363Receiver)"
                        }
                      },
                      "id": 1895,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberName": "onTransferReceived",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 417,
                      "src": "5618:35:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_declaration_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_calldata_ptr_$returns$_t_bytes4_$",
                        "typeString": "function IERC1363Receiver.onTransferReceived(address,address,uint256,bytes calldata) returns (bytes4)"
                      }
                    },
                    "id": 1896,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "lValueRequested": false,
                    "memberName": "selector",
                    "nodeType": "MemberAccess",
                    "src": "5618:44:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes4",
                      "typeString": "bytes4"
                    }
                  },
                  "functionReturnParameters": 1893,
                  "id": 1897,
                  "nodeType": "Return",
                  "src": "5611:51:12"
                }
              ]
            },
            "baseFunctions": [
              417
            ],
            "documentation": {
              "id": 1878,
              "nodeType": "StructuredDocumentation",
              "src": "5326:104:12",
              "text": " @dev Called by ERC1363 to indicate that tokens have been transferred to the contract."
            },
            "functionSelector": "88a7ca5c",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 1890,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 1889,
                  "name": "onlyAllowedToken",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 1605,
                  "src": "5567:16:12"
                },
                "nodeType": "ModifierInvocation",
                "src": "5567:16:12"
              }
            ],
            "name": "onTransferReceived",
            "nameLocation": "5444:18:12",
            "overrides": {
              "id": 1888,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "5558:8:12"
            },
            "parameters": {
              "id": 1887,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1880,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1899,
                  "src": "5472:7:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1879,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5472:7:12",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1882,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1899,
                  "src": "5489:7:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1881,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5489:7:12",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1884,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1899,
                  "src": "5506:7:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1883,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5506:7:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1886,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1899,
                  "src": "5523:14:12",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_calldata_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 1885,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "5523:5:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5462:81:12"
            },
            "returnParameters": {
              "id": 1893,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1892,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1899,
                  "src": "5593:6:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes4",
                    "typeString": "bytes4"
                  },
                  "typeName": {
                    "id": 1891,
                    "name": "bytes4",
                    "nodeType": "ElementaryTypeName",
                    "src": "5593:6:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes4",
                      "typeString": "bytes4"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5592:8:12"
            },
            "scope": 1958,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 1949,
            "nodeType": "FunctionDefinition",
            "src": "5845:390:12",
            "nodes": [],
            "body": {
              "id": 1948,
              "nodeType": "Block",
              "src": "5939:296:12",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 1911,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 1908,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "5957:3:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 1909,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "value",
                          "nodeType": "MemberAccess",
                          "src": "5957:9:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 1910,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "5969:1:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "5957:13:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "496e73756666696369656e742066756e6473",
                        "id": 1912,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5972:20:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_63452317cb6d597bef833f023ed2962a84dbd24c571e27629ed1e3056d6cfd8d",
                          "typeString": "literal_string \"Insufficient funds\""
                        },
                        "value": "Insufficient funds"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_63452317cb6d597bef833f023ed2962a84dbd24c571e27629ed1e3056d6cfd8d",
                          "typeString": "literal_string \"Insufficient funds\""
                        }
                      ],
                      "id": 1907,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "5949:7:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1913,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5949:44:12",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1914,
                  "nodeType": "ExpressionStatement",
                  "src": "5949:44:12"
                },
                {
                  "assignments": [
                    1916
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1916,
                      "mutability": "mutable",
                      "name": "amount",
                      "nameLocation": "6011:6:12",
                      "nodeType": "VariableDeclaration",
                      "scope": 1948,
                      "src": "6003:14:12",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1915,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "6003:7:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1921,
                  "initialValue": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 1918,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "6044:3:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 1919,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "value",
                        "nodeType": "MemberAccess",
                        "src": "6044:9:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 1917,
                      "name": "calculateTokensForPrice",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1877,
                      "src": "6020:23:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_uint256_$",
                        "typeString": "function (uint256) view returns (uint256)"
                      }
                    },
                    "id": 1920,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6020:34:12",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "6003:51:12"
                },
                {
                  "assignments": [
                    1923
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1923,
                      "mutability": "mutable",
                      "name": "decoded",
                      "nameLocation": "6072:7:12",
                      "nodeType": "VariableDeclaration",
                      "scope": 1948,
                      "src": "6064:15:12",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1922,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "6064:7:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1931,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 1926,
                        "name": "_input",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1902,
                        "src": "6093:6:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_calldata_ptr",
                          "typeString": "bytes calldata"
                        }
                      },
                      {
                        "components": [
                          {
                            "id": 1928,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "6102:7:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_uint256_$",
                              "typeString": "type(uint256)"
                            },
                            "typeName": {
                              "id": 1927,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "6102:7:12",
                              "typeDescriptions": {}
                            }
                          }
                        ],
                        "id": 1929,
                        "isConstant": false,
                        "isInlineArray": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "TupleExpression",
                        "src": "6101:9:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_uint256_$",
                          "typeString": "type(uint256)"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_calldata_ptr",
                          "typeString": "bytes calldata"
                        },
                        {
                          "typeIdentifier": "t_type$_t_uint256_$",
                          "typeString": "type(uint256)"
                        }
                      ],
                      "expression": {
                        "id": 1924,
                        "name": "abi",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -1,
                        "src": "6082:3:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_abi",
                          "typeString": "abi"
                        }
                      },
                      "id": 1925,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberName": "decode",
                      "nodeType": "MemberAccess",
                      "src": "6082:10:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_abidecode_pure$__$returns$__$",
                        "typeString": "function () pure"
                      }
                    },
                    "id": 1930,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6082:29:12",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "6064:47:12"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 1935,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 1933,
                          "name": "amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1916,
                          "src": "6129:6:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "id": 1934,
                          "name": "decoded",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1923,
                          "src": "6139:7:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "6129:17:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "416d6f756e74206973206e6f7420636f7272656374",
                        "id": 1936,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6148:23:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_b001ffb150e556bccd8e30a98d2d84ca3b68298d4c9818d94e3183262fa5f9ba",
                          "typeString": "literal_string \"Amount is not correct\""
                        },
                        "value": "Amount is not correct"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_b001ffb150e556bccd8e30a98d2d84ca3b68298d4c9818d94e3183262fa5f9ba",
                          "typeString": "literal_string \"Amount is not correct\""
                        }
                      ],
                      "id": 1932,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "6121:7:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1937,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6121:51:12",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1938,
                  "nodeType": "ExpressionStatement",
                  "src": "6121:51:12"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 1940,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1916,
                        "src": "6186:6:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 1939,
                      "name": "buy",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1678,
                      "src": "6182:3:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 1941,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6182:11:12",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1942,
                  "nodeType": "ExpressionStatement",
                  "src": "6182:11:12"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 1945,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1916,
                        "src": "6221:6:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 1943,
                        "name": "abi",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -1,
                        "src": "6210:3:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_abi",
                          "typeString": "abi"
                        }
                      },
                      "id": 1944,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberName": "encode",
                      "nodeType": "MemberAccess",
                      "src": "6210:10:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$",
                        "typeString": "function () pure returns (bytes memory)"
                      }
                    },
                    "id": 1946,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6210:18:12",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_memory_ptr",
                      "typeString": "bytes memory"
                    }
                  },
                  "functionReturnParameters": 1906,
                  "id": 1947,
                  "nodeType": "Return",
                  "src": "6203:25:12"
                }
              ]
            },
            "documentation": {
              "id": 1900,
              "nodeType": "StructuredDocumentation",
              "src": "5675:165:12",
              "text": " @dev Allows the contract to receive Ether by calling the buy function with the amount of tokens\n that can be bought with the received Ether."
            },
            "implemented": true,
            "kind": "fallback",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "parameters": {
              "id": 1903,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1902,
                  "mutability": "mutable",
                  "name": "_input",
                  "nameLocation": "5878:6:12",
                  "nodeType": "VariableDeclaration",
                  "scope": 1949,
                  "src": "5863:21:12",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_calldata_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 1901,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "5863:5:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5853:37:12"
            },
            "returnParameters": {
              "id": 1906,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1905,
                  "mutability": "mutable",
                  "name": "_output",
                  "nameLocation": "5930:7:12",
                  "nodeType": "VariableDeclaration",
                  "scope": 1949,
                  "src": "5917:20:12",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 1904,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "5917:5:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5916:22:12"
            },
            "scope": 1958,
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 1957,
            "nodeType": "FunctionDefinition",
            "src": "6241:67:12",
            "nodes": [],
            "body": {
              "id": 1956,
              "nodeType": "Block",
              "src": "6268:40:12",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "4e6f7420737570706f72746564",
                        "id": 1953,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6285:15:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_e5b7c22b986abeee436d3f29779441c97ce367faa95f4de1bae94ece3817df25",
                          "typeString": "literal_string \"Not supported\""
                        },
                        "value": "Not supported"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_e5b7c22b986abeee436d3f29779441c97ce367faa95f4de1bae94ece3817df25",
                          "typeString": "literal_string \"Not supported\""
                        }
                      ],
                      "id": 1952,
                      "name": "revert",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -19,
                        -19
                      ],
                      "referencedDeclaration": -19,
                      "src": "6278:6:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (string memory) pure"
                      }
                    },
                    "id": 1954,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6278:23:12",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1955,
                  "nodeType": "ExpressionStatement",
                  "src": "6278:23:12"
                }
              ]
            },
            "implemented": true,
            "kind": "receive",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "parameters": {
              "id": 1950,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6248:2:12"
            },
            "returnParameters": {
              "id": 1951,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6268:0:12"
            },
            "scope": 1958,
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 1576,
              "name": "ERC1363",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 320,
              "src": "789:7:12"
            },
            "id": 1577,
            "nodeType": "InheritanceSpecifier",
            "src": "789:7:12"
          },
          {
            "baseName": {
              "id": 1578,
              "name": "IERC1363Receiver",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 418,
              "src": "802:16:12"
            },
            "id": 1579,
            "nodeType": "InheritanceSpecifier",
            "src": "802:16:12"
          },
          {
            "baseName": {
              "id": 1580,
              "name": "IBondingToken",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 2004,
              "src": "824:13:12"
            },
            "id": 1581,
            "nodeType": "InheritanceSpecifier",
            "src": "824:13:12"
          },
          {
            "baseName": {
              "id": 1582,
              "name": "ReentrancyGuard",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 488,
              "src": "843:15:12"
            },
            "id": 1583,
            "nodeType": "InheritanceSpecifier",
            "src": "843:15:12"
          }
        ],
        "canonicalName": "BondingToken",
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": {
          "id": 1575,
          "nodeType": "StructuredDocumentation",
          "src": "383:376:12",
          "text": " @title BondingToken\n @dev A token contract that implements a bonding curve for buying and selling tokens using Ether.\n The contract uses ERC1363 to accept and transfer tokens, and implements the IBondingToken interface for buying and selling tokens.\n The contract also implements the IERC1363Receiver interface to receive tokens that are sent to the contract."
        },
        "fullyImplemented": true,
        "linearizedBaseContracts": [
          1958,
          488,
          2004,
          418,
          320,
          1554,
          400,
          1566,
          1075,
          1178,
          1153,
          1530
        ],
        "name": "BondingToken",
        "nameLocation": "769:12:12",
        "scope": 1959,
        "usedErrors": []
      }
    ],
    "license": "MIT"
  },
  "id": 12
}