{"sources": {"/Users/vladimirtrifonov/src/playground/solidity/rare-skills/advanced-solidity-bootcamp/fuzzing-with-echidna/bonding-token/lib/erc1363-payable-token/contracts/token/ERC1363/ERC1363.sol": {"AST": {"absolutePath": "lib/erc1363-payable-token/contracts/token/ERC1363/ERC1363.sol", "exportedSymbols": {"Address": [1615], "Context": [2505], "ERC1363": [1213], "ERC165": [2368], "ERC20": [2344], "IERC1363": [1741], "IERC1363Receiver": [1231], "IERC1363Spender": [1757], "IERC165": [2458], "IERC20": [2446], "IERC20Metadata": [2483]}, "id": 1214, "license": "MIT", "nodeType": "SourceUnit", "nodes": [{"id": 894, "literals": ["solidity", "^", "0.8", ".0"], "nodeType": "PragmaDirective", "src": "33:23:0"}, {"absolutePath": "lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol", "file": "../../../../openzeppelin-contracts/contracts/token/ERC20/ERC20.sol", "id": 895, "nameLocation": "-1:-1:-1", "nodeType": "ImportDirective", "scope": 1214, "sourceUnit": 2345, "src": "58:76:0", "symbolAliases": [], "unitAlias": ""}, {"absolutePath": "lib/openzeppelin-contracts/contracts/utils/Address.sol", "file": "../../../../openzeppelin-contracts/contracts/utils/Address.sol", "id": 896, "nameLocation": "-1:-1:-1", "nodeType": "ImportDirective", "scope": 1214, "sourceUnit": 1616, "src": "135:72:0", "symbolAliases": [], "unitAlias": ""}, {"absolutePath": "lib/openzeppelin-contracts/contracts/utils/introspection/ERC165.sol", "file": "../../../../openzeppelin-contracts/contracts/utils/introspection/ERC165.sol", "id": 897, "nameLocation": "-1:-1:-1", "nodeType": "ImportDirective", "scope": 1214, "sourceUnit": 2369, "src": "208:85:0", "symbolAliases": [], "unitAlias": ""}, {"absolutePath": "lib/erc1363-payable-token/contracts/token/ERC1363/IERC1363.sol", "file": "./IERC1363.sol", "id": 898, "nameLocation": "-1:-1:-1", "nodeType": "ImportDirective", "scope": 1214, "sourceUnit": 1742, "src": "295:24:0", "symbolAliases": [], "unitAlias": ""}, {"absolutePath": "lib/erc1363-payable-token/contracts/token/ERC1363/IERC1363Receiver.sol", "file": "./IERC1363Receiver.sol", "id": 899, "nameLocation": "-1:-1:-1", "nodeType": "ImportDirective", "scope": 1214, "sourceUnit": 1232, "src": "320:32:0", "symbolAliases": [], "unitAlias": ""}, {"absolutePath": "lib/erc1363-payable-token/contracts/token/ERC1363/IERC1363Spender.sol", "file": "./IERC1363Spender.sol", "id": 900, "nameLocation": "-1:-1:-1", "nodeType": "ImportDirective", "scope": 1214, "sourceUnit": 1758, "src": "353:31:0", "symbolAliases": [], "unitAlias": ""}, {"abstract": true, "baseContracts": [{"baseName": {"id": 902, "name": "ERC20", "nodeType": "IdentifierPath", "referencedDeclaration": 2344, "src": "489:5:0"}, "id": 903, "nodeType": "InheritanceSpecifier", "src": "489:5:0"}, {"baseName": {"id": 904, "name": "IERC1363", "nodeType": "IdentifierPath", "referencedDeclaration": 1741, "src": "496:8:0"}, "id": 905, "nodeType": "InheritanceSpecifier", "src": "496:8:0"}, {"baseName": {"id": 906, "name": "ERC165", "nodeType": "IdentifierPath", "referencedDeclaration": 2368, "src": "506:6:0"}, "id": 907, "nodeType": "InheritanceSpecifier", "src": "506:6:0"}], "canonicalName": "ERC1363", "contractDependencies": [], "contractKind": "contract", "documentation": {"id": 901, "nodeType": "StructuredDocumentation", "src": "386:73:0", "text": " @title ERC1363\n @dev Implementation of an ERC1363 interface."}, "fullyImplemented": false, "id": 1213, "linearizedBaseContracts": [1213, 2368, 1741, 2458, 2344, 2483, 2446, 2505], "name": "ERC1363", "nameLocation": "478:7:0", "nodeType": "ContractDefinition", "nodes": [{"global": false, "id": 910, "libraryName": {"id": 908, "name": "Address", "nodeType": "IdentifierPath", "referencedDeclaration": 1615, "src": "525:7:0"}, "nodeType": "UsingForDirective", "src": "519:26:0", "typeName": {"id": 909, "name": "address", "nodeType": "ElementaryTypeName", "src": "537:7:0", "stateMutability": "nonpayable", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}}, {"baseFunctions": [2367, 2457], "body": {"id": 933, "nodeType": "Block", "src": "720:105:0", "statements": [{"expression": {"commonType": {"typeIdentifier": "t_bool", "typeString": "bool"}, "id": 931, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"commonType": {"typeIdentifier": "t_bytes4", "typeString": "bytes4"}, "id": 926, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"id": 921, "name": "interfaceId", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 913, "src": "737:11:0", "typeDescriptions": {"typeIdentifier": "t_bytes4", "typeString": "bytes4"}}, "nodeType": "BinaryOperation", "operator": "==", "rightExpression": {"expression": {"arguments": [{"id": 923, "name": "IERC1363", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1741, "src": "757:8:0", "typeDescriptions": {"typeIdentifier": "t_type$_t_contract$_IERC1363_$1741_$", "typeString": "type(contract IERC1363)"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_type$_t_contract$_IERC1363_$1741_$", "typeString": "type(contract IERC1363)"}], "id": 922, "name": "type", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": -27, "src": "752:4:0", "typeDescriptions": {"typeIdentifier": "t_function_metatype_pure$__$returns$__$", "typeString": "function () pure"}}, "id": 924, "isConstant": false, "isLValue": false, "isPure": true, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "752:14:0", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_magic_meta_type_t_contract$_IERC1363_$1741", "typeString": "type(contract IERC1363)"}}, "id": 925, "isConstant": false, "isLValue": false, "isPure": true, "lValueRequested": false, "memberName": "interfaceId", "nodeType": "MemberAccess", "src": "752:26:0", "typeDescriptions": {"typeIdentifier": "t_bytes4", "typeString": "bytes4"}}, "src": "737:41:0", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "nodeType": "BinaryOperation", "operator": "||", "rightExpression": {"arguments": [{"id": 929, "name": "interfaceId", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 913, "src": "806:11:0", "typeDescriptions": {"typeIdentifier": "t_bytes4", "typeString": "bytes4"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_bytes4", "typeString": "bytes4"}], "expression": {"id": 927, "name": "super", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": -25, "src": "782:5:0", "typeDescriptions": {"typeIdentifier": "t_type$_t_super$_ERC1363_$1213_$", "typeString": "type(contract super ERC1363)"}}, "id": 928, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "supportsInterface", "nodeType": "MemberAccess", "referencedDeclaration": 2367, "src": "782:23:0", "typeDescriptions": {"typeIdentifier": "t_function_internal_view$_t_bytes4_$returns$_t_bool_$", "typeString": "function (bytes4) view returns (bool)"}}, "id": 930, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "782:36:0", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "src": "737:81:0", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "functionReturnParameters": 920, "id": 932, "nodeType": "Return", "src": "730:88:0"}]}, "documentation": {"id": 911, "nodeType": "StructuredDocumentation", "src": "551:56:0", "text": " @dev See {IERC165-supportsInterface}."}, "functionSelector": "01ffc9a7", "id": 934, "implemented": true, "kind": "function", "modifiers": [], "name": "supportsInterface", "nameLocation": "621:17:0", "nodeType": "FunctionDefinition", "overrides": {"id": 917, "nodeType": "OverrideSpecifier", "overrides": [{"id": 915, "name": "ERC165", "nodeType": "IdentifierPath", "referencedDeclaration": 2368, "src": "688:6:0"}, {"id": 916, "name": "IERC165", "nodeType": "IdentifierPath", "referencedDeclaration": 2458, "src": "696:7:0"}], "src": "679:25:0"}, "parameters": {"id": 914, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 913, "mutability": "mutable", "name": "interfaceId", "nameLocation": "646:11:0", "nodeType": "VariableDeclaration", "scope": 934, "src": "639:18:0", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_bytes4", "typeString": "bytes4"}, "typeName": {"id": 912, "name": "bytes4", "nodeType": "ElementaryTypeName", "src": "639:6:0", "typeDescriptions": {"typeIdentifier": "t_bytes4", "typeString": "bytes4"}}, "visibility": "internal"}], "src": "638:20:0"}, "returnParameters": {"id": 920, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 919, "mutability": "mutable", "name": "", "nameLocation": "-1:-1:-1", "nodeType": "VariableDeclaration", "scope": 934, "src": "714:4:0", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}, "typeName": {"id": 918, "name": "bool", "nodeType": "ElementaryTypeName", "src": "714:4:0", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "visibility": "internal"}], "src": "713:6:0"}, "scope": 1213, "src": "612:213:0", "stateMutability": "view", "virtual": true, "visibility": "public"}, {"baseFunctions": [1680], "body": {"id": 951, "nodeType": "Block", "src": "1196:55:0", "statements": [{"expression": {"arguments": [{"id": 946, "name": "to", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 937, "src": "1229:2:0", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, {"id": 947, "name": "amount", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 939, "src": "1233:6:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, {"hexValue": "", "id": 948, "isConstant": false, "isLValue": false, "isPure": true, "kind": "string", "lValueRequested": false, "nodeType": "Literal", "src": "1241:2:0", "typeDescriptions": {"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470", "typeString": "literal_string \"\""}, "value": ""}], "expression": {"argumentTypes": [{"typeIdentifier": "t_address", "typeString": "address"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}, {"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470", "typeString": "literal_string \"\""}], "id": 945, "name": "transferAndCall", "nodeType": "Identifier", "overloadedDeclarations": [952, 984], "referencedDeclaration": 984, "src": "1213:15:0", "typeDescriptions": {"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bool_$", "typeString": "function (address,uint256,bytes memory) returns (bool)"}}, "id": 949, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "1213:31:0", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "functionReturnParameters": 944, "id": 950, "nodeType": "Return", "src": "1206:38:0"}]}, "documentation": {"id": 935, "nodeType": "StructuredDocumentation", "src": "831:268:0", "text": " @dev Transfer tokens to a specified address and then execute a callback on `to`.\n @param to The address to transfer to.\n @param amount The amount to be transferred.\n @return A boolean that indicates if the operation was successful."}, "functionSelector": "1296ee62", "id": 952, "implemented": true, "kind": "function", "modifiers": [], "name": "transferAndCall", "nameLocation": "1113:15:0", "nodeType": "FunctionDefinition", "overrides": {"id": 941, "nodeType": "OverrideSpecifier", "overrides": [], "src": "1172:8:0"}, "parameters": {"id": 940, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 937, "mutability": "mutable", "name": "to", "nameLocation": "1137:2:0", "nodeType": "VariableDeclaration", "scope": 952, "src": "1129:10:0", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}, "typeName": {"id": 936, "name": "address", "nodeType": "ElementaryTypeName", "src": "1129:7:0", "stateMutability": "nonpayable", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "visibility": "internal"}, {"constant": false, "id": 939, "mutability": "mutable", "name": "amount", "nameLocation": "1149:6:0", "nodeType": "VariableDeclaration", "scope": 952, "src": "1141:14:0", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 938, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "1141:7:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "src": "1128:28:0"}, "returnParameters": {"id": 944, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 943, "mutability": "mutable", "name": "", "nameLocation": "-1:-1:-1", "nodeType": "VariableDeclaration", "scope": 952, "src": "1190:4:0", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}, "typeName": {"id": 942, "name": "bool", "nodeType": "ElementaryTypeName", "src": "1190:4:0", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "visibility": "internal"}], "src": "1189:6:0"}, "scope": 1213, "src": "1104:147:0", "stateMutability": "nonpayable", "virtual": true, "visibility": "public"}, {"baseFunctions": [1692], "body": {"id": 983, "nodeType": "Block", "src": "1699:174:0", "statements": [{"expression": {"arguments": [{"id": 966, "name": "to", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 955, "src": "1718:2:0", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, {"id": 967, "name": "amount", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 957, "src": "1722:6:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_address", "typeString": "address"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}], "id": 965, "name": "transfer", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1881, "src": "1709:8:0", "typeDescriptions": {"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$", "typeString": "function (address,uint256) returns (bool)"}}, "id": 968, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "1709:20:0", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "id": 969, "nodeType": "ExpressionStatement", "src": "1709:20:0"}, {"expression": {"arguments": [{"arguments": [{"arguments": [], "expression": {"argumentTypes": [], "id": 972, "name": "_msgSender", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 2495, "src": "1772:10:0", "typeDescriptions": {"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$", "typeString": "function () view returns (address)"}}, "id": 973, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "1772:12:0", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, {"id": 974, "name": "to", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 955, "src": "1786:2:0", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, {"id": 975, "name": "amount", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 957, "src": "1790:6:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, {"id": 976, "name": "data", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 959, "src": "1798:4:0", "typeDescriptions": {"typeIdentifier": "t_bytes_memory_ptr", "typeString": "bytes memory"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_address", "typeString": "address"}, {"typeIdentifier": "t_address", "typeString": "address"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}, {"typeIdentifier": "t_bytes_memory_ptr", "typeString": "bytes memory"}], "id": 971, "name": "_checkOnTransferReceived", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1151, "src": "1747:24:0", "typeDescriptions": {"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bool_$", "typeString": "function (address,address,uint256,bytes memory) returns (bool)"}}, "id": 977, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "1747:56:0", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, {"hexValue": "455243313336333a2072656365697665722072657475726e65642077726f6e672064617461", "id": 978, "isConstant": false, "isLValue": false, "isPure": true, "kind": "string", "lValueRequested": false, "nodeType": "Literal", "src": "1805:39:0", "typeDescriptions": {"typeIdentifier": "t_stringliteral_f7e9fb9ef8c24f02d08d80d0a958310816c30947f5a8a2310a5e90f0de3dc5a4", "typeString": "literal_string \"ERC1363: receiver returned wrong data\""}, "value": "ERC1363: receiver returned wrong data"}], "expression": {"argumentTypes": [{"typeIdentifier": "t_bool", "typeString": "bool"}, {"typeIdentifier": "t_stringliteral_f7e9fb9ef8c24f02d08d80d0a958310816c30947f5a8a2310a5e90f0de3dc5a4", "typeString": "literal_string \"ERC1363: receiver returned wrong data\""}], "id": 970, "name": "require", "nodeType": "Identifier", "overloadedDeclarations": [-18, -18], "referencedDeclaration": -18, "src": "1739:7:0", "typeDescriptions": {"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$", "typeString": "function (bool,string memory) pure"}}, "id": 979, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "1739:106:0", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 980, "nodeType": "ExpressionStatement", "src": "1739:106:0"}, {"expression": {"hexValue": "74727565", "id": 981, "isConstant": false, "isLValue": false, "isPure": true, "kind": "bool", "lValueRequested": false, "nodeType": "Literal", "src": "1862:4:0", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}, "value": "true"}, "functionReturnParameters": 964, "id": 982, "nodeType": "Return", "src": "1855:11:0"}]}, "documentation": {"id": 953, "nodeType": "StructuredDocumentation", "src": "1257:326:0", "text": " @dev Transfer tokens to a specified address and then execute a callback on `to`.\n @param to The address to transfer to\n @param amount The amount to be transferred\n @param data Additional data with no specified format\n @return A boolean that indicates if the operation was successful."}, "functionSelector": "4000aea0", "id": 984, "implemented": true, "kind": "function", "modifiers": [], "name": "transferAndCall", "nameLocation": "1597:15:0", "nodeType": "FunctionDefinition", "overrides": {"id": 961, "nodeType": "OverrideSpecifier", "overrides": [], "src": "1675:8:0"}, "parameters": {"id": 960, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 955, "mutability": "mutable", "name": "to", "nameLocation": "1621:2:0", "nodeType": "VariableDeclaration", "scope": 984, "src": "1613:10:0", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}, "typeName": {"id": 954, "name": "address", "nodeType": "ElementaryTypeName", "src": "1613:7:0", "stateMutability": "nonpayable", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "visibility": "internal"}, {"constant": false, "id": 957, "mutability": "mutable", "name": "amount", "nameLocation": "1633:6:0", "nodeType": "VariableDeclaration", "scope": 984, "src": "1625:14:0", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 956, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "1625:7:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}, {"constant": false, "id": 959, "mutability": "mutable", "name": "data", "nameLocation": "1654:4:0", "nodeType": "VariableDeclaration", "scope": 984, "src": "1641:17:0", "stateVariable": false, "storageLocation": "memory", "typeDescriptions": {"typeIdentifier": "t_bytes_memory_ptr", "typeString": "bytes"}, "typeName": {"id": 958, "name": "bytes", "nodeType": "ElementaryTypeName", "src": "1641:5:0", "typeDescriptions": {"typeIdentifier": "t_bytes_storage_ptr", "typeString": "bytes"}}, "visibility": "internal"}], "src": "1612:47:0"}, "returnParameters": {"id": 964, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 963, "mutability": "mutable", "name": "", "nameLocation": "-1:-1:-1", "nodeType": "VariableDeclaration", "scope": 984, "src": "1693:4:0", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}, "typeName": {"id": 962, "name": "bool", "nodeType": "ElementaryTypeName", "src": "1693:4:0", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "visibility": "internal"}], "src": "1692:6:0"}, "scope": 1213, "src": "1588:285:0", "stateMutability": "nonpayable", "virtual": true, "visibility": "public"}, {"baseFunctions": [1704], "body": {"id": 1004, "nodeType": "Block", "src": "2356:65:0", "statements": [{"expression": {"arguments": [{"id": 998, "name": "from", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 987, "src": "2393:4:0", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, {"id": 999, "name": "to", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 989, "src": "2399:2:0", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, {"id": 1000, "name": "amount", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 991, "src": "2403:6:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, {"hexValue": "", "id": 1001, "isConstant": false, "isLValue": false, "isPure": true, "kind": "string", "lValueRequested": false, "nodeType": "Literal", "src": "2411:2:0", "typeDescriptions": {"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470", "typeString": "literal_string \"\""}, "value": ""}], "expression": {"argumentTypes": [{"typeIdentifier": "t_address", "typeString": "address"}, {"typeIdentifier": "t_address", "typeString": "address"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}, {"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470", "typeString": "literal_string \"\""}], "id": 997, "name": "transferFromAndCall", "nodeType": "Identifier", "overloadedDeclarations": [1005, 1039], "referencedDeclaration": 1039, "src": "2373:19:0", "typeDescriptions": {"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bool_$", "typeString": "function (address,address,uint256,bytes memory) returns (bool)"}}, "id": 1002, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "2373:41:0", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "functionReturnParameters": 996, "id": 1003, "nodeType": "Return", "src": "2366:48:0"}]}, "documentation": {"id": 985, "nodeType": "StructuredDocumentation", "src": "1879:362:0", "text": " @dev Transfer tokens from one address to another and then execute a callback on `to`.\n @param from The address which you want to send tokens from\n @param to The address which you want to transfer to\n @param amount The amount of tokens to be transferred\n @return A boolean that indicates if the operation was successful."}, "functionSelector": "d8fbe994", "id": 1005, "implemented": true, "kind": "function", "modifiers": [], "name": "transferFromAndCall", "nameLocation": "2255:19:0", "nodeType": "FunctionDefinition", "overrides": {"id": 993, "nodeType": "OverrideSpecifier", "overrides": [], "src": "2332:8:0"}, "parameters": {"id": 992, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 987, "mutability": "mutable", "name": "from", "nameLocation": "2283:4:0", "nodeType": "VariableDeclaration", "scope": 1005, "src": "2275:12:0", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}, "typeName": {"id": 986, "name": "address", "nodeType": "ElementaryTypeName", "src": "2275:7:0", "stateMutability": "nonpayable", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "visibility": "internal"}, {"constant": false, "id": 989, "mutability": "mutable", "name": "to", "nameLocation": "2297:2:0", "nodeType": "VariableDeclaration", "scope": 1005, "src": "2289:10:0", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}, "typeName": {"id": 988, "name": "address", "nodeType": "ElementaryTypeName", "src": "2289:7:0", "stateMutability": "nonpayable", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "visibility": "internal"}, {"constant": false, "id": 991, "mutability": "mutable", "name": "amount", "nameLocation": "2309:6:0", "nodeType": "VariableDeclaration", "scope": 1005, "src": "2301:14:0", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 990, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "2301:7:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "src": "2274:42:0"}, "returnParameters": {"id": 996, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 995, "mutability": "mutable", "name": "", "nameLocation": "-1:-1:-1", "nodeType": "VariableDeclaration", "scope": 1005, "src": "2350:4:0", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}, "typeName": {"id": 994, "name": "bool", "nodeType": "ElementaryTypeName", "src": "2350:4:0", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "visibility": "internal"}], "src": "2349:6:0"}, "scope": 1213, "src": "2246:175:0", "stateMutability": "nonpayable", "virtual": true, "visibility": "public"}, {"baseFunctions": [1718], "body": {"id": 1038, "nodeType": "Block", "src": "3021:176:0", "statements": [{"expression": {"arguments": [{"id": 1021, "name": "from", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1008, "src": "3044:4:0", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, {"id": 1022, "name": "to", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1010, "src": "3050:2:0", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, {"id": 1023, "name": "amount", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1012, "src": "3054:6:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_address", "typeString": "address"}, {"typeIdentifier": "t_address", "typeString": "address"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}], "id": 1020, "name": "transferFrom", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1957, "src": "3031:12:0", "typeDescriptions": {"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$", "typeString": "function (address,address,uint256) returns (bool)"}}, "id": 1024, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "3031:30:0", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "id": 1025, "nodeType": "ExpressionStatement", "src": "3031:30:0"}, {"expression": {"arguments": [{"arguments": [{"id": 1028, "name": "from", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1008, "src": "3104:4:0", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, {"id": 1029, "name": "to", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1010, "src": "3110:2:0", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, {"id": 1030, "name": "amount", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1012, "src": "3114:6:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, {"id": 1031, "name": "data", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1014, "src": "3122:4:0", "typeDescriptions": {"typeIdentifier": "t_bytes_memory_ptr", "typeString": "bytes memory"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_address", "typeString": "address"}, {"typeIdentifier": "t_address", "typeString": "address"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}, {"typeIdentifier": "t_bytes_memory_ptr", "typeString": "bytes memory"}], "id": 1027, "name": "_checkOnTransferReceived", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1151, "src": "3079:24:0", "typeDescriptions": {"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bool_$", "typeString": "function (address,address,uint256,bytes memory) returns (bool)"}}, "id": 1032, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "3079:48:0", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, {"hexValue": "455243313336333a2072656365697665722072657475726e65642077726f6e672064617461", "id": 1033, "isConstant": false, "isLValue": false, "isPure": true, "kind": "string", "lValueRequested": false, "nodeType": "Literal", "src": "3129:39:0", "typeDescriptions": {"typeIdentifier": "t_stringliteral_f7e9fb9ef8c24f02d08d80d0a958310816c30947f5a8a2310a5e90f0de3dc5a4", "typeString": "literal_string \"ERC1363: receiver returned wrong data\""}, "value": "ERC1363: receiver returned wrong data"}], "expression": {"argumentTypes": [{"typeIdentifier": "t_bool", "typeString": "bool"}, {"typeIdentifier": "t_stringliteral_f7e9fb9ef8c24f02d08d80d0a958310816c30947f5a8a2310a5e90f0de3dc5a4", "typeString": "literal_string \"ERC1363: receiver returned wrong data\""}], "id": 1026, "name": "require", "nodeType": "Identifier", "overloadedDeclarations": [-18, -18], "referencedDeclaration": -18, "src": "3071:7:0", "typeDescriptions": {"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$", "typeString": "function (bool,string memory) pure"}}, "id": 1034, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "3071:98:0", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 1035, "nodeType": "ExpressionStatement", "src": "3071:98:0"}, {"expression": {"hexValue": "74727565", "id": 1036, "isConstant": false, "isLValue": false, "isPure": true, "kind": "bool", "lValueRequested": false, "nodeType": "Literal", "src": "3186:4:0", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}, "value": "true"}, "functionReturnParameters": 1019, "id": 1037, "nodeType": "Return", "src": "3179:11:0"}]}, "documentation": {"id": 1006, "nodeType": "StructuredDocumentation", "src": "2427:422:0", "text": " @dev Transfer tokens from one address to another and then execute a callback on `to`.\n @param from The address which you want to send tokens from\n @param to The address which you want to transfer to\n @param amount The amount of tokens to be transferred\n @param data Additional data with no specified format\n @return A boolean that indicates if the operation was successful."}, "functionSelector": "c1d34b89", "id": 1039, "implemented": true, "kind": "function", "modifiers": [], "name": "transferFromAndCall", "nameLocation": "2863:19:0", "nodeType": "FunctionDefinition", "overrides": {"id": 1016, "nodeType": "OverrideSpecifier", "overrides": [], "src": "2997:8:0"}, "parameters": {"id": 1015, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 1008, "mutability": "mutable", "name": "from", "nameLocation": "2900:4:0", "nodeType": "VariableDeclaration", "scope": 1039, "src": "2892:12:0", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}, "typeName": {"id": 1007, "name": "address", "nodeType": "ElementaryTypeName", "src": "2892:7:0", "stateMutability": "nonpayable", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "visibility": "internal"}, {"constant": false, "id": 1010, "mutability": "mutable", "name": "to", "nameLocation": "2922:2:0", "nodeType": "VariableDeclaration", "scope": 1039, "src": "2914:10:0", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}, "typeName": {"id": 1009, "name": "address", "nodeType": "ElementaryTypeName", "src": "2914:7:0", "stateMutability": "nonpayable", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "visibility": "internal"}, {"constant": false, "id": 1012, "mutability": "mutable", "name": "amount", "nameLocation": "2942:6:0", "nodeType": "VariableDeclaration", "scope": 1039, "src": "2934:14:0", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 1011, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "2934:7:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}, {"constant": false, "id": 1014, "mutability": "mutable", "name": "data", "nameLocation": "2971:4:0", "nodeType": "VariableDeclaration", "scope": 1039, "src": "2958:17:0", "stateVariable": false, "storageLocation": "memory", "typeDescriptions": {"typeIdentifier": "t_bytes_memory_ptr", "typeString": "bytes"}, "typeName": {"id": 1013, "name": "bytes", "nodeType": "ElementaryTypeName", "src": "2958:5:0", "typeDescriptions": {"typeIdentifier": "t_bytes_storage_ptr", "typeString": "bytes"}}, "visibility": "internal"}], "src": "2882:99:0"}, "returnParameters": {"id": 1019, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 1018, "mutability": "mutable", "name": "", "nameLocation": "-1:-1:-1", "nodeType": "VariableDeclaration", "scope": 1039, "src": "3015:4:0", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}, "typeName": {"id": 1017, "name": "bool", "nodeType": "ElementaryTypeName", "src": "3015:4:0", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "visibility": "internal"}], "src": "3014:6:0"}, "scope": 1213, "src": "2854:343:0", "stateMutability": "nonpayable", "virtual": true, "visibility": "public"}, {"baseFunctions": [1728], "body": {"id": 1056, "nodeType": "Block", "src": "3592:59:0", "statements": [{"expression": {"arguments": [{"id": 1051, "name": "spender", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1042, "src": "3624:7:0", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, {"id": 1052, "name": "amount", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1044, "src": "3633:6:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, {"hexValue": "", "id": 1053, "isConstant": false, "isLValue": false, "isPure": true, "kind": "string", "lValueRequested": false, "nodeType": "Literal", "src": "3641:2:0", "typeDescriptions": {"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470", "typeString": "literal_string \"\""}, "value": ""}], "expression": {"argumentTypes": [{"typeIdentifier": "t_address", "typeString": "address"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}, {"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470", "typeString": "literal_string \"\""}], "id": 1050, "name": "approveAndCall", "nodeType": "Identifier", "overloadedDeclarations": [1057, 1087], "referencedDeclaration": 1087, "src": "3609:14:0", "typeDescriptions": {"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bool_$", "typeString": "function (address,uint256,bytes memory) returns (bool)"}}, "id": 1054, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "3609:35:0", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "functionReturnParameters": 1049, "id": 1055, "nodeType": "Return", "src": "3602:42:0"}]}, "documentation": {"id": 1040, "nodeType": "StructuredDocumentation", "src": "3203:288:0", "text": " @dev Approve spender to transfer tokens and then execute a callback on `spender`.\n @param spender The address allowed to transfer to\n @param amount The amount allowed to be transferred\n @return A boolean that indicates if the operation was successful."}, "functionSelector": "3177029f", "id": 1057, "implemented": true, "kind": "function", "modifiers": [], "name": "approveAndCall", "nameLocation": "3505:14:0", "nodeType": "FunctionDefinition", "overrides": {"id": 1046, "nodeType": "OverrideSpecifier", "overrides": [], "src": "3568:8:0"}, "parameters": {"id": 1045, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 1042, "mutability": "mutable", "name": "spender", "nameLocation": "3528:7:0", "nodeType": "VariableDeclaration", "scope": 1057, "src": "3520:15:0", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}, "typeName": {"id": 1041, "name": "address", "nodeType": "ElementaryTypeName", "src": "3520:7:0", "stateMutability": "nonpayable", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "visibility": "internal"}, {"constant": false, "id": 1044, "mutability": "mutable", "name": "amount", "nameLocation": "3545:6:0", "nodeType": "VariableDeclaration", "scope": 1057, "src": "3537:14:0", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 1043, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "3537:7:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "src": "3519:33:0"}, "returnParameters": {"id": 1049, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 1048, "mutability": "mutable", "name": "", "nameLocation": "-1:-1:-1", "nodeType": "VariableDeclaration", "scope": 1057, "src": "3586:4:0", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}, "typeName": {"id": 1047, "name": "bool", "nodeType": "ElementaryTypeName", "src": "3586:4:0", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "visibility": "internal"}], "src": "3585:6:0"}, "scope": 1213, "src": "3496:155:0", "stateMutability": "nonpayable", "virtual": true, "visibility": "public"}, {"baseFunctions": [1740], "body": {"id": 1086, "nodeType": "Block", "src": "4128:168:0", "statements": [{"expression": {"arguments": [{"id": 1071, "name": "spender", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1060, "src": "4146:7:0", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, {"id": 1072, "name": "amount", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1062, "src": "4155:6:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_address", "typeString": "address"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}], "id": 1070, "name": "approve", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1924, "src": "4138:7:0", "typeDescriptions": {"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$", "typeString": "function (address,uint256) returns (bool)"}}, "id": 1073, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "4138:24:0", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "id": 1074, "nodeType": "ExpressionStatement", "src": "4138:24:0"}, {"expression": {"arguments": [{"arguments": [{"id": 1077, "name": "spender", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1060, "src": "4205:7:0", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, {"id": 1078, "name": "amount", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1062, "src": "4214:6:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, {"id": 1079, "name": "data", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1064, "src": "4222:4:0", "typeDescriptions": {"typeIdentifier": "t_bytes_memory_ptr", "typeString": "bytes memory"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_address", "typeString": "address"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}, {"typeIdentifier": "t_bytes_memory_ptr", "typeString": "bytes memory"}], "id": 1076, "name": "_checkOnApprovalReceived", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1212, "src": "4180:24:0", "typeDescriptions": {"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bool_$", "typeString": "function (address,uint256,bytes memory) returns (bool)"}}, "id": 1080, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "4180:47:0", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, {"hexValue": "455243313336333a207370656e6465722072657475726e65642077726f6e672064617461", "id": 1081, "isConstant": false, "isLValue": false, "isPure": true, "kind": "string", "lValueRequested": false, "nodeType": "Literal", "src": "4229:38:0", "typeDescriptions": {"typeIdentifier": "t_stringliteral_7b12591f541a626a04f909b0c1f720b12ca36eb9312b18f1ceae25c1bcebab03", "typeString": "literal_string \"ERC1363: spender returned wrong data\""}, "value": "ERC1363: spender returned wrong data"}], "expression": {"argumentTypes": [{"typeIdentifier": "t_bool", "typeString": "bool"}, {"typeIdentifier": "t_stringliteral_7b12591f541a626a04f909b0c1f720b12ca36eb9312b18f1ceae25c1bcebab03", "typeString": "literal_string \"ERC1363: spender returned wrong data\""}], "id": 1075, "name": "require", "nodeType": "Identifier", "overloadedDeclarations": [-18, -18], "referencedDeclaration": -18, "src": "4172:7:0", "typeDescriptions": {"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$", "typeString": "function (bool,string memory) pure"}}, "id": 1082, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "4172:96:0", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 1083, "nodeType": "ExpressionStatement", "src": "4172:96:0"}, {"expression": {"hexValue": "74727565", "id": 1084, "isConstant": false, "isLValue": false, "isPure": true, "kind": "bool", "lValueRequested": false, "nodeType": "Literal", "src": "4285:4:0", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}, "value": "true"}, "functionReturnParameters": 1069, "id": 1085, "nodeType": "Return", "src": "4278:11:0"}]}, "documentation": {"id": 1058, "nodeType": "StructuredDocumentation", "src": "3657:351:0", "text": " @dev Approve spender to transfer tokens and then execute a callback on `spender`.\n @param spender The address allowed to transfer to.\n @param amount The amount allowed to be transferred.\n @param data Additional data with no specified format.\n @return A boolean that indicates if the operation was successful."}, "functionSelector": "cae9ca51", "id": 1087, "implemented": true, "kind": "function", "modifiers": [], "name": "approveAndCall", "nameLocation": "4022:14:0", "nodeType": "FunctionDefinition", "overrides": {"id": 1066, "nodeType": "OverrideSpecifier", "overrides": [], "src": "4104:8:0"}, "parameters": {"id": 1065, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 1060, "mutability": "mutable", "name": "spender", "nameLocation": "4045:7:0", "nodeType": "VariableDeclaration", "scope": 1087, "src": "4037:15:0", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}, "typeName": {"id": 1059, "name": "address", "nodeType": "ElementaryTypeName", "src": "4037:7:0", "stateMutability": "nonpayable", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "visibility": "internal"}, {"constant": false, "id": 1062, "mutability": "mutable", "name": "amount", "nameLocation": "4062:6:0", "nodeType": "VariableDeclaration", "scope": 1087, "src": "4054:14:0", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 1061, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "4054:7:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}, {"constant": false, "id": 1064, "mutability": "mutable", "name": "data", "nameLocation": "4083:4:0", "nodeType": "VariableDeclaration", "scope": 1087, "src": "4070:17:0", "stateVariable": false, "storageLocation": "memory", "typeDescriptions": {"typeIdentifier": "t_bytes_memory_ptr", "typeString": "bytes"}, "typeName": {"id": 1063, "name": "bytes", "nodeType": "ElementaryTypeName", "src": "4070:5:0", "typeDescriptions": {"typeIdentifier": "t_bytes_storage_ptr", "typeString": "bytes"}}, "visibility": "internal"}], "src": "4036:52:0"}, "returnParameters": {"id": 1069, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 1068, "mutability": "mutable", "name": "", "nameLocation": "-1:-1:-1", "nodeType": "VariableDeclaration", "scope": 1087, "src": "4122:4:0", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}, "typeName": {"id": 1067, "name": "bool", "nodeType": "ElementaryTypeName", "src": "4122:4:0", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "visibility": "internal"}], "src": "4121:6:0"}, "scope": 1213, "src": "4013:283:0", "stateMutability": "nonpayable", "virtual": true, "visibility": "public"}, {"body": {"id": 1150, "nodeType": "Block", "src": "5045:676:0", "statements": [{"condition": {"id": 1104, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "nodeType": "UnaryOperation", "operator": "!", "prefix": true, "src": "5059:23:0", "subExpression": {"arguments": [], "expression": {"argumentTypes": [], "expression": {"id": 1101, "name": "recipient", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1092, "src": "5060:9:0", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "id": 1102, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "isContract", "nodeType": "MemberAccess", "referencedDeclaration": 1303, "src": "5060:20:0", "typeDescriptions": {"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$bound_to$_t_address_$", "typeString": "function (address) view returns (bool)"}}, "id": 1103, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "5060:22:0", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "id": 1110, "nodeType": "IfStatement", "src": "5055:105:0", "trueBody": {"id": 1109, "nodeType": "Block", "src": "5084:76:0", "statements": [{"expression": {"arguments": [{"hexValue": "455243313336333a207472616e7366657220746f206e6f6e20636f6e74726163742061646472657373", "id": 1106, "isConstant": false, "isLValue": false, "isPure": true, "kind": "string", "lValueRequested": false, "nodeType": "Literal", "src": "5105:43:0", "typeDescriptions": {"typeIdentifier": "t_stringliteral_ebafa5218748d283722551db9a771def078070c59263ccd14c5326e189d5da12", "typeString": "literal_string \"ERC1363: transfer to non contract address\""}, "value": "ERC1363: transfer to non contract address"}], "expression": {"argumentTypes": [{"typeIdentifier": "t_stringliteral_ebafa5218748d283722551db9a771def078070c59263ccd14c5326e189d5da12", "typeString": "literal_string \"ERC1363: transfer to non contract address\""}], "id": 1105, "name": "revert", "nodeType": "Identifier", "overloadedDeclarations": [-19, -19], "referencedDeclaration": -19, "src": "5098:6:0", "typeDescriptions": {"typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$", "typeString": "function (string memory) pure"}}, "id": 1107, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "5098:51:0", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 1108, "nodeType": "ExpressionStatement", "src": "5098:51:0"}]}}, {"clauses": [{"block": {"id": 1130, "nodeType": "Block", "src": "5281:86:0", "statements": [{"expression": {"commonType": {"typeIdentifier": "t_bytes4", "typeString": "bytes4"}, "id": 1128, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"id": 1124, "name": "retval", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1122, "src": "5302:6:0", "typeDescriptions": {"typeIdentifier": "t_bytes4", "typeString": "bytes4"}}, "nodeType": "BinaryOperation", "operator": "==", "rightExpression": {"expression": {"expression": {"id": 1125, "name": "IERC1363Receiver", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1231, "src": "5312:16:0", "typeDescriptions": {"typeIdentifier": "t_type$_t_contract$_IERC1363Receiver_$1231_$", "typeString": "type(contract IERC1363Receiver)"}}, "id": 1126, "isConstant": false, "isLValue": false, "isPure": true, "lValueRequested": false, "memberName": "onTransferReceived", "nodeType": "MemberAccess", "referencedDeclaration": 1230, "src": "5312:35:0", "typeDescriptions": {"typeIdentifier": "t_function_declaration_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_calldata_ptr_$returns$_t_bytes4_$", "typeString": "function IERC1363Receiver.onTransferReceived(address,address,uint256,bytes calldata) returns (bytes4)"}}, "id": 1127, "isConstant": false, "isLValue": false, "isPure": true, "lValueRequested": false, "memberName": "selector", "nodeType": "MemberAccess", "src": "5312:44:0", "typeDescriptions": {"typeIdentifier": "t_bytes4", "typeString": "bytes4"}}, "src": "5302:54:0", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "functionReturnParameters": 1100, "id": 1129, "nodeType": "Return", "src": "5295:61:0"}]}, "errorName": "", "id": 1131, "nodeType": "TryCatchClause", "parameters": {"id": 1123, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 1122, "mutability": "mutable", "name": "retval", "nameLocation": "5273:6:0", "nodeType": "VariableDeclaration", "scope": 1131, "src": "5266:13:0", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_bytes4", "typeString": "bytes4"}, "typeName": {"id": 1121, "name": "bytes4", "nodeType": "ElementaryTypeName", "src": "5266:6:0", "typeDescriptions": {"typeIdentifier": "t_bytes4", "typeString": "bytes4"}}, "visibility": "internal"}], "src": "5265:15:0"}, "src": "5257:110:0"}, {"block": {"id": 1147, "nodeType": "Block", "src": "5396:319:0", "statements": [{"condition": {"commonType": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "id": 1138, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"expression": {"id": 1135, "name": "reason", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1133, "src": "5414:6:0", "typeDescriptions": {"typeIdentifier": "t_bytes_memory_ptr", "typeString": "bytes memory"}}, "id": 1136, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "length", "nodeType": "MemberAccess", "src": "5414:13:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "BinaryOperation", "operator": "==", "rightExpression": {"hexValue": "30", "id": 1137, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "5431:1:0", "typeDescriptions": {"typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0"}, "value": "0"}, "src": "5414:18:0", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "falseBody": {"id": 1145, "nodeType": "Block", "src": "5535:170:0", "statements": [{"AST": {"nodeType": "YulBlock", "src": "5613:78:0", "statements": [{"expression": {"arguments": [{"arguments": [{"kind": "number", "nodeType": "YulLiteral", "src": "5646:2:0", "type": "", "value": "32"}, {"name": "reason", "nodeType": "YulIdentifier", "src": "5650:6:0"}], "functionName": {"name": "add", "nodeType": "YulIdentifier", "src": "5642:3:0"}, "nodeType": "YulFunctionCall", "src": "5642:15:0"}, {"arguments": [{"name": "reason", "nodeType": "YulIdentifier", "src": "5665:6:0"}], "functionName": {"name": "mload", "nodeType": "YulIdentifier", "src": "5659:5:0"}, "nodeType": "YulFunctionCall", "src": "5659:13:0"}], "functionName": {"name": "revert", "nodeType": "YulIdentifier", "src": "5635:6:0"}, "nodeType": "YulFunctionCall", "src": "5635:38:0"}, "nodeType": "YulExpressionStatement", "src": "5635:38:0"}]}, "documentation": "@solidity memory-safe-assembly", "evmVersion": "london", "externalReferences": [{"declaration": 1133, "isOffset": false, "isSlot": false, "src": "5650:6:0", "valueSize": 1}, {"declaration": 1133, "isOffset": false, "isSlot": false, "src": "5665:6:0", "valueSize": 1}], "id": 1144, "nodeType": "InlineAssembly", "src": "5604:87:0"}]}, "id": 1146, "nodeType": "IfStatement", "src": "5410:295:0", "trueBody": {"id": 1143, "nodeType": "Block", "src": "5434:95:0", "statements": [{"expression": {"arguments": [{"hexValue": "455243313336333a207472616e7366657220746f206e6f6e2045524331333633526563656976657220696d706c656d656e746572", "id": 1140, "isConstant": false, "isLValue": false, "isPure": true, "kind": "string", "lValueRequested": false, "nodeType": "Literal", "src": "5459:54:0", "typeDescriptions": {"typeIdentifier": "t_stringliteral_fda26a77014d4207db752a4441923aba32171ae11c20839f519f039730cda9ed", "typeString": "literal_string \"ERC1363: transfer to non ERC1363Receiver implementer\""}, "value": "ERC1363: transfer to non ERC1363Receiver implementer"}], "expression": {"argumentTypes": [{"typeIdentifier": "t_stringliteral_fda26a77014d4207db752a4441923aba32171ae11c20839f519f039730cda9ed", "typeString": "literal_string \"ERC1363: transfer to non ERC1363Receiver implementer\""}], "id": 1139, "name": "revert", "nodeType": "Identifier", "overloadedDeclarations": [-19, -19], "referencedDeclaration": -19, "src": "5452:6:0", "typeDescriptions": {"typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$", "typeString": "function (string memory) pure"}}, "id": 1141, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "5452:62:0", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 1142, "nodeType": "ExpressionStatement", "src": "5452:62:0"}]}}]}, "errorName": "", "id": 1148, "nodeType": "TryCatchClause", "parameters": {"id": 1134, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 1133, "mutability": "mutable", "name": "reason", "nameLocation": "5388:6:0", "nodeType": "VariableDeclaration", "scope": 1148, "src": "5375:19:0", "stateVariable": false, "storageLocation": "memory", "typeDescriptions": {"typeIdentifier": "t_bytes_memory_ptr", "typeString": "bytes"}, "typeName": {"id": 1132, "name": "bytes", "nodeType": "ElementaryTypeName", "src": "5375:5:0", "typeDescriptions": {"typeIdentifier": "t_bytes_storage_ptr", "typeString": "bytes"}}, "visibility": "internal"}], "src": "5374:21:0"}, "src": "5368:347:0"}], "externalCall": {"arguments": [{"arguments": [], "expression": {"argumentTypes": [], "id": 1115, "name": "_msgSender", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 2495, "src": "5221:10:0", "typeDescriptions": {"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$", "typeString": "function () view returns (address)"}}, "id": 1116, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "5221:12:0", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, {"id": 1117, "name": "sender", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1090, "src": "5235:6:0", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, {"id": 1118, "name": "amount", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1094, "src": "5243:6:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, {"id": 1119, "name": "data", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1096, "src": "5251:4:0", "typeDescriptions": {"typeIdentifier": "t_bytes_memory_ptr", "typeString": "bytes memory"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_address", "typeString": "address"}, {"typeIdentifier": "t_address", "typeString": "address"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}, {"typeIdentifier": "t_bytes_memory_ptr", "typeString": "bytes memory"}], "expression": {"arguments": [{"id": 1112, "name": "recipient", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1092, "src": "5191:9:0", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_address", "typeString": "address"}], "id": 1111, "name": "IERC1363Receiver", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1231, "src": "5174:16:0", "typeDescriptions": {"typeIdentifier": "t_type$_t_contract$_IERC1363Receiver_$1231_$", "typeString": "type(contract IERC1363Receiver)"}}, "id": 1113, "isConstant": false, "isLValue": false, "isPure": false, "kind": "typeConversion", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "5174:27:0", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_contract$_IERC1363Receiver_$1231", "typeString": "contract IERC1363Receiver"}}, "id": 1114, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "onTransferReceived", "nodeType": "MemberAccess", "referencedDeclaration": 1230, "src": "5174:46:0", "typeDescriptions": {"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bytes4_$", "typeString": "function (address,address,uint256,bytes memory) external returns (bytes4)"}}, "id": 1120, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "5174:82:0", "tryCall": true, "typeDescriptions": {"typeIdentifier": "t_bytes4", "typeString": "bytes4"}}, "id": 1149, "nodeType": "TryStatement", "src": "5170:545:0"}]}, "documentation": {"id": 1088, "nodeType": "StructuredDocumentation", "src": "4302:564:0", "text": " @dev Internal function to invoke {IERC1363Receiver-onTransferReceived} on a target address.\n  The call is not executed if the target address is not a contract.\n @param sender address Representing the previous owner of the given token amount\n @param recipient address Target address that will receive the tokens\n @param amount uint256 The amount mount of tokens to be transferred\n @param data bytes Optional data to send along with the call\n @return whether the call correctly returned the expected magic value"}, "id": 1151, "implemented": true, "kind": "function", "modifiers": [], "name": "_checkOnTransferReceived", "nameLocation": "4880:24:0", "nodeType": "FunctionDefinition", "parameters": {"id": 1097, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 1090, "mutability": "mutable", "name": "sender", "nameLocation": "4922:6:0", "nodeType": "VariableDeclaration", "scope": 1151, "src": "4914:14:0", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}, "typeName": {"id": 1089, "name": "address", "nodeType": "ElementaryTypeName", "src": "4914:7:0", "stateMutability": "nonpayable", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "visibility": "internal"}, {"constant": false, "id": 1092, "mutability": "mutable", "name": "recipient", "nameLocation": "4946:9:0", "nodeType": "VariableDeclaration", "scope": 1151, "src": "4938:17:0", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}, "typeName": {"id": 1091, "name": "address", "nodeType": "ElementaryTypeName", "src": "4938:7:0", "stateMutability": "nonpayable", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "visibility": "internal"}, {"constant": false, "id": 1094, "mutability": "mutable", "name": "amount", "nameLocation": "4973:6:0", "nodeType": "VariableDeclaration", "scope": 1151, "src": "4965:14:0", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 1093, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "4965:7:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}, {"constant": false, "id": 1096, "mutability": "mutable", "name": "data", "nameLocation": "5002:4:0", "nodeType": "VariableDeclaration", "scope": 1151, "src": "4989:17:0", "stateVariable": false, "storageLocation": "memory", "typeDescriptions": {"typeIdentifier": "t_bytes_memory_ptr", "typeString": "bytes"}, "typeName": {"id": 1095, "name": "bytes", "nodeType": "ElementaryTypeName", "src": "4989:5:0", "typeDescriptions": {"typeIdentifier": "t_bytes_storage_ptr", "typeString": "bytes"}}, "visibility": "internal"}], "src": "4904:108:0"}, "returnParameters": {"id": 1100, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 1099, "mutability": "mutable", "name": "", "nameLocation": "-1:-1:-1", "nodeType": "VariableDeclaration", "scope": 1151, "src": "5039:4:0", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}, "typeName": {"id": 1098, "name": "bool", "nodeType": "ElementaryTypeName", "src": "5039:4:0", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "visibility": "internal"}], "src": "5038:6:0"}, "scope": 1213, "src": "4871:850:0", "stateMutability": "nonpayable", "virtual": true, "visibility": "internal"}, {"body": {"id": 1211, "nodeType": "Block", "src": "6338:657:0", "statements": [{"condition": {"id": 1166, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "nodeType": "UnaryOperation", "operator": "!", "prefix": true, "src": "6352:21:0", "subExpression": {"arguments": [], "expression": {"argumentTypes": [], "expression": {"id": 1163, "name": "spender", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1154, "src": "6353:7:0", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "id": 1164, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "isContract", "nodeType": "MemberAccess", "referencedDeclaration": 1303, "src": "6353:18:0", "typeDescriptions": {"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$bound_to$_t_address_$", "typeString": "function (address) view returns (bool)"}}, "id": 1165, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "6353:20:0", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "id": 1172, "nodeType": "IfStatement", "src": "6348:101:0", "trueBody": {"id": 1171, "nodeType": "Block", "src": "6375:74:0", "statements": [{"expression": {"arguments": [{"hexValue": "455243313336333a20617070726f76652061206e6f6e20636f6e74726163742061646472657373", "id": 1168, "isConstant": false, "isLValue": false, "isPure": true, "kind": "string", "lValueRequested": false, "nodeType": "Literal", "src": "6396:41:0", "typeDescriptions": {"typeIdentifier": "t_stringliteral_089d83089d2535bbf2976b6e84b539a5df6abb47193ea3cb8222102ba3aa1dfe", "typeString": "literal_string \"ERC1363: approve a non contract address\""}, "value": "ERC1363: approve a non contract address"}], "expression": {"argumentTypes": [{"typeIdentifier": "t_stringliteral_089d83089d2535bbf2976b6e84b539a5df6abb47193ea3cb8222102ba3aa1dfe", "typeString": "literal_string \"ERC1363: approve a non contract address\""}], "id": 1167, "name": "revert", "nodeType": "Identifier", "overloadedDeclarations": [-19, -19], "referencedDeclaration": -19, "src": "6389:6:0", "typeDescriptions": {"typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$", "typeString": "function (string memory) pure"}}, "id": 1169, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "6389:49:0", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 1170, "nodeType": "ExpressionStatement", "src": "6389:49:0"}]}}, {"clauses": [{"block": {"id": 1191, "nodeType": "Block", "src": "6559:85:0", "statements": [{"expression": {"commonType": {"typeIdentifier": "t_bytes4", "typeString": "bytes4"}, "id": 1189, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"id": 1185, "name": "retval", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1183, "src": "6580:6:0", "typeDescriptions": {"typeIdentifier": "t_bytes4", "typeString": "bytes4"}}, "nodeType": "BinaryOperation", "operator": "==", "rightExpression": {"expression": {"expression": {"id": 1186, "name": "IERC1363Spender", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1757, "src": "6590:15:0", "typeDescriptions": {"typeIdentifier": "t_type$_t_contract$_IERC1363Spender_$1757_$", "typeString": "type(contract IERC1363Spender)"}}, "id": 1187, "isConstant": false, "isLValue": false, "isPure": true, "lValueRequested": false, "memberName": "onApprovalReceived", "nodeType": "MemberAccess", "referencedDeclaration": 1756, "src": "6590:34:0", "typeDescriptions": {"typeIdentifier": "t_function_declaration_nonpayable$_t_address_$_t_uint256_$_t_bytes_calldata_ptr_$returns$_t_bytes4_$", "typeString": "function IERC1363Spender.onApprovalReceived(address,uint256,bytes calldata) returns (bytes4)"}}, "id": 1188, "isConstant": false, "isLValue": false, "isPure": true, "lValueRequested": false, "memberName": "selector", "nodeType": "MemberAccess", "src": "6590:43:0", "typeDescriptions": {"typeIdentifier": "t_bytes4", "typeString": "bytes4"}}, "src": "6580:53:0", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "functionReturnParameters": 1162, "id": 1190, "nodeType": "Return", "src": "6573:60:0"}]}, "errorName": "", "id": 1192, "nodeType": "TryCatchClause", "parameters": {"id": 1184, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 1183, "mutability": "mutable", "name": "retval", "nameLocation": "6551:6:0", "nodeType": "VariableDeclaration", "scope": 1192, "src": "6544:13:0", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_bytes4", "typeString": "bytes4"}, "typeName": {"id": 1182, "name": "bytes4", "nodeType": "ElementaryTypeName", "src": "6544:6:0", "typeDescriptions": {"typeIdentifier": "t_bytes4", "typeString": "bytes4"}}, "visibility": "internal"}], "src": "6543:15:0"}, "src": "6535:109:0"}, {"block": {"id": 1208, "nodeType": "Block", "src": "6673:316:0", "statements": [{"condition": {"commonType": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "id": 1199, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"expression": {"id": 1196, "name": "reason", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1194, "src": "6691:6:0", "typeDescriptions": {"typeIdentifier": "t_bytes_memory_ptr", "typeString": "bytes memory"}}, "id": 1197, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "length", "nodeType": "MemberAccess", "src": "6691:13:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "BinaryOperation", "operator": "==", "rightExpression": {"hexValue": "30", "id": 1198, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "6708:1:0", "typeDescriptions": {"typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0"}, "value": "0"}, "src": "6691:18:0", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "falseBody": {"id": 1206, "nodeType": "Block", "src": "6809:170:0", "statements": [{"AST": {"nodeType": "YulBlock", "src": "6887:78:0", "statements": [{"expression": {"arguments": [{"arguments": [{"kind": "number", "nodeType": "YulLiteral", "src": "6920:2:0", "type": "", "value": "32"}, {"name": "reason", "nodeType": "YulIdentifier", "src": "6924:6:0"}], "functionName": {"name": "add", "nodeType": "YulIdentifier", "src": "6916:3:0"}, "nodeType": "YulFunctionCall", "src": "6916:15:0"}, {"arguments": [{"name": "reason", "nodeType": "YulIdentifier", "src": "6939:6:0"}], "functionName": {"name": "mload", "nodeType": "YulIdentifier", "src": "6933:5:0"}, "nodeType": "YulFunctionCall", "src": "6933:13:0"}], "functionName": {"name": "revert", "nodeType": "YulIdentifier", "src": "6909:6:0"}, "nodeType": "YulFunctionCall", "src": "6909:38:0"}, "nodeType": "YulExpressionStatement", "src": "6909:38:0"}]}, "documentation": "@solidity memory-safe-assembly", "evmVersion": "london", "externalReferences": [{"declaration": 1194, "isOffset": false, "isSlot": false, "src": "6924:6:0", "valueSize": 1}, {"declaration": 1194, "isOffset": false, "isSlot": false, "src": "6939:6:0", "valueSize": 1}], "id": 1205, "nodeType": "InlineAssembly", "src": "6878:87:0"}]}, "id": 1207, "nodeType": "IfStatement", "src": "6687:292:0", "trueBody": {"id": 1204, "nodeType": "Block", "src": "6711:92:0", "statements": [{"expression": {"arguments": [{"hexValue": "455243313336333a20617070726f76652061206e6f6e20455243313336335370656e64657220696d706c656d656e746572", "id": 1201, "isConstant": false, "isLValue": false, "isPure": true, "kind": "string", "lValueRequested": false, "nodeType": "Literal", "src": "6736:51:0", "typeDescriptions": {"typeIdentifier": "t_stringliteral_4a1e1d8579c80ed7a6447366cb7f9ea330cf066a3257ac9d907ba111747dc69c", "typeString": "literal_string \"ERC1363: approve a non ERC1363Spender implementer\""}, "value": "ERC1363: approve a non ERC1363Spender implementer"}], "expression": {"argumentTypes": [{"typeIdentifier": "t_stringliteral_4a1e1d8579c80ed7a6447366cb7f9ea330cf066a3257ac9d907ba111747dc69c", "typeString": "literal_string \"ERC1363: approve a non ERC1363Spender implementer\""}], "id": 1200, "name": "revert", "nodeType": "Identifier", "overloadedDeclarations": [-19, -19], "referencedDeclaration": -19, "src": "6729:6:0", "typeDescriptions": {"typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$", "typeString": "function (string memory) pure"}}, "id": 1202, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "6729:59:0", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 1203, "nodeType": "ExpressionStatement", "src": "6729:59:0"}]}}]}, "errorName": "", "id": 1209, "nodeType": "TryCatchClause", "parameters": {"id": 1195, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 1194, "mutability": "mutable", "name": "reason", "nameLocation": "6665:6:0", "nodeType": "VariableDeclaration", "scope": 1209, "src": "6652:19:0", "stateVariable": false, "storageLocation": "memory", "typeDescriptions": {"typeIdentifier": "t_bytes_memory_ptr", "typeString": "bytes"}, "typeName": {"id": 1193, "name": "bytes", "nodeType": "ElementaryTypeName", "src": "6652:5:0", "typeDescriptions": {"typeIdentifier": "t_bytes_storage_ptr", "typeString": "bytes"}}, "visibility": "internal"}], "src": "6651:21:0"}, "src": "6645:344:0"}], "externalCall": {"arguments": [{"arguments": [], "expression": {"argumentTypes": [], "id": 1177, "name": "_msgSender", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 2495, "src": "6507:10:0", "typeDescriptions": {"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$", "typeString": "function () view returns (address)"}}, "id": 1178, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "6507:12:0", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, {"id": 1179, "name": "amount", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1156, "src": "6521:6:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, {"id": 1180, "name": "data", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1158, "src": "6529:4:0", "typeDescriptions": {"typeIdentifier": "t_bytes_memory_ptr", "typeString": "bytes memory"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_address", "typeString": "address"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}, {"typeIdentifier": "t_bytes_memory_ptr", "typeString": "bytes memory"}], "expression": {"arguments": [{"id": 1174, "name": "spender", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1154, "src": "6479:7:0", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_address", "typeString": "address"}], "id": 1173, "name": "IERC1363Spender", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1757, "src": "6463:15:0", "typeDescriptions": {"typeIdentifier": "t_type$_t_contract$_IERC1363Spender_$1757_$", "typeString": "type(contract IERC1363Spender)"}}, "id": 1175, "isConstant": false, "isLValue": false, "isPure": false, "kind": "typeConversion", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "6463:24:0", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_contract$_IERC1363Spender_$1757", "typeString": "contract IERC1363Spender"}}, "id": 1176, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "onApprovalReceived", "nodeType": "MemberAccess", "referencedDeclaration": 1756, "src": "6463:43:0", "typeDescriptions": {"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bytes4_$", "typeString": "function (address,uint256,bytes memory) external returns (bytes4)"}}, "id": 1181, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "6463:71:0", "tryCall": true, "typeDescriptions": {"typeIdentifier": "t_bytes4", "typeString": "bytes4"}}, "id": 1210, "nodeType": "TryStatement", "src": "6459:530:0"}]}, "documentation": {"id": 1152, "nodeType": "StructuredDocumentation", "src": "5727:458:0", "text": " @dev Internal function to invoke {IERC1363Receiver-onApprovalReceived} on a target address.\n  The call is not executed if the target address is not a contract.\n @param spender address The address which will spend the funds\n @param amount uint256 The amount of tokens to be spent\n @param data bytes Optional data to send along with the call\n @return whether the call correctly returned the expected magic value"}, "id": 1212, "implemented": true, "kind": "function", "modifiers": [], "name": "_checkOnApprovalReceived", "nameLocation": "6199:24:0", "nodeType": "FunctionDefinition", "parameters": {"id": 1159, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 1154, "mutability": "mutable", "name": "spender", "nameLocation": "6241:7:0", "nodeType": "VariableDeclaration", "scope": 1212, "src": "6233:15:0", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}, "typeName": {"id": 1153, "name": "address", "nodeType": "ElementaryTypeName", "src": "6233:7:0", "stateMutability": "nonpayable", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "visibility": "internal"}, {"constant": false, "id": 1156, "mutability": "mutable", "name": "amount", "nameLocation": "6266:6:0", "nodeType": "VariableDeclaration", "scope": 1212, "src": "6258:14:0", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 1155, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "6258:7:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}, {"constant": false, "id": 1158, "mutability": "mutable", "name": "data", "nameLocation": "6295:4:0", "nodeType": "VariableDeclaration", "scope": 1212, "src": "6282:17:0", "stateVariable": false, "storageLocation": "memory", "typeDescriptions": {"typeIdentifier": "t_bytes_memory_ptr", "typeString": "bytes"}, "typeName": {"id": 1157, "name": "bytes", "nodeType": "ElementaryTypeName", "src": "6282:5:0", "typeDescriptions": {"typeIdentifier": "t_bytes_storage_ptr", "typeString": "bytes"}}, "visibility": "internal"}], "src": "6223:82:0"}, "returnParameters": {"id": 1162, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 1161, "mutability": "mutable", "name": "", "nameLocation": "-1:-1:-1", "nodeType": "VariableDeclaration", "scope": 1212, "src": "6332:4:0", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}, "typeName": {"id": 1160, "name": "bool", "nodeType": "ElementaryTypeName", "src": "6332:4:0", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "visibility": "internal"}], "src": "6331:6:0"}, "scope": 1213, "src": "6190:805:0", "stateMutability": "nonpayable", "virtual": true, "visibility": "internal"}], "scope": 1214, "src": "460:6537:0", "usedErrors": []}], "src": "33:6965:0"}}, "/Users/vladimirtrifonov/src/playground/solidity/rare-skills/advanced-solidity-bootcamp/fuzzing-with-echidna/bonding-token/lib/erc1363-payable-token/contracts/token/ERC1363/IERC1363.sol": {"AST": {"absolutePath": "lib/erc1363-payable-token/contracts/token/ERC1363/IERC1363.sol", "exportedSymbols": {"IERC1363": [1741], "IERC165": [2458], "IERC20": [2446]}, "id": 1742, "license": "MIT", "nodeType": "SourceUnit", "nodes": [{"id": 1663, "literals": ["solidity", "^", "0.8", ".0"], "nodeType": "PragmaDirective", "src": "33:23:1"}, {"absolutePath": "lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol", "file": "../../../../openzeppelin-contracts/contracts/token/ERC20/IERC20.sol", "id": 1664, "nameLocation": "-1:-1:-1", "nodeType": "ImportDirective", "scope": 1742, "sourceUnit": 2447, "src": "58:77:1", "symbolAliases": [], "unitAlias": ""}, {"absolutePath": "lib/openzeppelin-contracts/contracts/utils/introspection/IERC165.sol", "file": "../../../../openzeppelin-contracts/contracts/utils/introspection/IERC165.sol", "id": 1665, "nameLocation": "-1:-1:-1", "nodeType": "ImportDirective", "scope": 1742, "sourceUnit": 2459, "src": "136:86:1", "symbolAliases": [], "unitAlias": ""}, {"abstract": false, "baseContracts": [{"baseName": {"id": 1667, "name": "IERC20", "nodeType": "IdentifierPath", "referencedDeclaration": 2446, "src": "399:6:1"}, "id": 1668, "nodeType": "InheritanceSpecifier", "src": "399:6:1"}, {"baseName": {"id": 1669, "name": "IERC165", "nodeType": "IdentifierPath", "referencedDeclaration": 2458, "src": "407:7:1"}, "id": 1670, "nodeType": "InheritanceSpecifier", "src": "407:7:1"}], "canonicalName": "IERC1363", "contractDependencies": [], "contractKind": "interface", "documentation": {"id": 1666, "nodeType": "StructuredDocumentation", "src": "224:152:1", "text": " @title IERC1363 Interface\n @dev Interface of an ERC1363 compliant contract, as defined in the https://eips.ethereum.org/EIPS/eip-1363[EIP]."}, "fullyImplemented": false, "id": 1741, "linearizedBaseContracts": [1741, 2458, 2446], "name": "IERC1363", "nameLocation": "387:8:1", "nodeType": "ContractDefinition", "nodes": [{"documentation": {"id": 1671, "nodeType": "StructuredDocumentation", "src": "957:298:1", "text": " @notice Transfer tokens from `msg.sender` to another address and then call `onTransferReceived` on receiver.\n @param to address The address which you want to transfer to\n @param amount uint256 The amount of tokens to be transferred\n @return true unless throwing"}, "functionSelector": "1296ee62", "id": 1680, "implemented": false, "kind": "function", "modifiers": [], "name": "transferAndCall", "nameLocation": "1269:15:1", "nodeType": "FunctionDefinition", "parameters": {"id": 1676, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 1673, "mutability": "mutable", "name": "to", "nameLocation": "1293:2:1", "nodeType": "VariableDeclaration", "scope": 1680, "src": "1285:10:1", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}, "typeName": {"id": 1672, "name": "address", "nodeType": "ElementaryTypeName", "src": "1285:7:1", "stateMutability": "nonpayable", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "visibility": "internal"}, {"constant": false, "id": 1675, "mutability": "mutable", "name": "amount", "nameLocation": "1305:6:1", "nodeType": "VariableDeclaration", "scope": 1680, "src": "1297:14:1", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 1674, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "1297:7:1", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "src": "1284:28:1"}, "returnParameters": {"id": 1679, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 1678, "mutability": "mutable", "name": "", "nameLocation": "-1:-1:-1", "nodeType": "VariableDeclaration", "scope": 1680, "src": "1331:4:1", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}, "typeName": {"id": 1677, "name": "bool", "nodeType": "ElementaryTypeName", "src": "1331:4:1", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "visibility": "internal"}], "src": "1330:6:1"}, "scope": 1741, "src": "1260:77:1", "stateMutability": "nonpayable", "virtual": false, "visibility": "external"}, {"documentation": {"id": 1681, "nodeType": "StructuredDocumentation", "src": "1343:386:1", "text": " @notice Transfer tokens from `msg.sender` to another address and then call `onTransferReceived` on receiver.\n @param to address The address which you want to transfer to\n @param amount uint256 The amount of tokens to be transferred\n @param data bytes Additional data with no specified format, sent in call to `to`\n @return true unless throwing"}, "functionSelector": "4000aea0", "id": 1692, "implemented": false, "kind": "function", "modifiers": [], "name": "transferAndCall", "nameLocation": "1743:15:1", "nodeType": "FunctionDefinition", "parameters": {"id": 1688, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 1683, "mutability": "mutable", "name": "to", "nameLocation": "1767:2:1", "nodeType": "VariableDeclaration", "scope": 1692, "src": "1759:10:1", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}, "typeName": {"id": 1682, "name": "address", "nodeType": "ElementaryTypeName", "src": "1759:7:1", "stateMutability": "nonpayable", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "visibility": "internal"}, {"constant": false, "id": 1685, "mutability": "mutable", "name": "amount", "nameLocation": "1779:6:1", "nodeType": "VariableDeclaration", "scope": 1692, "src": "1771:14:1", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 1684, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "1771:7:1", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}, {"constant": false, "id": 1687, "mutability": "mutable", "name": "data", "nameLocation": "1802:4:1", "nodeType": "VariableDeclaration", "scope": 1692, "src": "1787:19:1", "stateVariable": false, "storageLocation": "calldata", "typeDescriptions": {"typeIdentifier": "t_bytes_calldata_ptr", "typeString": "bytes"}, "typeName": {"id": 1686, "name": "bytes", "nodeType": "ElementaryTypeName", "src": "1787:5:1", "typeDescriptions": {"typeIdentifier": "t_bytes_storage_ptr", "typeString": "bytes"}}, "visibility": "internal"}], "src": "1758:49:1"}, "returnParameters": {"id": 1691, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 1690, "mutability": "mutable", "name": "", "nameLocation": "-1:-1:-1", "nodeType": "VariableDeclaration", "scope": 1692, "src": "1826:4:1", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}, "typeName": {"id": 1689, "name": "bool", "nodeType": "ElementaryTypeName", "src": "1826:4:1", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "visibility": "internal"}], "src": "1825:6:1"}, "scope": 1741, "src": "1734:98:1", "stateMutability": "nonpayable", "virtual": false, "visibility": "external"}, {"documentation": {"id": 1693, "nodeType": "StructuredDocumentation", "src": "1838:363:1", "text": " @notice Transfer tokens from one address to another and then call `onTransferReceived` on receiver.\n @param from address The address which you want to send tokens from\n @param to address The address which you want to transfer to\n @param amount uint256 The amount of tokens to be transferred\n @return true unless throwing"}, "functionSelector": "d8fbe994", "id": 1704, "implemented": false, "kind": "function", "modifiers": [], "name": "transferFromAndCall", "nameLocation": "2215:19:1", "nodeType": "FunctionDefinition", "parameters": {"id": 1700, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 1695, "mutability": "mutable", "name": "from", "nameLocation": "2243:4:1", "nodeType": "VariableDeclaration", "scope": 1704, "src": "2235:12:1", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}, "typeName": {"id": 1694, "name": "address", "nodeType": "ElementaryTypeName", "src": "2235:7:1", "stateMutability": "nonpayable", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "visibility": "internal"}, {"constant": false, "id": 1697, "mutability": "mutable", "name": "to", "nameLocation": "2257:2:1", "nodeType": "VariableDeclaration", "scope": 1704, "src": "2249:10:1", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}, "typeName": {"id": 1696, "name": "address", "nodeType": "ElementaryTypeName", "src": "2249:7:1", "stateMutability": "nonpayable", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "visibility": "internal"}, {"constant": false, "id": 1699, "mutability": "mutable", "name": "amount", "nameLocation": "2269:6:1", "nodeType": "VariableDeclaration", "scope": 1704, "src": "2261:14:1", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 1698, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "2261:7:1", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "src": "2234:42:1"}, "returnParameters": {"id": 1703, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 1702, "mutability": "mutable", "name": "", "nameLocation": "-1:-1:-1", "nodeType": "VariableDeclaration", "scope": 1704, "src": "2295:4:1", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}, "typeName": {"id": 1701, "name": "bool", "nodeType": "ElementaryTypeName", "src": "2295:4:1", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "visibility": "internal"}], "src": "2294:6:1"}, "scope": 1741, "src": "2206:95:1", "stateMutability": "nonpayable", "virtual": false, "visibility": "external"}, {"documentation": {"id": 1705, "nodeType": "StructuredDocumentation", "src": "2307:451:1", "text": " @notice Transfer tokens from one address to another and then call `onTransferReceived` on receiver.\n @param from address The address which you want to send tokens from\n @param to address The address which you want to transfer to\n @param amount uint256 The amount of tokens to be transferred\n @param data bytes Additional data with no specified format, sent in call to `to`\n @return true unless throwing"}, "functionSelector": "c1d34b89", "id": 1718, "implemented": false, "kind": "function", "modifiers": [], "name": "transferFromAndCall", "nameLocation": "2772:19:1", "nodeType": "FunctionDefinition", "parameters": {"id": 1714, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 1707, "mutability": "mutable", "name": "from", "nameLocation": "2800:4:1", "nodeType": "VariableDeclaration", "scope": 1718, "src": "2792:12:1", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}, "typeName": {"id": 1706, "name": "address", "nodeType": "ElementaryTypeName", "src": "2792:7:1", "stateMutability": "nonpayable", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "visibility": "internal"}, {"constant": false, "id": 1709, "mutability": "mutable", "name": "to", "nameLocation": "2814:2:1", "nodeType": "VariableDeclaration", "scope": 1718, "src": "2806:10:1", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}, "typeName": {"id": 1708, "name": "address", "nodeType": "ElementaryTypeName", "src": "2806:7:1", "stateMutability": "nonpayable", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "visibility": "internal"}, {"constant": false, "id": 1711, "mutability": "mutable", "name": "amount", "nameLocation": "2826:6:1", "nodeType": "VariableDeclaration", "scope": 1718, "src": "2818:14:1", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 1710, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "2818:7:1", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}, {"constant": false, "id": 1713, "mutability": "mutable", "name": "data", "nameLocation": "2849:4:1", "nodeType": "VariableDeclaration", "scope": 1718, "src": "2834:19:1", "stateVariable": false, "storageLocation": "calldata", "typeDescriptions": {"typeIdentifier": "t_bytes_calldata_ptr", "typeString": "bytes"}, "typeName": {"id": 1712, "name": "bytes", "nodeType": "ElementaryTypeName", "src": "2834:5:1", "typeDescriptions": {"typeIdentifier": "t_bytes_storage_ptr", "typeString": "bytes"}}, "visibility": "internal"}], "src": "2791:63:1"}, "returnParameters": {"id": 1717, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 1716, "mutability": "mutable", "name": "", "nameLocation": "-1:-1:-1", "nodeType": "VariableDeclaration", "scope": 1718, "src": "2873:4:1", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}, "typeName": {"id": 1715, "name": "bool", "nodeType": "ElementaryTypeName", "src": "2873:4:1", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "visibility": "internal"}], "src": "2872:6:1"}, "scope": 1741, "src": "2763:116:1", "stateMutability": "nonpayable", "virtual": false, "visibility": "external"}, {"documentation": {"id": 1719, "nodeType": "StructuredDocumentation", "src": "2885:696:1", "text": " @notice Approve the passed address to spend the specified amount of tokens on behalf of msg.sender\n and then call `onApprovalReceived` on spender.\n Beware that changing an allowance with this method brings the risk that someone may use both the old\n and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this\n race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n @param spender address The address which will spend the funds\n @param amount uint256 The amount of tokens to be spent"}, "functionSelector": "3177029f", "id": 1728, "implemented": false, "kind": "function", "modifiers": [], "name": "approveAndCall", "nameLocation": "3595:14:1", "nodeType": "FunctionDefinition", "parameters": {"id": 1724, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 1721, "mutability": "mutable", "name": "spender", "nameLocation": "3618:7:1", "nodeType": "VariableDeclaration", "scope": 1728, "src": "3610:15:1", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}, "typeName": {"id": 1720, "name": "address", "nodeType": "ElementaryTypeName", "src": "3610:7:1", "stateMutability": "nonpayable", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "visibility": "internal"}, {"constant": false, "id": 1723, "mutability": "mutable", "name": "amount", "nameLocation": "3635:6:1", "nodeType": "VariableDeclaration", "scope": 1728, "src": "3627:14:1", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 1722, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "3627:7:1", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "src": "3609:33:1"}, "returnParameters": {"id": 1727, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 1726, "mutability": "mutable", "name": "", "nameLocation": "-1:-1:-1", "nodeType": "VariableDeclaration", "scope": 1728, "src": "3661:4:1", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}, "typeName": {"id": 1725, "name": "bool", "nodeType": "ElementaryTypeName", "src": "3661:4:1", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "visibility": "internal"}], "src": "3660:6:1"}, "scope": 1741, "src": "3586:81:1", "stateMutability": "nonpayable", "virtual": false, "visibility": "external"}, {"documentation": {"id": 1729, "nodeType": "StructuredDocumentation", "src": "3673:789:1", "text": " @notice Approve the passed address to spend the specified amount of tokens on behalf of msg.sender\n and then call `onApprovalReceived` on spender.\n Beware that changing an allowance with this method brings the risk that someone may use both the old\n and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this\n race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n @param spender address The address which will spend the funds\n @param amount uint256 The amount of tokens to be spent\n @param data bytes Additional data with no specified format, sent in call to `spender`"}, "functionSelector": "cae9ca51", "id": 1740, "implemented": false, "kind": "function", "modifiers": [], "name": "approveAndCall", "nameLocation": "4476:14:1", "nodeType": "FunctionDefinition", "parameters": {"id": 1736, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 1731, "mutability": "mutable", "name": "spender", "nameLocation": "4499:7:1", "nodeType": "VariableDeclaration", "scope": 1740, "src": "4491:15:1", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}, "typeName": {"id": 1730, "name": "address", "nodeType": "ElementaryTypeName", "src": "4491:7:1", "stateMutability": "nonpayable", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "visibility": "internal"}, {"constant": false, "id": 1733, "mutability": "mutable", "name": "amount", "nameLocation": "4516:6:1", "nodeType": "VariableDeclaration", "scope": 1740, "src": "4508:14:1", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 1732, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "4508:7:1", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}, {"constant": false, "id": 1735, "mutability": "mutable", "name": "data", "nameLocation": "4539:4:1", "nodeType": "VariableDeclaration", "scope": 1740, "src": "4524:19:1", "stateVariable": false, "storageLocation": "calldata", "typeDescriptions": {"typeIdentifier": "t_bytes_calldata_ptr", "typeString": "bytes"}, "typeName": {"id": 1734, "name": "bytes", "nodeType": "ElementaryTypeName", "src": "4524:5:1", "typeDescriptions": {"typeIdentifier": "t_bytes_storage_ptr", "typeString": "bytes"}}, "visibility": "internal"}], "src": "4490:54:1"}, "returnParameters": {"id": 1739, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 1738, "mutability": "mutable", "name": "", "nameLocation": "-1:-1:-1", "nodeType": "VariableDeclaration", "scope": 1740, "src": "4563:4:1", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}, "typeName": {"id": 1737, "name": "bool", "nodeType": "ElementaryTypeName", "src": "4563:4:1", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "visibility": "internal"}], "src": "4562:6:1"}, "scope": 1741, "src": "4467:102:1", "stateMutability": "nonpayable", "virtual": false, "visibility": "external"}], "scope": 1742, "src": "377:4194:1", "usedErrors": []}], "src": "33:4539:1"}}, "/Users/vladimirtrifonov/src/playground/solidity/rare-skills/advanced-solidity-bootcamp/fuzzing-with-echidna/bonding-token/lib/erc1363-payable-token/contracts/token/ERC1363/IERC1363Receiver.sol": {"AST": {"absolutePath": "lib/erc1363-payable-token/contracts/token/ERC1363/IERC1363Receiver.sol", "exportedSymbols": {"IERC1363Receiver": [1231]}, "id": 1232, "license": "MIT", "nodeType": "SourceUnit", "nodes": [{"id": 1215, "literals": ["solidity", "^", "0.8", ".0"], "nodeType": "PragmaDirective", "src": "33:23:2"}, {"abstract": false, "baseContracts": [], "canonicalName": "IERC1363Receiver", "contractDependencies": [], "contractKind": "interface", "documentation": {"id": 1216, "nodeType": "StructuredDocumentation", "src": "58:178:2", "text": " @title IERC1363Receiver interface\n @dev Interface for any contract that wants to support `transferAndCall` or `transferFromAndCall`\n  from ERC1363 token contracts."}, "fullyImplemented": false, "id": 1231, "linearizedBaseContracts": [1231], "name": "IERC1363Receiver", "nameLocation": "247:16:2", "nodeType": "ContractDefinition", "nodes": [{"documentation": {"id": 1217, "nodeType": "StructuredDocumentation", "src": "449:827:2", "text": " @notice Handle the receipt of ERC1363 tokens.\n @dev Any ERC1363 smart contract calls this function on the recipient\n after a `transfer` or a `transferFrom`. This function MAY throw to revert and reject the\n transfer. Return of other than the magic value MUST result in the\n transaction being reverted.\n Note: the token contract address is always the message sender.\n @param spender address The address which called `transferAndCall` or `transferFromAndCall` function\n @param sender address The address which are token transferred from\n @param amount uint256 The amount of tokens transferred\n @param data bytes Additional data with no specified format\n @return `bytes4(keccak256(\"onTransferReceived(address,address,uint256,bytes)\"))` unless throwing"}, "functionSelector": "88a7ca5c", "id": 1230, "implemented": false, "kind": "function", "modifiers": [], "name": "onTransferReceived", "nameLocation": "1290:18:2", "nodeType": "FunctionDefinition", "parameters": {"id": 1226, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 1219, "mutability": "mutable", "name": "spender", "nameLocation": "1326:7:2", "nodeType": "VariableDeclaration", "scope": 1230, "src": "1318:15:2", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}, "typeName": {"id": 1218, "name": "address", "nodeType": "ElementaryTypeName", "src": "1318:7:2", "stateMutability": "nonpayable", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "visibility": "internal"}, {"constant": false, "id": 1221, "mutability": "mutable", "name": "sender", "nameLocation": "1351:6:2", "nodeType": "VariableDeclaration", "scope": 1230, "src": "1343:14:2", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}, "typeName": {"id": 1220, "name": "address", "nodeType": "ElementaryTypeName", "src": "1343:7:2", "stateMutability": "nonpayable", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "visibility": "internal"}, {"constant": false, "id": 1223, "mutability": "mutable", "name": "amount", "nameLocation": "1375:6:2", "nodeType": "VariableDeclaration", "scope": 1230, "src": "1367:14:2", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 1222, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "1367:7:2", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}, {"constant": false, "id": 1225, "mutability": "mutable", "name": "data", "nameLocation": "1406:4:2", "nodeType": "VariableDeclaration", "scope": 1230, "src": "1391:19:2", "stateVariable": false, "storageLocation": "calldata", "typeDescriptions": {"typeIdentifier": "t_bytes_calldata_ptr", "typeString": "bytes"}, "typeName": {"id": 1224, "name": "bytes", "nodeType": "ElementaryTypeName", "src": "1391:5:2", "typeDescriptions": {"typeIdentifier": "t_bytes_storage_ptr", "typeString": "bytes"}}, "visibility": "internal"}], "src": "1308:108:2"}, "returnParameters": {"id": 1229, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 1228, "mutability": "mutable", "name": "", "nameLocation": "-1:-1:-1", "nodeType": "VariableDeclaration", "scope": 1230, "src": "1435:6:2", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_bytes4", "typeString": "bytes4"}, "typeName": {"id": 1227, "name": "bytes4", "nodeType": "ElementaryTypeName", "src": "1435:6:2", "typeDescriptions": {"typeIdentifier": "t_bytes4", "typeString": "bytes4"}}, "visibility": "internal"}], "src": "1434:8:2"}, "scope": 1231, "src": "1281:162:2", "stateMutability": "nonpayable", "virtual": false, "visibility": "external"}], "scope": 1232, "src": "237:1208:2", "usedErrors": []}], "src": "33:1413:2"}}, "/Users/vladimirtrifonov/src/playground/solidity/rare-skills/advanced-solidity-bootcamp/fuzzing-with-echidna/bonding-token/lib/erc1363-payable-token/contracts/token/ERC1363/IERC1363Spender.sol": {"AST": {"absolutePath": "lib/erc1363-payable-token/contracts/token/ERC1363/IERC1363Spender.sol", "exportedSymbols": {"IERC1363Spender": [1757]}, "id": 1758, "license": "MIT", "nodeType": "SourceUnit", "nodes": [{"id": 1743, "literals": ["solidity", "^", "0.8", ".0"], "nodeType": "PragmaDirective", "src": "33:23:3"}, {"abstract": false, "baseContracts": [], "canonicalName": "IERC1363Spender", "contractDependencies": [], "contractKind": "interface", "documentation": {"id": 1744, "nodeType": "StructuredDocumentation", "src": "58:150:3", "text": " @title ERC1363Spender interface\n @dev Interface for any contract that wants to support `approveAndCall`\n  from ERC1363 token contracts."}, "fullyImplemented": false, "id": 1757, "linearizedBaseContracts": [1757], "name": "IERC1363Spender", "nameLocation": "219:15:3", "nodeType": "ContractDefinition", "nodes": [{"documentation": {"id": 1745, "nodeType": "StructuredDocumentation", "src": "412:699:3", "text": " @notice Handle the approval of ERC1363 tokens.\n @dev Any ERC1363 smart contract calls this function on the recipient\n after an `approve`. This function MAY throw to revert and reject the\n approval. Return of other than the magic value MUST result in the\n transaction being reverted.\n Note: the token contract address is always the message sender.\n @param sender address The address which called `approveAndCall` function\n @param amount uint256 The amount of tokens to be spent\n @param data bytes Additional data with no specified format\n @return `bytes4(keccak256(\"onApprovalReceived(address,uint256,bytes)\"))` unless throwing"}, "functionSelector": "7b04a2d0", "id": 1756, "implemented": false, "kind": "function", "modifiers": [], "name": "onApprovalReceived", "nameLocation": "1125:18:3", "nodeType": "FunctionDefinition", "parameters": {"id": 1752, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 1747, "mutability": "mutable", "name": "sender", "nameLocation": "1152:6:3", "nodeType": "VariableDeclaration", "scope": 1756, "src": "1144:14:3", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}, "typeName": {"id": 1746, "name": "address", "nodeType": "ElementaryTypeName", "src": "1144:7:3", "stateMutability": "nonpayable", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "visibility": "internal"}, {"constant": false, "id": 1749, "mutability": "mutable", "name": "amount", "nameLocation": "1168:6:3", "nodeType": "VariableDeclaration", "scope": 1756, "src": "1160:14:3", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 1748, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "1160:7:3", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}, {"constant": false, "id": 1751, "mutability": "mutable", "name": "data", "nameLocation": "1191:4:3", "nodeType": "VariableDeclaration", "scope": 1756, "src": "1176:19:3", "stateVariable": false, "storageLocation": "calldata", "typeDescriptions": {"typeIdentifier": "t_bytes_calldata_ptr", "typeString": "bytes"}, "typeName": {"id": 1750, "name": "bytes", "nodeType": "ElementaryTypeName", "src": "1176:5:3", "typeDescriptions": {"typeIdentifier": "t_bytes_storage_ptr", "typeString": "bytes"}}, "visibility": "internal"}], "src": "1143:53:3"}, "returnParameters": {"id": 1755, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 1754, "mutability": "mutable", "name": "", "nameLocation": "-1:-1:-1", "nodeType": "VariableDeclaration", "scope": 1756, "src": "1215:6:3", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_bytes4", "typeString": "bytes4"}, "typeName": {"id": 1753, "name": "bytes4", "nodeType": "ElementaryTypeName", "src": "1215:6:3", "typeDescriptions": {"typeIdentifier": "t_bytes4", "typeString": "bytes4"}}, "visibility": "internal"}], "src": "1214:8:3"}, "scope": 1757, "src": "1116:107:3", "stateMutability": "nonpayable", "virtual": false, "visibility": "external"}], "scope": 1758, "src": "209:1016:3", "usedErrors": []}], "src": "33:1193:3"}}, "/Users/vladimirtrifonov/src/playground/solidity/rare-skills/advanced-solidity-bootcamp/fuzzing-with-echidna/bonding-token/lib/openzeppelin-contracts/contracts/security/ReentrancyGuard.sol": {"AST": {"absolutePath": "lib/openzeppelin-contracts/contracts/security/ReentrancyGuard.sol", "exportedSymbols": {"ReentrancyGuard": [1285]}, "id": 1286, "license": "MIT", "nodeType": "SourceUnit", "nodes": [{"id": 1233, "literals": ["solidity", "^", "0.8", ".0"], "nodeType": "PragmaDirective", "src": "112:23:4"}, {"abstract": true, "baseContracts": [], "canonicalName": "ReentrancyGuard", "contractDependencies": [], "contractKind": "contract", "documentation": {"id": 1234, "nodeType": "StructuredDocumentation", "src": "137:750:4", "text": " @dev Contract module that helps prevent reentrant calls to a function.\n Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\n available, which can be applied to functions to make sure there are no nested\n (reentrant) calls to them.\n Note that because there is a single `nonReentrant` guard, functions marked as\n `nonReentrant` may not call one another. This can be worked around by making\n those functions `private`, and then adding `external` `nonReentrant` entry\n points to them.\n TIP: If you would like to learn more about reentrancy and alternative ways\n to protect against it, check out our blog post\n https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul]."}, "fullyImplemented": true, "id": 1285, "linearizedBaseContracts": [1285], "name": "ReentrancyGuard", "nameLocation": "906:15:4", "nodeType": "ContractDefinition", "nodes": [{"constant": true, "id": 1237, "mutability": "constant", "name": "_NOT_ENTERED", "nameLocation": "1701:12:4", "nodeType": "VariableDeclaration", "scope": 1285, "src": "1676:41:4", "stateVariable": true, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 1235, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "1676:7:4", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "value": {"hexValue": "31", "id": 1236, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "1716:1:4", "typeDescriptions": {"typeIdentifier": "t_rational_1_by_1", "typeString": "int_const 1"}, "value": "1"}, "visibility": "private"}, {"constant": true, "id": 1240, "mutability": "constant", "name": "_ENTERED", "nameLocation": "1748:8:4", "nodeType": "VariableDeclaration", "scope": 1285, "src": "1723:37:4", "stateVariable": true, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 1238, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "1723:7:4", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "value": {"hexValue": "32", "id": 1239, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "1759:1:4", "typeDescriptions": {"typeIdentifier": "t_rational_2_by_1", "typeString": "int_const 2"}, "value": "2"}, "visibility": "private"}, {"constant": false, "id": 1242, "mutability": "mutable", "name": "_status", "nameLocation": "1783:7:4", "nodeType": "VariableDeclaration", "scope": 1285, "src": "1767:23:4", "stateVariable": true, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 1241, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "1767:7:4", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "private"}, {"body": {"id": 1249, "nodeType": "Block", "src": "1811:39:4", "statements": [{"expression": {"id": 1247, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"id": 1245, "name": "_status", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1242, "src": "1821:7:4", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"id": 1246, "name": "_NOT_ENTERED", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1237, "src": "1831:12:4", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "1821:22:4", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 1248, "nodeType": "ExpressionStatement", "src": "1821:22:4"}]}, "id": 1250, "implemented": true, "kind": "constructor", "modifiers": [], "name": "", "nameLocation": "-1:-1:-1", "nodeType": "FunctionDefinition", "parameters": {"id": 1243, "nodeType": "ParameterList", "parameters": [], "src": "1808:2:4"}, "returnParameters": {"id": 1244, "nodeType": "ParameterList", "parameters": [], "src": "1811:0:4"}, "scope": 1285, "src": "1797:53:4", "stateMutability": "nonpayable", "virtual": false, "visibility": "internal"}, {"body": {"id": 1260, "nodeType": "Block", "src": "2251:79:4", "statements": [{"expression": {"arguments": [], "expression": {"argumentTypes": [], "id": 1253, "name": "_nonReentrantBefore", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1276, "src": "2261:19:4", "typeDescriptions": {"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$", "typeString": "function ()"}}, "id": 1254, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "2261:21:4", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 1255, "nodeType": "ExpressionStatement", "src": "2261:21:4"}, {"id": 1256, "nodeType": "PlaceholderStatement", "src": "2292:1:4"}, {"expression": {"arguments": [], "expression": {"argumentTypes": [], "id": 1257, "name": "_nonReentrantAfter", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1284, "src": "2303:18:4", "typeDescriptions": {"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$", "typeString": "function ()"}}, "id": 1258, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "2303:20:4", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 1259, "nodeType": "ExpressionStatement", "src": "2303:20:4"}]}, "documentation": {"id": 1251, "nodeType": "StructuredDocumentation", "src": "1856:366:4", "text": " @dev Prevents a contract from calling itself, directly or indirectly.\n Calling a `nonReentrant` function from another `nonReentrant`\n function is not supported. It is possible to prevent this from happening\n by making the `nonReentrant` function external, and making it call a\n `private` function that does the actual work."}, "id": 1261, "name": "nonReentrant", "nameLocation": "2236:12:4", "nodeType": "ModifierDefinition", "parameters": {"id": 1252, "nodeType": "ParameterList", "parameters": [], "src": "2248:2:4"}, "src": "2227:103:4", "virtual": false, "visibility": "internal"}, {"body": {"id": 1275, "nodeType": "Block", "src": "2375:248:4", "statements": [{"expression": {"arguments": [{"commonType": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "id": 1267, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"id": 1265, "name": "_status", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1242, "src": "2468:7:4", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "BinaryOperation", "operator": "!=", "rightExpression": {"id": 1266, "name": "_ENTERED", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1240, "src": "2479:8:4", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "2468:19:4", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, {"hexValue": "5265656e7472616e637947756172643a207265656e7472616e742063616c6c", "id": 1268, "isConstant": false, "isLValue": false, "isPure": true, "kind": "string", "lValueRequested": false, "nodeType": "Literal", "src": "2489:33:4", "typeDescriptions": {"typeIdentifier": "t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619", "typeString": "literal_string \"ReentrancyGuard: reentrant call\""}, "value": "ReentrancyGuard: reentrant call"}], "expression": {"argumentTypes": [{"typeIdentifier": "t_bool", "typeString": "bool"}, {"typeIdentifier": "t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619", "typeString": "literal_string \"ReentrancyGuard: reentrant call\""}], "id": 1264, "name": "require", "nodeType": "Identifier", "overloadedDeclarations": [-18, -18], "referencedDeclaration": -18, "src": "2460:7:4", "typeDescriptions": {"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$", "typeString": "function (bool,string memory) pure"}}, "id": 1269, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "2460:63:4", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 1270, "nodeType": "ExpressionStatement", "src": "2460:63:4"}, {"expression": {"id": 1273, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"id": 1271, "name": "_status", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1242, "src": "2598:7:4", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"id": 1272, "name": "_ENTERED", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1240, "src": "2608:8:4", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "2598:18:4", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 1274, "nodeType": "ExpressionStatement", "src": "2598:18:4"}]}, "id": 1276, "implemented": true, "kind": "function", "modifiers": [], "name": "_nonReentrantBefore", "nameLocation": "2345:19:4", "nodeType": "FunctionDefinition", "parameters": {"id": 1262, "nodeType": "ParameterList", "parameters": [], "src": "2364:2:4"}, "returnParameters": {"id": 1263, "nodeType": "ParameterList", "parameters": [], "src": "2375:0:4"}, "scope": 1285, "src": "2336:287:4", "stateMutability": "nonpayable", "virtual": false, "visibility": "private"}, {"body": {"id": 1283, "nodeType": "Block", "src": "2667:171:4", "statements": [{"expression": {"id": 1281, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"id": 1279, "name": "_status", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1242, "src": "2809:7:4", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"id": 1280, "name": "_NOT_ENTERED", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1237, "src": "2819:12:4", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "2809:22:4", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 1282, "nodeType": "ExpressionStatement", "src": "2809:22:4"}]}, "id": 1284, "implemented": true, "kind": "function", "modifiers": [], "name": "_nonReentrantAfter", "nameLocation": "2638:18:4", "nodeType": "FunctionDefinition", "parameters": {"id": 1277, "nodeType": "ParameterList", "parameters": [], "src": "2656:2:4"}, "returnParameters": {"id": 1278, "nodeType": "ParameterList", "parameters": [], "src": "2667:0:4"}, "scope": 1285, "src": "2629:209:4", "stateMutability": "nonpayable", "virtual": false, "visibility": "private"}], "scope": 1286, "src": "888:1952:4", "usedErrors": []}], "src": "112:2729:4"}}, "/Users/vladimirtrifonov/src/playground/solidity/rare-skills/advanced-solidity-bootcamp/fuzzing-with-echidna/bonding-token/lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol": {"AST": {"absolutePath": "lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol", "exportedSymbols": {"Context": [2505], "ERC20": [2344], "IERC20": [2446], "IERC20Metadata": [2483]}, "id": 2345, "license": "MIT", "nodeType": "SourceUnit", "nodes": [{"id": 1759, "literals": ["solidity", "^", "0.8", ".0"], "nodeType": "PragmaDirective", "src": "105:23:5"}, {"absolutePath": "lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol", "file": "./IERC20.sol", "id": 1760, "nameLocation": "-1:-1:-1", "nodeType": "ImportDirective", "scope": 2345, "sourceUnit": 2447, "src": "130:22:5", "symbolAliases": [], "unitAlias": ""}, {"absolutePath": "lib/openzeppelin-contracts/contracts/token/ERC20/extensions/IERC20Metadata.sol", "file": "./extensions/IERC20Metadata.sol", "id": 1761, "nameLocation": "-1:-1:-1", "nodeType": "ImportDirective", "scope": 2345, "sourceUnit": 2484, "src": "153:41:5", "symbolAliases": [], "unitAlias": ""}, {"absolutePath": "lib/openzeppelin-contracts/contracts/utils/Context.sol", "file": "../../utils/Context.sol", "id": 1762, "nameLocation": "-1:-1:-1", "nodeType": "ImportDirective", "scope": 2345, "sourceUnit": 2506, "src": "195:33:5", "symbolAliases": [], "unitAlias": ""}, {"abstract": false, "baseContracts": [{"baseName": {"id": 1764, "name": "Context", "nodeType": "IdentifierPath", "referencedDeclaration": 2505, "src": "1419:7:5"}, "id": 1765, "nodeType": "InheritanceSpecifier", "src": "1419:7:5"}, {"baseName": {"id": 1766, "name": "IERC20", "nodeType": "IdentifierPath", "referencedDeclaration": 2446, "src": "1428:6:5"}, "id": 1767, "nodeType": "InheritanceSpecifier", "src": "1428:6:5"}, {"baseName": {"id": 1768, "name": "IERC20Metadata", "nodeType": "IdentifierPath", "referencedDeclaration": 2483, "src": "1436:14:5"}, "id": 1769, "nodeType": "InheritanceSpecifier", "src": "1436:14:5"}], "canonicalName": "ERC20", "contractDependencies": [], "contractKind": "contract", "documentation": {"id": 1763, "nodeType": "StructuredDocumentation", "src": "230:1170:5", "text": " @dev Implementation of the {IERC20} interface.\n This implementation is agnostic to the way tokens are created. This means\n that a supply mechanism has to be added in a derived contract using {_mint}.\n For a generic mechanism see {ERC20PresetMinterPauser}.\n TIP: For a detailed writeup see our guide\n https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\n to implement supply mechanisms].\n We have followed general OpenZeppelin Contracts guidelines: functions revert\n instead returning `false` on failure. This behavior is nonetheless\n conventional and does not conflict with the expectations of ERC20\n applications.\n Additionally, an {Approval} event is emitted on calls to {transferFrom}.\n This allows applications to reconstruct the allowance for all accounts just\n by listening to said events. Other implementations of the EIP may not emit\n these events, as it isn't required by the specification.\n Finally, the non-standard {decreaseAllowance} and {increaseAllowance}\n functions have been added to mitigate the well-known issues around setting\n allowances. See {IERC20-approve}."}, "fullyImplemented": true, "id": 2344, "linearizedBaseContracts": [2344, 2483, 2446, 2505], "name": "ERC20", "nameLocation": "1410:5:5", "nodeType": "ContractDefinition", "nodes": [{"constant": false, "id": 1773, "mutability": "mutable", "name": "_balances", "nameLocation": "1493:9:5", "nodeType": "VariableDeclaration", "scope": 2344, "src": "1457:45:5", "stateVariable": true, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$", "typeString": "mapping(address => uint256)"}, "typeName": {"id": 1772, "keyType": {"id": 1770, "name": "address", "nodeType": "ElementaryTypeName", "src": "1465:7:5", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "nodeType": "Mapping", "src": "1457:27:5", "typeDescriptions": {"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$", "typeString": "mapping(address => uint256)"}, "valueType": {"id": 1771, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "1476:7:5", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}}, "visibility": "private"}, {"constant": false, "id": 1779, "mutability": "mutable", "name": "_allowances", "nameLocation": "1565:11:5", "nodeType": "VariableDeclaration", "scope": 2344, "src": "1509:67:5", "stateVariable": true, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$", "typeString": "mapping(address => mapping(address => uint256))"}, "typeName": {"id": 1778, "keyType": {"id": 1774, "name": "address", "nodeType": "ElementaryTypeName", "src": "1517:7:5", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "nodeType": "Mapping", "src": "1509:47:5", "typeDescriptions": {"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$", "typeString": "mapping(address => mapping(address => uint256))"}, "valueType": {"id": 1777, "keyType": {"id": 1775, "name": "address", "nodeType": "ElementaryTypeName", "src": "1536:7:5", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "nodeType": "Mapping", "src": "1528:27:5", "typeDescriptions": {"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$", "typeString": "mapping(address => uint256)"}, "valueType": {"id": 1776, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "1547:7:5", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}}}, "visibility": "private"}, {"constant": false, "id": 1781, "mutability": "mutable", "name": "_totalSupply", "nameLocation": "1599:12:5", "nodeType": "VariableDeclaration", "scope": 2344, "src": "1583:28:5", "stateVariable": true, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 1780, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "1583:7:5", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "private"}, {"constant": false, "id": 1783, "mutability": "mutable", "name": "_name", "nameLocation": "1633:5:5", "nodeType": "VariableDeclaration", "scope": 2344, "src": "1618:20:5", "stateVariable": true, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_string_storage", "typeString": "string"}, "typeName": {"id": 1782, "name": "string", "nodeType": "ElementaryTypeName", "src": "1618:6:5", "typeDescriptions": {"typeIdentifier": "t_string_storage_ptr", "typeString": "string"}}, "visibility": "private"}, {"constant": false, "id": 1785, "mutability": "mutable", "name": "_symbol", "nameLocation": "1659:7:5", "nodeType": "VariableDeclaration", "scope": 2344, "src": "1644:22:5", "stateVariable": true, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_string_storage", "typeString": "string"}, "typeName": {"id": 1784, "name": "string", "nodeType": "ElementaryTypeName", "src": "1644:6:5", "typeDescriptions": {"typeIdentifier": "t_string_storage_ptr", "typeString": "string"}}, "visibility": "private"}, {"body": {"id": 1801, "nodeType": "Block", "src": "2032:57:5", "statements": [{"expression": {"id": 1795, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"id": 1793, "name": "_name", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1783, "src": "2042:5:5", "typeDescriptions": {"typeIdentifier": "t_string_storage", "typeString": "string storage ref"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"id": 1794, "name": "name_", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1788, "src": "2050:5:5", "typeDescriptions": {"typeIdentifier": "t_string_memory_ptr", "typeString": "string memory"}}, "src": "2042:13:5", "typeDescriptions": {"typeIdentifier": "t_string_storage", "typeString": "string storage ref"}}, "id": 1796, "nodeType": "ExpressionStatement", "src": "2042:13:5"}, {"expression": {"id": 1799, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"id": 1797, "name": "_symbol", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1785, "src": "2065:7:5", "typeDescriptions": {"typeIdentifier": "t_string_storage", "typeString": "string storage ref"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"id": 1798, "name": "symbol_", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1790, "src": "2075:7:5", "typeDescriptions": {"typeIdentifier": "t_string_memory_ptr", "typeString": "string memory"}}, "src": "2065:17:5", "typeDescriptions": {"typeIdentifier": "t_string_storage", "typeString": "string storage ref"}}, "id": 1800, "nodeType": "ExpressionStatement", "src": "2065:17:5"}]}, "documentation": {"id": 1786, "nodeType": "StructuredDocumentation", "src": "1673:298:5", "text": " @dev Sets the values for {name} and {symbol}.\n The default value of {decimals} is 18. To select a different value for\n {decimals} you should overload it.\n All two of these values are immutable: they can only be set once during\n construction."}, "id": 1802, "implemented": true, "kind": "constructor", "modifiers": [], "name": "", "nameLocation": "-1:-1:-1", "nodeType": "FunctionDefinition", "parameters": {"id": 1791, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 1788, "mutability": "mutable", "name": "name_", "nameLocation": "2002:5:5", "nodeType": "VariableDeclaration", "scope": 1802, "src": "1988:19:5", "stateVariable": false, "storageLocation": "memory", "typeDescriptions": {"typeIdentifier": "t_string_memory_ptr", "typeString": "string"}, "typeName": {"id": 1787, "name": "string", "nodeType": "ElementaryTypeName", "src": "1988:6:5", "typeDescriptions": {"typeIdentifier": "t_string_storage_ptr", "typeString": "string"}}, "visibility": "internal"}, {"constant": false, "id": 1790, "mutability": "mutable", "name": "symbol_", "nameLocation": "2023:7:5", "nodeType": "VariableDeclaration", "scope": 1802, "src": "2009:21:5", "stateVariable": false, "storageLocation": "memory", "typeDescriptions": {"typeIdentifier": "t_string_memory_ptr", "typeString": "string"}, "typeName": {"id": 1789, "name": "string", "nodeType": "ElementaryTypeName", "src": "2009:6:5", "typeDescriptions": {"typeIdentifier": "t_string_storage_ptr", "typeString": "string"}}, "visibility": "internal"}], "src": "1987:44:5"}, "returnParameters": {"id": 1792, "nodeType": "ParameterList", "parameters": [], "src": "2032:0:5"}, "scope": 2344, "src": "1976:113:5", "stateMutability": "nonpayable", "virtual": false, "visibility": "public"}, {"baseFunctions": [2470], "body": {"id": 1811, "nodeType": "Block", "src": "2223:29:5", "statements": [{"expression": {"id": 1809, "name": "_name", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1783, "src": "2240:5:5", "typeDescriptions": {"typeIdentifier": "t_string_storage", "typeString": "string storage ref"}}, "functionReturnParameters": 1808, "id": 1810, "nodeType": "Return", "src": "2233:12:5"}]}, "documentation": {"id": 1803, "nodeType": "StructuredDocumentation", "src": "2095:54:5", "text": " @dev Returns the name of the token."}, "functionSelector": "06fdde03", "id": 1812, "implemented": true, "kind": "function", "modifiers": [], "name": "name", "nameLocation": "2163:4:5", "nodeType": "FunctionDefinition", "overrides": {"id": 1805, "nodeType": "OverrideSpecifier", "overrides": [], "src": "2190:8:5"}, "parameters": {"id": 1804, "nodeType": "ParameterList", "parameters": [], "src": "2167:2:5"}, "returnParameters": {"id": 1808, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 1807, "mutability": "mutable", "name": "", "nameLocation": "-1:-1:-1", "nodeType": "VariableDeclaration", "scope": 1812, "src": "2208:13:5", "stateVariable": false, "storageLocation": "memory", "typeDescriptions": {"typeIdentifier": "t_string_memory_ptr", "typeString": "string"}, "typeName": {"id": 1806, "name": "string", "nodeType": "ElementaryTypeName", "src": "2208:6:5", "typeDescriptions": {"typeIdentifier": "t_string_storage_ptr", "typeString": "string"}}, "visibility": "internal"}], "src": "2207:15:5"}, "scope": 2344, "src": "2154:98:5", "stateMutability": "view", "virtual": true, "visibility": "public"}, {"baseFunctions": [2476], "body": {"id": 1821, "nodeType": "Block", "src": "2436:31:5", "statements": [{"expression": {"id": 1819, "name": "_symbol", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1785, "src": "2453:7:5", "typeDescriptions": {"typeIdentifier": "t_string_storage", "typeString": "string storage ref"}}, "functionReturnParameters": 1818, "id": 1820, "nodeType": "Return", "src": "2446:14:5"}]}, "documentation": {"id": 1813, "nodeType": "StructuredDocumentation", "src": "2258:102:5", "text": " @dev Returns the symbol of the token, usually a shorter version of the\n name."}, "functionSelector": "95d89b41", "id": 1822, "implemented": true, "kind": "function", "modifiers": [], "name": "symbol", "nameLocation": "2374:6:5", "nodeType": "FunctionDefinition", "overrides": {"id": 1815, "nodeType": "OverrideSpecifier", "overrides": [], "src": "2403:8:5"}, "parameters": {"id": 1814, "nodeType": "ParameterList", "parameters": [], "src": "2380:2:5"}, "returnParameters": {"id": 1818, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 1817, "mutability": "mutable", "name": "", "nameLocation": "-1:-1:-1", "nodeType": "VariableDeclaration", "scope": 1822, "src": "2421:13:5", "stateVariable": false, "storageLocation": "memory", "typeDescriptions": {"typeIdentifier": "t_string_memory_ptr", "typeString": "string"}, "typeName": {"id": 1816, "name": "string", "nodeType": "ElementaryTypeName", "src": "2421:6:5", "typeDescriptions": {"typeIdentifier": "t_string_storage_ptr", "typeString": "string"}}, "visibility": "internal"}], "src": "2420:15:5"}, "scope": 2344, "src": "2365:102:5", "stateMutability": "view", "virtual": true, "visibility": "public"}, {"baseFunctions": [2482], "body": {"id": 1831, "nodeType": "Block", "src": "3156:26:5", "statements": [{"expression": {"hexValue": "3138", "id": 1829, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "3173:2:5", "typeDescriptions": {"typeIdentifier": "t_rational_18_by_1", "typeString": "int_const 18"}, "value": "18"}, "functionReturnParameters": 1828, "id": 1830, "nodeType": "Return", "src": "3166:9:5"}]}, "documentation": {"id": 1823, "nodeType": "StructuredDocumentation", "src": "2473:613:5", "text": " @dev Returns the number of decimals used to get its user representation.\n For example, if `decimals` equals `2`, a balance of `505` tokens should\n be displayed to a user as `5.05` (`505 / 10 ** 2`).\n Tokens usually opt for a value of 18, imitating the relationship between\n Ether and Wei. This is the value {ERC20} uses, unless this function is\n overridden;\n NOTE: This information is only used for _display_ purposes: it in\n no way affects any of the arithmetic of the contract, including\n {IERC20-balanceOf} and {IERC20-transfer}."}, "functionSelector": "313ce567", "id": 1832, "implemented": true, "kind": "function", "modifiers": [], "name": "decimals", "nameLocation": "3100:8:5", "nodeType": "FunctionDefinition", "overrides": {"id": 1825, "nodeType": "OverrideSpecifier", "overrides": [], "src": "3131:8:5"}, "parameters": {"id": 1824, "nodeType": "ParameterList", "parameters": [], "src": "3108:2:5"}, "returnParameters": {"id": 1828, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 1827, "mutability": "mutable", "name": "", "nameLocation": "-1:-1:-1", "nodeType": "VariableDeclaration", "scope": 1832, "src": "3149:5:5", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint8", "typeString": "uint8"}, "typeName": {"id": 1826, "name": "uint8", "nodeType": "ElementaryTypeName", "src": "3149:5:5", "typeDescriptions": {"typeIdentifier": "t_uint8", "typeString": "uint8"}}, "visibility": "internal"}], "src": "3148:7:5"}, "scope": 2344, "src": "3091:91:5", "stateMutability": "view", "virtual": true, "visibility": "public"}, {"baseFunctions": [2395], "body": {"id": 1841, "nodeType": "Block", "src": "3312:36:5", "statements": [{"expression": {"id": 1839, "name": "_totalSupply", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1781, "src": "3329:12:5", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "functionReturnParameters": 1838, "id": 1840, "nodeType": "Return", "src": "3322:19:5"}]}, "documentation": {"id": 1833, "nodeType": "StructuredDocumentation", "src": "3188:49:5", "text": " @dev See {IERC20-totalSupply}."}, "functionSelector": "18160ddd", "id": 1842, "implemented": true, "kind": "function", "modifiers": [], "name": "totalSupply", "nameLocation": "3251:11:5", "nodeType": "FunctionDefinition", "overrides": {"id": 1835, "nodeType": "OverrideSpecifier", "overrides": [], "src": "3285:8:5"}, "parameters": {"id": 1834, "nodeType": "ParameterList", "parameters": [], "src": "3262:2:5"}, "returnParameters": {"id": 1838, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 1837, "mutability": "mutable", "name": "", "nameLocation": "-1:-1:-1", "nodeType": "VariableDeclaration", "scope": 1842, "src": "3303:7:5", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 1836, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "3303:7:5", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "src": "3302:9:5"}, "scope": 2344, "src": "3242:106:5", "stateMutability": "view", "virtual": true, "visibility": "public"}, {"baseFunctions": [2403], "body": {"id": 1855, "nodeType": "Block", "src": "3489:42:5", "statements": [{"expression": {"baseExpression": {"id": 1851, "name": "_balances", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1773, "src": "3506:9:5", "typeDescriptions": {"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$", "typeString": "mapping(address => uint256)"}}, "id": 1853, "indexExpression": {"id": 1852, "name": "account", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1845, "src": "3516:7:5", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "nodeType": "IndexAccess", "src": "3506:18:5", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "functionReturnParameters": 1850, "id": 1854, "nodeType": "Return", "src": "3499:25:5"}]}, "documentation": {"id": 1843, "nodeType": "StructuredDocumentation", "src": "3354:47:5", "text": " @dev See {IERC20-balanceOf}."}, "functionSelector": "70a08231", "id": 1856, "implemented": true, "kind": "function", "modifiers": [], "name": "balanceOf", "nameLocation": "3415:9:5", "nodeType": "FunctionDefinition", "overrides": {"id": 1847, "nodeType": "OverrideSpecifier", "overrides": [], "src": "3462:8:5"}, "parameters": {"id": 1846, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 1845, "mutability": "mutable", "name": "account", "nameLocation": "3433:7:5", "nodeType": "VariableDeclaration", "scope": 1856, "src": "3425:15:5", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}, "typeName": {"id": 1844, "name": "address", "nodeType": "ElementaryTypeName", "src": "3425:7:5", "stateMutability": "nonpayable", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "visibility": "internal"}], "src": "3424:17:5"}, "returnParameters": {"id": 1850, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 1849, "mutability": "mutable", "name": "", "nameLocation": "-1:-1:-1", "nodeType": "VariableDeclaration", "scope": 1856, "src": "3480:7:5", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 1848, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "3480:7:5", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "src": "3479:9:5"}, "scope": 2344, "src": "3406:125:5", "stateMutability": "view", "virtual": true, "visibility": "public"}, {"baseFunctions": [2413], "body": {"id": 1880, "nodeType": "Block", "src": "3812:104:5", "statements": [{"assignments": [1868], "declarations": [{"constant": false, "id": 1868, "mutability": "mutable", "name": "owner", "nameLocation": "3830:5:5", "nodeType": "VariableDeclaration", "scope": 1880, "src": "3822:13:5", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}, "typeName": {"id": 1867, "name": "address", "nodeType": "ElementaryTypeName", "src": "3822:7:5", "stateMutability": "nonpayable", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "visibility": "internal"}], "id": 1871, "initialValue": {"arguments": [], "expression": {"argumentTypes": [], "id": 1869, "name": "_msgSender", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 2495, "src": "3838:10:5", "typeDescriptions": {"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$", "typeString": "function () view returns (address)"}}, "id": 1870, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "3838:12:5", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "nodeType": "VariableDeclarationStatement", "src": "3822:28:5"}, {"expression": {"arguments": [{"id": 1873, "name": "owner", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1868, "src": "3870:5:5", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, {"id": 1874, "name": "to", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1859, "src": "3877:2:5", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, {"id": 1875, "name": "amount", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1861, "src": "3881:6:5", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_address", "typeString": "address"}, {"typeIdentifier": "t_address", "typeString": "address"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}], "id": 1872, "name": "_transfer", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 2104, "src": "3860:9:5", "typeDescriptions": {"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$", "typeString": "function (address,address,uint256)"}}, "id": 1876, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "3860:28:5", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 1877, "nodeType": "ExpressionStatement", "src": "3860:28:5"}, {"expression": {"hexValue": "74727565", "id": 1878, "isConstant": false, "isLValue": false, "isPure": true, "kind": "bool", "lValueRequested": false, "nodeType": "Literal", "src": "3905:4:5", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}, "value": "true"}, "functionReturnParameters": 1866, "id": 1879, "nodeType": "Return", "src": "3898:11:5"}]}, "documentation": {"id": 1857, "nodeType": "StructuredDocumentation", "src": "3537:185:5", "text": " @dev See {IERC20-transfer}.\n Requirements:\n - `to` cannot be the zero address.\n - the caller must have a balance of at least `amount`."}, "functionSelector": "a9059cbb", "id": 1881, "implemented": true, "kind": "function", "modifiers": [], "name": "transfer", "nameLocation": "3736:8:5", "nodeType": "FunctionDefinition", "overrides": {"id": 1863, "nodeType": "OverrideSpecifier", "overrides": [], "src": "3788:8:5"}, "parameters": {"id": 1862, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 1859, "mutability": "mutable", "name": "to", "nameLocation": "3753:2:5", "nodeType": "VariableDeclaration", "scope": 1881, "src": "3745:10:5", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}, "typeName": {"id": 1858, "name": "address", "nodeType": "ElementaryTypeName", "src": "3745:7:5", "stateMutability": "nonpayable", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "visibility": "internal"}, {"constant": false, "id": 1861, "mutability": "mutable", "name": "amount", "nameLocation": "3765:6:5", "nodeType": "VariableDeclaration", "scope": 1881, "src": "3757:14:5", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 1860, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "3757:7:5", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "src": "3744:28:5"}, "returnParameters": {"id": 1866, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 1865, "mutability": "mutable", "name": "", "nameLocation": "-1:-1:-1", "nodeType": "VariableDeclaration", "scope": 1881, "src": "3806:4:5", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}, "typeName": {"id": 1864, "name": "bool", "nodeType": "ElementaryTypeName", "src": "3806:4:5", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "visibility": "internal"}], "src": "3805:6:5"}, "scope": 2344, "src": "3727:189:5", "stateMutability": "nonpayable", "virtual": true, "visibility": "public"}, {"baseFunctions": [2423], "body": {"id": 1898, "nodeType": "Block", "src": "4072:51:5", "statements": [{"expression": {"baseExpression": {"baseExpression": {"id": 1892, "name": "_allowances", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1779, "src": "4089:11:5", "typeDescriptions": {"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$", "typeString": "mapping(address => mapping(address => uint256))"}}, "id": 1894, "indexExpression": {"id": 1893, "name": "owner", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1884, "src": "4101:5:5", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "nodeType": "IndexAccess", "src": "4089:18:5", "typeDescriptions": {"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$", "typeString": "mapping(address => uint256)"}}, "id": 1896, "indexExpression": {"id": 1895, "name": "spender", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1886, "src": "4108:7:5", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "nodeType": "IndexAccess", "src": "4089:27:5", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "functionReturnParameters": 1891, "id": 1897, "nodeType": "Return", "src": "4082:34:5"}]}, "documentation": {"id": 1882, "nodeType": "StructuredDocumentation", "src": "3922:47:5", "text": " @dev See {IERC20-allowance}."}, "functionSelector": "dd62ed3e", "id": 1899, "implemented": true, "kind": "function", "modifiers": [], "name": "allowance", "nameLocation": "3983:9:5", "nodeType": "FunctionDefinition", "overrides": {"id": 1888, "nodeType": "OverrideSpecifier", "overrides": [], "src": "4045:8:5"}, "parameters": {"id": 1887, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 1884, "mutability": "mutable", "name": "owner", "nameLocation": "4001:5:5", "nodeType": "VariableDeclaration", "scope": 1899, "src": "3993:13:5", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}, "typeName": {"id": 1883, "name": "address", "nodeType": "ElementaryTypeName", "src": "3993:7:5", "stateMutability": "nonpayable", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "visibility": "internal"}, {"constant": false, "id": 1886, "mutability": "mutable", "name": "spender", "nameLocation": "4016:7:5", "nodeType": "VariableDeclaration", "scope": 1899, "src": "4008:15:5", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}, "typeName": {"id": 1885, "name": "address", "nodeType": "ElementaryTypeName", "src": "4008:7:5", "stateMutability": "nonpayable", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "visibility": "internal"}], "src": "3992:32:5"}, "returnParameters": {"id": 1891, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 1890, "mutability": "mutable", "name": "", "nameLocation": "-1:-1:-1", "nodeType": "VariableDeclaration", "scope": 1899, "src": "4063:7:5", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 1889, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "4063:7:5", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "src": "4062:9:5"}, "scope": 2344, "src": "3974:149:5", "stateMutability": "view", "virtual": true, "visibility": "public"}, {"baseFunctions": [2433], "body": {"id": 1923, "nodeType": "Block", "src": "4520:108:5", "statements": [{"assignments": [1911], "declarations": [{"constant": false, "id": 1911, "mutability": "mutable", "name": "owner", "nameLocation": "4538:5:5", "nodeType": "VariableDeclaration", "scope": 1923, "src": "4530:13:5", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}, "typeName": {"id": 1910, "name": "address", "nodeType": "ElementaryTypeName", "src": "4530:7:5", "stateMutability": "nonpayable", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "visibility": "internal"}], "id": 1914, "initialValue": {"arguments": [], "expression": {"argumentTypes": [], "id": 1912, "name": "_msgSender", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 2495, "src": "4546:10:5", "typeDescriptions": {"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$", "typeString": "function () view returns (address)"}}, "id": 1913, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "4546:12:5", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "nodeType": "VariableDeclarationStatement", "src": "4530:28:5"}, {"expression": {"arguments": [{"id": 1916, "name": "owner", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1911, "src": "4577:5:5", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, {"id": 1917, "name": "spender", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1902, "src": "4584:7:5", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, {"id": 1918, "name": "amount", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1904, "src": "4593:6:5", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_address", "typeString": "address"}, {"typeIdentifier": "t_address", "typeString": "address"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}], "id": 1915, "name": "_approve", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 2278, "src": "4568:8:5", "typeDescriptions": {"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$", "typeString": "function (address,address,uint256)"}}, "id": 1919, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "4568:32:5", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 1920, "nodeType": "ExpressionStatement", "src": "4568:32:5"}, {"expression": {"hexValue": "74727565", "id": 1921, "isConstant": false, "isLValue": false, "isPure": true, "kind": "bool", "lValueRequested": false, "nodeType": "Literal", "src": "4617:4:5", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}, "value": "true"}, "functionReturnParameters": 1909, "id": 1922, "nodeType": "Return", "src": "4610:11:5"}]}, "documentation": {"id": 1900, "nodeType": "StructuredDocumentation", "src": "4129:297:5", "text": " @dev See {IERC20-approve}.\n NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on\n `transferFrom`. This is semantically equivalent to an infinite approval.\n Requirements:\n - `spender` cannot be the zero address."}, "functionSelector": "095ea7b3", "id": 1924, "implemented": true, "kind": "function", "modifiers": [], "name": "approve", "nameLocation": "4440:7:5", "nodeType": "FunctionDefinition", "overrides": {"id": 1906, "nodeType": "OverrideSpecifier", "overrides": [], "src": "4496:8:5"}, "parameters": {"id": 1905, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 1902, "mutability": "mutable", "name": "spender", "nameLocation": "4456:7:5", "nodeType": "VariableDeclaration", "scope": 1924, "src": "4448:15:5", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}, "typeName": {"id": 1901, "name": "address", "nodeType": "ElementaryTypeName", "src": "4448:7:5", "stateMutability": "nonpayable", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "visibility": "internal"}, {"constant": false, "id": 1904, "mutability": "mutable", "name": "amount", "nameLocation": "4473:6:5", "nodeType": "VariableDeclaration", "scope": 1924, "src": "4465:14:5", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 1903, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "4465:7:5", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "src": "4447:33:5"}, "returnParameters": {"id": 1909, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 1908, "mutability": "mutable", "name": "", "nameLocation": "-1:-1:-1", "nodeType": "VariableDeclaration", "scope": 1924, "src": "4514:4:5", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}, "typeName": {"id": 1907, "name": "bool", "nodeType": "ElementaryTypeName", "src": "4514:4:5", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "visibility": "internal"}], "src": "4513:6:5"}, "scope": 2344, "src": "4431:197:5", "stateMutability": "nonpayable", "virtual": true, "visibility": "public"}, {"baseFunctions": [2445], "body": {"id": 1956, "nodeType": "Block", "src": "5323:153:5", "statements": [{"assignments": [1938], "declarations": [{"constant": false, "id": 1938, "mutability": "mutable", "name": "spender", "nameLocation": "5341:7:5", "nodeType": "VariableDeclaration", "scope": 1956, "src": "5333:15:5", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}, "typeName": {"id": 1937, "name": "address", "nodeType": "ElementaryTypeName", "src": "5333:7:5", "stateMutability": "nonpayable", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "visibility": "internal"}], "id": 1941, "initialValue": {"arguments": [], "expression": {"argumentTypes": [], "id": 1939, "name": "_msgSender", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 2495, "src": "5351:10:5", "typeDescriptions": {"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$", "typeString": "function () view returns (address)"}}, "id": 1940, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "5351:12:5", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "nodeType": "VariableDeclarationStatement", "src": "5333:30:5"}, {"expression": {"arguments": [{"id": 1943, "name": "from", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1927, "src": "5389:4:5", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, {"id": 1944, "name": "spender", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1938, "src": "5395:7:5", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, {"id": 1945, "name": "amount", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1931, "src": "5404:6:5", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_address", "typeString": "address"}, {"typeIdentifier": "t_address", "typeString": "address"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}], "id": 1942, "name": "_spendAllowance", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 2321, "src": "5373:15:5", "typeDescriptions": {"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$", "typeString": "function (address,address,uint256)"}}, "id": 1946, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "5373:38:5", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 1947, "nodeType": "ExpressionStatement", "src": "5373:38:5"}, {"expression": {"arguments": [{"id": 1949, "name": "from", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1927, "src": "5431:4:5", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, {"id": 1950, "name": "to", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1929, "src": "5437:2:5", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, {"id": 1951, "name": "amount", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1931, "src": "5441:6:5", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_address", "typeString": "address"}, {"typeIdentifier": "t_address", "typeString": "address"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}], "id": 1948, "name": "_transfer", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 2104, "src": "5421:9:5", "typeDescriptions": {"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$", "typeString": "function (address,address,uint256)"}}, "id": 1952, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "5421:27:5", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 1953, "nodeType": "ExpressionStatement", "src": "5421:27:5"}, {"expression": {"hexValue": "74727565", "id": 1954, "isConstant": false, "isLValue": false, "isPure": true, "kind": "bool", "lValueRequested": false, "nodeType": "Literal", "src": "5465:4:5", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}, "value": "true"}, "functionReturnParameters": 1936, "id": 1955, "nodeType": "Return", "src": "5458:11:5"}]}, "documentation": {"id": 1925, "nodeType": "StructuredDocumentation", "src": "4634:551:5", "text": " @dev See {IERC20-transferFrom}.\n Emits an {Approval} event indicating the updated allowance. This is not\n required by the EIP. See the note at the beginning of {ERC20}.\n NOTE: Does not update the allowance if the current allowance\n is the maximum `uint256`.\n Requirements:\n - `from` and `to` cannot be the zero address.\n - `from` must have a balance of at least `amount`.\n - the caller must have allowance for ``from``'s tokens of at least\n `amount`."}, "functionSelector": "23b872dd", "id": 1957, "implemented": true, "kind": "function", "modifiers": [], "name": "transferFrom", "nameLocation": "5199:12:5", "nodeType": "FunctionDefinition", "overrides": {"id": 1933, "nodeType": "OverrideSpecifier", "overrides": [], "src": "5299:8:5"}, "parameters": {"id": 1932, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 1927, "mutability": "mutable", "name": "from", "nameLocation": "5229:4:5", "nodeType": "VariableDeclaration", "scope": 1957, "src": "5221:12:5", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}, "typeName": {"id": 1926, "name": "address", "nodeType": "ElementaryTypeName", "src": "5221:7:5", "stateMutability": "nonpayable", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "visibility": "internal"}, {"constant": false, "id": 1929, "mutability": "mutable", "name": "to", "nameLocation": "5251:2:5", "nodeType": "VariableDeclaration", "scope": 1957, "src": "5243:10:5", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}, "typeName": {"id": 1928, "name": "address", "nodeType": "ElementaryTypeName", "src": "5243:7:5", "stateMutability": "nonpayable", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "visibility": "internal"}, {"constant": false, "id": 1931, "mutability": "mutable", "name": "amount", "nameLocation": "5271:6:5", "nodeType": "VariableDeclaration", "scope": 1957, "src": "5263:14:5", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 1930, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "5263:7:5", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "src": "5211:72:5"}, "returnParameters": {"id": 1936, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 1935, "mutability": "mutable", "name": "", "nameLocation": "-1:-1:-1", "nodeType": "VariableDeclaration", "scope": 1957, "src": "5317:4:5", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}, "typeName": {"id": 1934, "name": "bool", "nodeType": "ElementaryTypeName", "src": "5317:4:5", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "visibility": "internal"}], "src": "5316:6:5"}, "scope": 2344, "src": "5190:286:5", "stateMutability": "nonpayable", "virtual": true, "visibility": "public"}, {"body": {"id": 1985, "nodeType": "Block", "src": "5965:140:5", "statements": [{"assignments": [1968], "declarations": [{"constant": false, "id": 1968, "mutability": "mutable", "name": "owner", "nameLocation": "5983:5:5", "nodeType": "VariableDeclaration", "scope": 1985, "src": "5975:13:5", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}, "typeName": {"id": 1967, "name": "address", "nodeType": "ElementaryTypeName", "src": "5975:7:5", "stateMutability": "nonpayable", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "visibility": "internal"}], "id": 1971, "initialValue": {"arguments": [], "expression": {"argumentTypes": [], "id": 1969, "name": "_msgSender", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 2495, "src": "5991:10:5", "typeDescriptions": {"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$", "typeString": "function () view returns (address)"}}, "id": 1970, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "5991:12:5", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "nodeType": "VariableDeclarationStatement", "src": "5975:28:5"}, {"expression": {"arguments": [{"id": 1973, "name": "owner", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1968, "src": "6022:5:5", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, {"id": 1974, "name": "spender", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1960, "src": "6029:7:5", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, {"commonType": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "id": 1980, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"arguments": [{"id": 1976, "name": "owner", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1968, "src": "6048:5:5", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, {"id": 1977, "name": "spender", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1960, "src": "6055:7:5", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_address", "typeString": "address"}, {"typeIdentifier": "t_address", "typeString": "address"}], "id": 1975, "name": "allowance", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1899, "src": "6038:9:5", "typeDescriptions": {"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_uint256_$", "typeString": "function (address,address) view returns (uint256)"}}, "id": 1978, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "6038:25:5", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "BinaryOperation", "operator": "+", "rightExpression": {"id": 1979, "name": "addedValue", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1962, "src": "6066:10:5", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "6038:38:5", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_address", "typeString": "address"}, {"typeIdentifier": "t_address", "typeString": "address"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}], "id": 1972, "name": "_approve", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 2278, "src": "6013:8:5", "typeDescriptions": {"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$", "typeString": "function (address,address,uint256)"}}, "id": 1981, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "6013:64:5", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 1982, "nodeType": "ExpressionStatement", "src": "6013:64:5"}, {"expression": {"hexValue": "74727565", "id": 1983, "isConstant": false, "isLValue": false, "isPure": true, "kind": "bool", "lValueRequested": false, "nodeType": "Literal", "src": "6094:4:5", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}, "value": "true"}, "functionReturnParameters": 1966, "id": 1984, "nodeType": "Return", "src": "6087:11:5"}]}, "documentation": {"id": 1958, "nodeType": "StructuredDocumentation", "src": "5482:384:5", "text": " @dev Atomically increases the allowance granted to `spender` by the caller.\n This is an alternative to {approve} that can be used as a mitigation for\n problems described in {IERC20-approve}.\n Emits an {Approval} event indicating the updated allowance.\n Requirements:\n - `spender` cannot be the zero address."}, "functionSelector": "39509351", "id": 1986, "implemented": true, "kind": "function", "modifiers": [], "name": "increaseAllowance", "nameLocation": "5880:17:5", "nodeType": "FunctionDefinition", "parameters": {"id": 1963, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 1960, "mutability": "mutable", "name": "spender", "nameLocation": "5906:7:5", "nodeType": "VariableDeclaration", "scope": 1986, "src": "5898:15:5", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}, "typeName": {"id": 1959, "name": "address", "nodeType": "ElementaryTypeName", "src": "5898:7:5", "stateMutability": "nonpayable", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "visibility": "internal"}, {"constant": false, "id": 1962, "mutability": "mutable", "name": "addedValue", "nameLocation": "5923:10:5", "nodeType": "VariableDeclaration", "scope": 1986, "src": "5915:18:5", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 1961, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "5915:7:5", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "src": "5897:37:5"}, "returnParameters": {"id": 1966, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 1965, "mutability": "mutable", "name": "", "nameLocation": "-1:-1:-1", "nodeType": "VariableDeclaration", "scope": 1986, "src": "5959:4:5", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}, "typeName": {"id": 1964, "name": "bool", "nodeType": "ElementaryTypeName", "src": "5959:4:5", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "visibility": "internal"}], "src": "5958:6:5"}, "scope": 2344, "src": "5871:234:5", "stateMutability": "nonpayable", "virtual": true, "visibility": "public"}, {"body": {"id": 2026, "nodeType": "Block", "src": "6691:328:5", "statements": [{"assignments": [1997], "declarations": [{"constant": false, "id": 1997, "mutability": "mutable", "name": "owner", "nameLocation": "6709:5:5", "nodeType": "VariableDeclaration", "scope": 2026, "src": "6701:13:5", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}, "typeName": {"id": 1996, "name": "address", "nodeType": "ElementaryTypeName", "src": "6701:7:5", "stateMutability": "nonpayable", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "visibility": "internal"}], "id": 2000, "initialValue": {"arguments": [], "expression": {"argumentTypes": [], "id": 1998, "name": "_msgSender", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 2495, "src": "6717:10:5", "typeDescriptions": {"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$", "typeString": "function () view returns (address)"}}, "id": 1999, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "6717:12:5", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "nodeType": "VariableDeclarationStatement", "src": "6701:28:5"}, {"assignments": [2002], "declarations": [{"constant": false, "id": 2002, "mutability": "mutable", "name": "currentAllowance", "nameLocation": "6747:16:5", "nodeType": "VariableDeclaration", "scope": 2026, "src": "6739:24:5", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 2001, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "6739:7:5", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "id": 2007, "initialValue": {"arguments": [{"id": 2004, "name": "owner", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1997, "src": "6776:5:5", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, {"id": 2005, "name": "spender", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1989, "src": "6783:7:5", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_address", "typeString": "address"}, {"typeIdentifier": "t_address", "typeString": "address"}], "id": 2003, "name": "allowance", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1899, "src": "6766:9:5", "typeDescriptions": {"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_uint256_$", "typeString": "function (address,address) view returns (uint256)"}}, "id": 2006, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "6766:25:5", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "VariableDeclarationStatement", "src": "6739:52:5"}, {"expression": {"arguments": [{"commonType": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "id": 2011, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"id": 2009, "name": "currentAllowance", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 2002, "src": "6809:16:5", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "BinaryOperation", "operator": ">=", "rightExpression": {"id": 2010, "name": "subtractedValue", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1991, "src": "6829:15:5", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "6809:35:5", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, {"hexValue": "45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726f", "id": 2012, "isConstant": false, "isLValue": false, "isPure": true, "kind": "string", "lValueRequested": false, "nodeType": "Literal", "src": "6846:39:5", "typeDescriptions": {"typeIdentifier": "t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8", "typeString": "literal_string \"ERC20: decreased allowance below zero\""}, "value": "ERC20: decreased allowance below zero"}], "expression": {"argumentTypes": [{"typeIdentifier": "t_bool", "typeString": "bool"}, {"typeIdentifier": "t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8", "typeString": "literal_string \"ERC20: decreased allowance below zero\""}], "id": 2008, "name": "require", "nodeType": "Identifier", "overloadedDeclarations": [-18, -18], "referencedDeclaration": -18, "src": "6801:7:5", "typeDescriptions": {"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$", "typeString": "function (bool,string memory) pure"}}, "id": 2013, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "6801:85:5", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 2014, "nodeType": "ExpressionStatement", "src": "6801:85:5"}, {"id": 2023, "nodeType": "UncheckedBlock", "src": "6896:95:5", "statements": [{"expression": {"arguments": [{"id": 2016, "name": "owner", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1997, "src": "6929:5:5", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, {"id": 2017, "name": "spender", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1989, "src": "6936:7:5", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, {"commonType": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "id": 2020, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"id": 2018, "name": "currentAllowance", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 2002, "src": "6945:16:5", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "BinaryOperation", "operator": "-", "rightExpression": {"id": 2019, "name": "subtractedValue", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1991, "src": "6964:15:5", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "6945:34:5", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_address", "typeString": "address"}, {"typeIdentifier": "t_address", "typeString": "address"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}], "id": 2015, "name": "_approve", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 2278, "src": "6920:8:5", "typeDescriptions": {"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$", "typeString": "function (address,address,uint256)"}}, "id": 2021, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "6920:60:5", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 2022, "nodeType": "ExpressionStatement", "src": "6920:60:5"}]}, {"expression": {"hexValue": "74727565", "id": 2024, "isConstant": false, "isLValue": false, "isPure": true, "kind": "bool", "lValueRequested": false, "nodeType": "Literal", "src": "7008:4:5", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}, "value": "true"}, "functionReturnParameters": 1995, "id": 2025, "nodeType": "Return", "src": "7001:11:5"}]}, "documentation": {"id": 1987, "nodeType": "StructuredDocumentation", "src": "6111:476:5", "text": " @dev Atomically decreases the allowance granted to `spender` by the caller.\n This is an alternative to {approve} that can be used as a mitigation for\n problems described in {IERC20-approve}.\n Emits an {Approval} event indicating the updated allowance.\n Requirements:\n - `spender` cannot be the zero address.\n - `spender` must have allowance for the caller of at least\n `subtractedValue`."}, "functionSelector": "a457c2d7", "id": 2027, "implemented": true, "kind": "function", "modifiers": [], "name": "decreaseAllowance", "nameLocation": "6601:17:5", "nodeType": "FunctionDefinition", "parameters": {"id": 1992, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 1989, "mutability": "mutable", "name": "spender", "nameLocation": "6627:7:5", "nodeType": "VariableDeclaration", "scope": 2027, "src": "6619:15:5", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}, "typeName": {"id": 1988, "name": "address", "nodeType": "ElementaryTypeName", "src": "6619:7:5", "stateMutability": "nonpayable", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "visibility": "internal"}, {"constant": false, "id": 1991, "mutability": "mutable", "name": "subtractedValue", "nameLocation": "6644:15:5", "nodeType": "VariableDeclaration", "scope": 2027, "src": "6636:23:5", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 1990, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "6636:7:5", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "src": "6618:42:5"}, "returnParameters": {"id": 1995, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 1994, "mutability": "mutable", "name": "", "nameLocation": "-1:-1:-1", "nodeType": "VariableDeclaration", "scope": 2027, "src": "6685:4:5", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}, "typeName": {"id": 1993, "name": "bool", "nodeType": "ElementaryTypeName", "src": "6685:4:5", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "visibility": "internal"}], "src": "6684:6:5"}, "scope": 2344, "src": "6592:427:5", "stateMutability": "nonpayable", "virtual": true, "visibility": "public"}, {"body": {"id": 2103, "nodeType": "Block", "src": "7581:710:5", "statements": [{"expression": {"arguments": [{"commonType": {"typeIdentifier": "t_address", "typeString": "address"}, "id": 2043, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"id": 2038, "name": "from", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 2030, "src": "7599:4:5", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "nodeType": "BinaryOperation", "operator": "!=", "rightExpression": {"arguments": [{"hexValue": "30", "id": 2041, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "7615:1:5", "typeDescriptions": {"typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0"}, "value": "0"}], "expression": {"argumentTypes": [{"typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0"}], "id": 2040, "isConstant": false, "isLValue": false, "isPure": true, "lValueRequested": false, "nodeType": "ElementaryTypeNameExpression", "src": "7607:7:5", "typeDescriptions": {"typeIdentifier": "t_type$_t_address_$", "typeString": "type(address)"}, "typeName": {"id": 2039, "name": "address", "nodeType": "ElementaryTypeName", "src": "7607:7:5", "typeDescriptions": {}}}, "id": 2042, "isConstant": false, "isLValue": false, "isPure": true, "kind": "typeConversion", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "7607:10:5", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "src": "7599:18:5", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, {"hexValue": "45524332303a207472616e736665722066726f6d20746865207a65726f2061646472657373", "id": 2044, "isConstant": false, "isLValue": false, "isPure": true, "kind": "string", "lValueRequested": false, "nodeType": "Literal", "src": "7619:39:5", "typeDescriptions": {"typeIdentifier": "t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea", "typeString": "literal_string \"ERC20: transfer from the zero address\""}, "value": "ERC20: transfer from the zero address"}], "expression": {"argumentTypes": [{"typeIdentifier": "t_bool", "typeString": "bool"}, {"typeIdentifier": "t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea", "typeString": "literal_string \"ERC20: transfer from the zero address\""}], "id": 2037, "name": "require", "nodeType": "Identifier", "overloadedDeclarations": [-18, -18], "referencedDeclaration": -18, "src": "7591:7:5", "typeDescriptions": {"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$", "typeString": "function (bool,string memory) pure"}}, "id": 2045, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "7591:68:5", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 2046, "nodeType": "ExpressionStatement", "src": "7591:68:5"}, {"expression": {"arguments": [{"commonType": {"typeIdentifier": "t_address", "typeString": "address"}, "id": 2053, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"id": 2048, "name": "to", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 2032, "src": "7677:2:5", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "nodeType": "BinaryOperation", "operator": "!=", "rightExpression": {"arguments": [{"hexValue": "30", "id": 2051, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "7691:1:5", "typeDescriptions": {"typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0"}, "value": "0"}], "expression": {"argumentTypes": [{"typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0"}], "id": 2050, "isConstant": false, "isLValue": false, "isPure": true, "lValueRequested": false, "nodeType": "ElementaryTypeNameExpression", "src": "7683:7:5", "typeDescriptions": {"typeIdentifier": "t_type$_t_address_$", "typeString": "type(address)"}, "typeName": {"id": 2049, "name": "address", "nodeType": "ElementaryTypeName", "src": "7683:7:5", "typeDescriptions": {}}}, "id": 2052, "isConstant": false, "isLValue": false, "isPure": true, "kind": "typeConversion", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "7683:10:5", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "src": "7677:16:5", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, {"hexValue": "45524332303a207472616e7366657220746f20746865207a65726f2061646472657373", "id": 2054, "isConstant": false, "isLValue": false, "isPure": true, "kind": "string", "lValueRequested": false, "nodeType": "Literal", "src": "7695:37:5", "typeDescriptions": {"typeIdentifier": "t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f", "typeString": "literal_string \"ERC20: transfer to the zero address\""}, "value": "ERC20: transfer to the zero address"}], "expression": {"argumentTypes": [{"typeIdentifier": "t_bool", "typeString": "bool"}, {"typeIdentifier": "t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f", "typeString": "literal_string \"ERC20: transfer to the zero address\""}], "id": 2047, "name": "require", "nodeType": "Identifier", "overloadedDeclarations": [-18, -18], "referencedDeclaration": -18, "src": "7669:7:5", "typeDescriptions": {"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$", "typeString": "function (bool,string memory) pure"}}, "id": 2055, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "7669:64:5", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 2056, "nodeType": "ExpressionStatement", "src": "7669:64:5"}, {"expression": {"arguments": [{"id": 2058, "name": "from", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 2030, "src": "7765:4:5", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, {"id": 2059, "name": "to", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 2032, "src": "7771:2:5", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, {"id": 2060, "name": "amount", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 2034, "src": "7775:6:5", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_address", "typeString": "address"}, {"typeIdentifier": "t_address", "typeString": "address"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}], "id": 2057, "name": "_beforeTokenTransfer", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 2332, "src": "7744:20:5", "typeDescriptions": {"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$", "typeString": "function (address,address,uint256)"}}, "id": 2061, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "7744:38:5", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 2062, "nodeType": "ExpressionStatement", "src": "7744:38:5"}, {"assignments": [2064], "declarations": [{"constant": false, "id": 2064, "mutability": "mutable", "name": "fromBalance", "nameLocation": "7801:11:5", "nodeType": "VariableDeclaration", "scope": 2103, "src": "7793:19:5", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 2063, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "7793:7:5", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "id": 2068, "initialValue": {"baseExpression": {"id": 2065, "name": "_balances", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1773, "src": "7815:9:5", "typeDescriptions": {"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$", "typeString": "mapping(address => uint256)"}}, "id": 2067, "indexExpression": {"id": 2066, "name": "from", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 2030, "src": "7825:4:5", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "nodeType": "IndexAccess", "src": "7815:15:5", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "VariableDeclarationStatement", "src": "7793:37:5"}, {"expression": {"arguments": [{"commonType": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "id": 2072, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"id": 2070, "name": "fromBalance", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 2064, "src": "7848:11:5", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "BinaryOperation", "operator": ">=", "rightExpression": {"id": 2071, "name": "amount", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 2034, "src": "7863:6:5", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "7848:21:5", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, {"hexValue": "45524332303a207472616e7366657220616d6f756e7420657863656564732062616c616e6365", "id": 2073, "isConstant": false, "isLValue": false, "isPure": true, "kind": "string", "lValueRequested": false, "nodeType": "Literal", "src": "7871:40:5", "typeDescriptions": {"typeIdentifier": "t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6", "typeString": "literal_string \"ERC20: transfer amount exceeds balance\""}, "value": "ERC20: transfer amount exceeds balance"}], "expression": {"argumentTypes": [{"typeIdentifier": "t_bool", "typeString": "bool"}, {"typeIdentifier": "t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6", "typeString": "literal_string \"ERC20: transfer amount exceeds balance\""}], "id": 2069, "name": "require", "nodeType": "Identifier", "overloadedDeclarations": [-18, -18], "referencedDeclaration": -18, "src": "7840:7:5", "typeDescriptions": {"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$", "typeString": "function (bool,string memory) pure"}}, "id": 2074, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "7840:72:5", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 2075, "nodeType": "ExpressionStatement", "src": "7840:72:5"}, {"id": 2090, "nodeType": "UncheckedBlock", "src": "7922:273:5", "statements": [{"expression": {"id": 2082, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"baseExpression": {"id": 2076, "name": "_balances", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1773, "src": "7946:9:5", "typeDescriptions": {"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$", "typeString": "mapping(address => uint256)"}}, "id": 2078, "indexExpression": {"id": 2077, "name": "from", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 2030, "src": "7956:4:5", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": true, "nodeType": "IndexAccess", "src": "7946:15:5", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"commonType": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "id": 2081, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"id": 2079, "name": "fromBalance", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 2064, "src": "7964:11:5", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "BinaryOperation", "operator": "-", "rightExpression": {"id": 2080, "name": "amount", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 2034, "src": "7978:6:5", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "7964:20:5", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "7946:38:5", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 2083, "nodeType": "ExpressionStatement", "src": "7946:38:5"}, {"expression": {"id": 2088, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"baseExpression": {"id": 2084, "name": "_balances", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1773, "src": "8161:9:5", "typeDescriptions": {"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$", "typeString": "mapping(address => uint256)"}}, "id": 2086, "indexExpression": {"id": 2085, "name": "to", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 2032, "src": "8171:2:5", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": true, "nodeType": "IndexAccess", "src": "8161:13:5", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "Assignment", "operator": "+=", "rightHandSide": {"id": 2087, "name": "amount", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 2034, "src": "8178:6:5", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "8161:23:5", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 2089, "nodeType": "ExpressionStatement", "src": "8161:23:5"}]}, {"eventCall": {"arguments": [{"id": 2092, "name": "from", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 2030, "src": "8219:4:5", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, {"id": 2093, "name": "to", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 2032, "src": "8225:2:5", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, {"id": 2094, "name": "amount", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 2034, "src": "8229:6:5", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_address", "typeString": "address"}, {"typeIdentifier": "t_address", "typeString": "address"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}], "id": 2091, "name": "Transfer", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 2380, "src": "8210:8:5", "typeDescriptions": {"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$", "typeString": "function (address,address,uint256)"}}, "id": 2095, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "8210:26:5", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 2096, "nodeType": "EmitStatement", "src": "8205:31:5"}, {"expression": {"arguments": [{"id": 2098, "name": "from", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 2030, "src": "8267:4:5", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, {"id": 2099, "name": "to", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 2032, "src": "8273:2:5", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, {"id": 2100, "name": "amount", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 2034, "src": "8277:6:5", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_address", "typeString": "address"}, {"typeIdentifier": "t_address", "typeString": "address"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}], "id": 2097, "name": "_afterTokenTransfer", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 2343, "src": "8247:19:5", "typeDescriptions": {"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$", "typeString": "function (address,address,uint256)"}}, "id": 2101, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "8247:37:5", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 2102, "nodeType": "ExpressionStatement", "src": "8247:37:5"}]}, "documentation": {"id": 2028, "nodeType": "StructuredDocumentation", "src": "7025:443:5", "text": " @dev Moves `amount` of tokens from `from` to `to`.\n This internal function is equivalent to {transfer}, and can be used to\n e.g. implement automatic token fees, slashing mechanisms, etc.\n Emits a {Transfer} event.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `from` must have a balance of at least `amount`."}, "id": 2104, "implemented": true, "kind": "function", "modifiers": [], "name": "_transfer", "nameLocation": "7482:9:5", "nodeType": "FunctionDefinition", "parameters": {"id": 2035, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 2030, "mutability": "mutable", "name": "from", "nameLocation": "7509:4:5", "nodeType": "VariableDeclaration", "scope": 2104, "src": "7501:12:5", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}, "typeName": {"id": 2029, "name": "address", "nodeType": "ElementaryTypeName", "src": "7501:7:5", "stateMutability": "nonpayable", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "visibility": "internal"}, {"constant": false, "id": 2032, "mutability": "mutable", "name": "to", "nameLocation": "7531:2:5", "nodeType": "VariableDeclaration", "scope": 2104, "src": "7523:10:5", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}, "typeName": {"id": 2031, "name": "address", "nodeType": "ElementaryTypeName", "src": "7523:7:5", "stateMutability": "nonpayable", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "visibility": "internal"}, {"constant": false, "id": 2034, "mutability": "mutable", "name": "amount", "nameLocation": "7551:6:5", "nodeType": "VariableDeclaration", "scope": 2104, "src": "7543:14:5", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 2033, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "7543:7:5", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "src": "7491:72:5"}, "returnParameters": {"id": 2036, "nodeType": "ParameterList", "parameters": [], "src": "7581:0:5"}, "scope": 2344, "src": "7473:818:5", "stateMutability": "nonpayable", "virtual": true, "visibility": "internal"}, {"body": {"id": 2160, "nodeType": "Block", "src": "8632:470:5", "statements": [{"expression": {"arguments": [{"commonType": {"typeIdentifier": "t_address", "typeString": "address"}, "id": 2118, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"id": 2113, "name": "account", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 2107, "src": "8650:7:5", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "nodeType": "BinaryOperation", "operator": "!=", "rightExpression": {"arguments": [{"hexValue": "30", "id": 2116, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "8669:1:5", "typeDescriptions": {"typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0"}, "value": "0"}], "expression": {"argumentTypes": [{"typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0"}], "id": 2115, "isConstant": false, "isLValue": false, "isPure": true, "lValueRequested": false, "nodeType": "ElementaryTypeNameExpression", "src": "8661:7:5", "typeDescriptions": {"typeIdentifier": "t_type$_t_address_$", "typeString": "type(address)"}, "typeName": {"id": 2114, "name": "address", "nodeType": "ElementaryTypeName", "src": "8661:7:5", "typeDescriptions": {}}}, "id": 2117, "isConstant": false, "isLValue": false, "isPure": true, "kind": "typeConversion", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "8661:10:5", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "src": "8650:21:5", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, {"hexValue": "45524332303a206d696e7420746f20746865207a65726f2061646472657373", "id": 2119, "isConstant": false, "isLValue": false, "isPure": true, "kind": "string", "lValueRequested": false, "nodeType": "Literal", "src": "8673:33:5", "typeDescriptions": {"typeIdentifier": "t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e", "typeString": "literal_string \"ERC20: mint to the zero address\""}, "value": "ERC20: mint to the zero address"}], "expression": {"argumentTypes": [{"typeIdentifier": "t_bool", "typeString": "bool"}, {"typeIdentifier": "t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e", "typeString": "literal_string \"ERC20: mint to the zero address\""}], "id": 2112, "name": "require", "nodeType": "Identifier", "overloadedDeclarations": [-18, -18], "referencedDeclaration": -18, "src": "8642:7:5", "typeDescriptions": {"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$", "typeString": "function (bool,string memory) pure"}}, "id": 2120, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "8642:65:5", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 2121, "nodeType": "ExpressionStatement", "src": "8642:65:5"}, {"expression": {"arguments": [{"arguments": [{"hexValue": "30", "id": 2125, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "8747:1:5", "typeDescriptions": {"typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0"}, "value": "0"}], "expression": {"argumentTypes": [{"typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0"}], "id": 2124, "isConstant": false, "isLValue": false, "isPure": true, "lValueRequested": false, "nodeType": "ElementaryTypeNameExpression", "src": "8739:7:5", "typeDescriptions": {"typeIdentifier": "t_type$_t_address_$", "typeString": "type(address)"}, "typeName": {"id": 2123, "name": "address", "nodeType": "ElementaryTypeName", "src": "8739:7:5", "typeDescriptions": {}}}, "id": 2126, "isConstant": false, "isLValue": false, "isPure": true, "kind": "typeConversion", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "8739:10:5", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, {"id": 2127, "name": "account", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 2107, "src": "8751:7:5", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, {"id": 2128, "name": "amount", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 2109, "src": "8760:6:5", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_address", "typeString": "address"}, {"typeIdentifier": "t_address", "typeString": "address"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}], "id": 2122, "name": "_beforeTokenTransfer", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 2332, "src": "8718:20:5", "typeDescriptions": {"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$", "typeString": "function (address,address,uint256)"}}, "id": 2129, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "8718:49:5", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 2130, "nodeType": "ExpressionStatement", "src": "8718:49:5"}, {"expression": {"id": 2133, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"id": 2131, "name": "_totalSupply", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1781, "src": "8778:12:5", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "Assignment", "operator": "+=", "rightHandSide": {"id": 2132, "name": "amount", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 2109, "src": "8794:6:5", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "8778:22:5", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 2134, "nodeType": "ExpressionStatement", "src": "8778:22:5"}, {"id": 2141, "nodeType": "UncheckedBlock", "src": "8810:175:5", "statements": [{"expression": {"id": 2139, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"baseExpression": {"id": 2135, "name": "_balances", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1773, "src": "8946:9:5", "typeDescriptions": {"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$", "typeString": "mapping(address => uint256)"}}, "id": 2137, "indexExpression": {"id": 2136, "name": "account", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 2107, "src": "8956:7:5", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": true, "nodeType": "IndexAccess", "src": "8946:18:5", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "Assignment", "operator": "+=", "rightHandSide": {"id": 2138, "name": "amount", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 2109, "src": "8968:6:5", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "8946:28:5", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 2140, "nodeType": "ExpressionStatement", "src": "8946:28:5"}]}, {"eventCall": {"arguments": [{"arguments": [{"hexValue": "30", "id": 2145, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "9016:1:5", "typeDescriptions": {"typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0"}, "value": "0"}], "expression": {"argumentTypes": [{"typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0"}], "id": 2144, "isConstant": false, "isLValue": false, "isPure": true, "lValueRequested": false, "nodeType": "ElementaryTypeNameExpression", "src": "9008:7:5", "typeDescriptions": {"typeIdentifier": "t_type$_t_address_$", "typeString": "type(address)"}, "typeName": {"id": 2143, "name": "address", "nodeType": "ElementaryTypeName", "src": "9008:7:5", "typeDescriptions": {}}}, "id": 2146, "isConstant": false, "isLValue": false, "isPure": true, "kind": "typeConversion", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "9008:10:5", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, {"id": 2147, "name": "account", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 2107, "src": "9020:7:5", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, {"id": 2148, "name": "amount", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 2109, "src": "9029:6:5", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_address", "typeString": "address"}, {"typeIdentifier": "t_address", "typeString": "address"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}], "id": 2142, "name": "Transfer", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 2380, "src": "8999:8:5", "typeDescriptions": {"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$", "typeString": "function (address,address,uint256)"}}, "id": 2149, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "8999:37:5", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 2150, "nodeType": "EmitStatement", "src": "8994:42:5"}, {"expression": {"arguments": [{"arguments": [{"hexValue": "30", "id": 2154, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "9075:1:5", "typeDescriptions": {"typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0"}, "value": "0"}], "expression": {"argumentTypes": [{"typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0"}], "id": 2153, "isConstant": false, "isLValue": false, "isPure": true, "lValueRequested": false, "nodeType": "ElementaryTypeNameExpression", "src": "9067:7:5", "typeDescriptions": {"typeIdentifier": "t_type$_t_address_$", "typeString": "type(address)"}, "typeName": {"id": 2152, "name": "address", "nodeType": "ElementaryTypeName", "src": "9067:7:5", "typeDescriptions": {}}}, "id": 2155, "isConstant": false, "isLValue": false, "isPure": true, "kind": "typeConversion", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "9067:10:5", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, {"id": 2156, "name": "account", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 2107, "src": "9079:7:5", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, {"id": 2157, "name": "amount", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 2109, "src": "9088:6:5", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_address", "typeString": "address"}, {"typeIdentifier": "t_address", "typeString": "address"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}], "id": 2151, "name": "_afterTokenTransfer", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 2343, "src": "9047:19:5", "typeDescriptions": {"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$", "typeString": "function (address,address,uint256)"}}, "id": 2158, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "9047:48:5", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 2159, "nodeType": "ExpressionStatement", "src": "9047:48:5"}]}, "documentation": {"id": 2105, "nodeType": "StructuredDocumentation", "src": "8297:265:5", "text": "@dev Creates `amount` tokens and assigns them to `account`, increasing\n the total supply.\n Emits a {Transfer} event with `from` set to the zero address.\n Requirements:\n - `account` cannot be the zero address."}, "id": 2161, "implemented": true, "kind": "function", "modifiers": [], "name": "_mint", "nameLocation": "8576:5:5", "nodeType": "FunctionDefinition", "parameters": {"id": 2110, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 2107, "mutability": "mutable", "name": "account", "nameLocation": "8590:7:5", "nodeType": "VariableDeclaration", "scope": 2161, "src": "8582:15:5", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}, "typeName": {"id": 2106, "name": "address", "nodeType": "ElementaryTypeName", "src": "8582:7:5", "stateMutability": "nonpayable", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "visibility": "internal"}, {"constant": false, "id": 2109, "mutability": "mutable", "name": "amount", "nameLocation": "8607:6:5", "nodeType": "VariableDeclaration", "scope": 2161, "src": "8599:14:5", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 2108, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "8599:7:5", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "src": "8581:33:5"}, "returnParameters": {"id": 2111, "nodeType": "ParameterList", "parameters": [], "src": "8632:0:5"}, "scope": 2344, "src": "8567:535:5", "stateMutability": "nonpayable", "virtual": true, "visibility": "internal"}, {"body": {"id": 2232, "nodeType": "Block", "src": "9487:594:5", "statements": [{"expression": {"arguments": [{"commonType": {"typeIdentifier": "t_address", "typeString": "address"}, "id": 2175, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"id": 2170, "name": "account", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 2164, "src": "9505:7:5", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "nodeType": "BinaryOperation", "operator": "!=", "rightExpression": {"arguments": [{"hexValue": "30", "id": 2173, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "9524:1:5", "typeDescriptions": {"typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0"}, "value": "0"}], "expression": {"argumentTypes": [{"typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0"}], "id": 2172, "isConstant": false, "isLValue": false, "isPure": true, "lValueRequested": false, "nodeType": "ElementaryTypeNameExpression", "src": "9516:7:5", "typeDescriptions": {"typeIdentifier": "t_type$_t_address_$", "typeString": "type(address)"}, "typeName": {"id": 2171, "name": "address", "nodeType": "ElementaryTypeName", "src": "9516:7:5", "typeDescriptions": {}}}, "id": 2174, "isConstant": false, "isLValue": false, "isPure": true, "kind": "typeConversion", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "9516:10:5", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "src": "9505:21:5", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, {"hexValue": "45524332303a206275726e2066726f6d20746865207a65726f2061646472657373", "id": 2176, "isConstant": false, "isLValue": false, "isPure": true, "kind": "string", "lValueRequested": false, "nodeType": "Literal", "src": "9528:35:5", "typeDescriptions": {"typeIdentifier": "t_stringliteral_b16788493b576042bb52c50ed56189e0b250db113c7bfb1c3897d25cf9632d7f", "typeString": "literal_string \"ERC20: burn from the zero address\""}, "value": "ERC20: burn from the zero address"}], "expression": {"argumentTypes": [{"typeIdentifier": "t_bool", "typeString": "bool"}, {"typeIdentifier": "t_stringliteral_b16788493b576042bb52c50ed56189e0b250db113c7bfb1c3897d25cf9632d7f", "typeString": "literal_string \"ERC20: burn from the zero address\""}], "id": 2169, "name": "require", "nodeType": "Identifier", "overloadedDeclarations": [-18, -18], "referencedDeclaration": -18, "src": "9497:7:5", "typeDescriptions": {"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$", "typeString": "function (bool,string memory) pure"}}, "id": 2177, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "9497:67:5", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 2178, "nodeType": "ExpressionStatement", "src": "9497:67:5"}, {"expression": {"arguments": [{"id": 2180, "name": "account", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 2164, "src": "9596:7:5", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, {"arguments": [{"hexValue": "30", "id": 2183, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "9613:1:5", "typeDescriptions": {"typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0"}, "value": "0"}], "expression": {"argumentTypes": [{"typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0"}], "id": 2182, "isConstant": false, "isLValue": false, "isPure": true, "lValueRequested": false, "nodeType": "ElementaryTypeNameExpression", "src": "9605:7:5", "typeDescriptions": {"typeIdentifier": "t_type$_t_address_$", "typeString": "type(address)"}, "typeName": {"id": 2181, "name": "address", "nodeType": "ElementaryTypeName", "src": "9605:7:5", "typeDescriptions": {}}}, "id": 2184, "isConstant": false, "isLValue": false, "isPure": true, "kind": "typeConversion", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "9605:10:5", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, {"id": 2185, "name": "amount", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 2166, "src": "9617:6:5", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_address", "typeString": "address"}, {"typeIdentifier": "t_address", "typeString": "address"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}], "id": 2179, "name": "_beforeTokenTransfer", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 2332, "src": "9575:20:5", "typeDescriptions": {"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$", "typeString": "function (address,address,uint256)"}}, "id": 2186, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "9575:49:5", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 2187, "nodeType": "ExpressionStatement", "src": "9575:49:5"}, {"assignments": [2189], "declarations": [{"constant": false, "id": 2189, "mutability": "mutable", "name": "accountBalance", "nameLocation": "9643:14:5", "nodeType": "VariableDeclaration", "scope": 2232, "src": "9635:22:5", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 2188, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "9635:7:5", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "id": 2193, "initialValue": {"baseExpression": {"id": 2190, "name": "_balances", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1773, "src": "9660:9:5", "typeDescriptions": {"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$", "typeString": "mapping(address => uint256)"}}, "id": 2192, "indexExpression": {"id": 2191, "name": "account", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 2164, "src": "9670:7:5", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "nodeType": "IndexAccess", "src": "9660:18:5", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "VariableDeclarationStatement", "src": "9635:43:5"}, {"expression": {"arguments": [{"commonType": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "id": 2197, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"id": 2195, "name": "accountBalance", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 2189, "src": "9696:14:5", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "BinaryOperation", "operator": ">=", "rightExpression": {"id": 2196, "name": "amount", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 2166, "src": "9714:6:5", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "9696:24:5", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, {"hexValue": "45524332303a206275726e20616d6f756e7420657863656564732062616c616e6365", "id": 2198, "isConstant": false, "isLValue": false, "isPure": true, "kind": "string", "lValueRequested": false, "nodeType": "Literal", "src": "9722:36:5", "typeDescriptions": {"typeIdentifier": "t_stringliteral_149b126e7125232b4200af45303d04fba8b74653b1a295a6a561a528c33fefdd", "typeString": "literal_string \"ERC20: burn amount exceeds balance\""}, "value": "ERC20: burn amount exceeds balance"}], "expression": {"argumentTypes": [{"typeIdentifier": "t_bool", "typeString": "bool"}, {"typeIdentifier": "t_stringliteral_149b126e7125232b4200af45303d04fba8b74653b1a295a6a561a528c33fefdd", "typeString": "literal_string \"ERC20: burn amount exceeds balance\""}], "id": 2194, "name": "require", "nodeType": "Identifier", "overloadedDeclarations": [-18, -18], "referencedDeclaration": -18, "src": "9688:7:5", "typeDescriptions": {"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$", "typeString": "function (bool,string memory) pure"}}, "id": 2199, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "9688:71:5", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 2200, "nodeType": "ExpressionStatement", "src": "9688:71:5"}, {"id": 2213, "nodeType": "UncheckedBlock", "src": "9769:194:5", "statements": [{"expression": {"id": 2207, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"baseExpression": {"id": 2201, "name": "_balances", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1773, "src": "9793:9:5", "typeDescriptions": {"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$", "typeString": "mapping(address => uint256)"}}, "id": 2203, "indexExpression": {"id": 2202, "name": "account", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 2164, "src": "9803:7:5", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": true, "nodeType": "IndexAccess", "src": "9793:18:5", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"commonType": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "id": 2206, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"id": 2204, "name": "accountBalance", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 2189, "src": "9814:14:5", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "BinaryOperation", "operator": "-", "rightExpression": {"id": 2205, "name": "amount", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 2166, "src": "9831:6:5", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "9814:23:5", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "9793:44:5", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 2208, "nodeType": "ExpressionStatement", "src": "9793:44:5"}, {"expression": {"id": 2211, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"id": 2209, "name": "_totalSupply", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1781, "src": "9930:12:5", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "Assignment", "operator": "-=", "rightHandSide": {"id": 2210, "name": "amount", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 2166, "src": "9946:6:5", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "9930:22:5", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 2212, "nodeType": "ExpressionStatement", "src": "9930:22:5"}]}, {"eventCall": {"arguments": [{"id": 2215, "name": "account", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 2164, "src": "9987:7:5", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, {"arguments": [{"hexValue": "30", "id": 2218, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "10004:1:5", "typeDescriptions": {"typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0"}, "value": "0"}], "expression": {"argumentTypes": [{"typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0"}], "id": 2217, "isConstant": false, "isLValue": false, "isPure": true, "lValueRequested": false, "nodeType": "ElementaryTypeNameExpression", "src": "9996:7:5", "typeDescriptions": {"typeIdentifier": "t_type$_t_address_$", "typeString": "type(address)"}, "typeName": {"id": 2216, "name": "address", "nodeType": "ElementaryTypeName", "src": "9996:7:5", "typeDescriptions": {}}}, "id": 2219, "isConstant": false, "isLValue": false, "isPure": true, "kind": "typeConversion", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "9996:10:5", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, {"id": 2220, "name": "amount", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 2166, "src": "10008:6:5", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_address", "typeString": "address"}, {"typeIdentifier": "t_address", "typeString": "address"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}], "id": 2214, "name": "Transfer", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 2380, "src": "9978:8:5", "typeDescriptions": {"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$", "typeString": "function (address,address,uint256)"}}, "id": 2221, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "9978:37:5", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 2222, "nodeType": "EmitStatement", "src": "9973:42:5"}, {"expression": {"arguments": [{"id": 2224, "name": "account", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 2164, "src": "10046:7:5", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, {"arguments": [{"hexValue": "30", "id": 2227, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "10063:1:5", "typeDescriptions": {"typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0"}, "value": "0"}], "expression": {"argumentTypes": [{"typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0"}], "id": 2226, "isConstant": false, "isLValue": false, "isPure": true, "lValueRequested": false, "nodeType": "ElementaryTypeNameExpression", "src": "10055:7:5", "typeDescriptions": {"typeIdentifier": "t_type$_t_address_$", "typeString": "type(address)"}, "typeName": {"id": 2225, "name": "address", "nodeType": "ElementaryTypeName", "src": "10055:7:5", "typeDescriptions": {}}}, "id": 2228, "isConstant": false, "isLValue": false, "isPure": true, "kind": "typeConversion", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "10055:10:5", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, {"id": 2229, "name": "amount", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 2166, "src": "10067:6:5", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_address", "typeString": "address"}, {"typeIdentifier": "t_address", "typeString": "address"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}], "id": 2223, "name": "_afterTokenTransfer", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 2343, "src": "10026:19:5", "typeDescriptions": {"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$", "typeString": "function (address,address,uint256)"}}, "id": 2230, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "10026:48:5", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 2231, "nodeType": "ExpressionStatement", "src": "10026:48:5"}]}, "documentation": {"id": 2162, "nodeType": "StructuredDocumentation", "src": "9108:309:5", "text": " @dev Destroys `amount` tokens from `account`, reducing the\n total supply.\n Emits a {Transfer} event with `to` set to the zero address.\n Requirements:\n - `account` cannot be the zero address.\n - `account` must have at least `amount` tokens."}, "id": 2233, "implemented": true, "kind": "function", "modifiers": [], "name": "_burn", "nameLocation": "9431:5:5", "nodeType": "FunctionDefinition", "parameters": {"id": 2167, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 2164, "mutability": "mutable", "name": "account", "nameLocation": "9445:7:5", "nodeType": "VariableDeclaration", "scope": 2233, "src": "9437:15:5", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}, "typeName": {"id": 2163, "name": "address", "nodeType": "ElementaryTypeName", "src": "9437:7:5", "stateMutability": "nonpayable", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "visibility": "internal"}, {"constant": false, "id": 2166, "mutability": "mutable", "name": "amount", "nameLocation": "9462:6:5", "nodeType": "VariableDeclaration", "scope": 2233, "src": "9454:14:5", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 2165, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "9454:7:5", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "src": "9436:33:5"}, "returnParameters": {"id": 2168, "nodeType": "ParameterList", "parameters": [], "src": "9487:0:5"}, "scope": 2344, "src": "9422:659:5", "stateMutability": "nonpayable", "virtual": true, "visibility": "internal"}, {"body": {"id": 2277, "nodeType": "Block", "src": "10617:257:5", "statements": [{"expression": {"arguments": [{"commonType": {"typeIdentifier": "t_address", "typeString": "address"}, "id": 2249, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"id": 2244, "name": "owner", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 2236, "src": "10635:5:5", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "nodeType": "BinaryOperation", "operator": "!=", "rightExpression": {"arguments": [{"hexValue": "30", "id": 2247, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "10652:1:5", "typeDescriptions": {"typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0"}, "value": "0"}], "expression": {"argumentTypes": [{"typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0"}], "id": 2246, "isConstant": false, "isLValue": false, "isPure": true, "lValueRequested": false, "nodeType": "ElementaryTypeNameExpression", "src": "10644:7:5", "typeDescriptions": {"typeIdentifier": "t_type$_t_address_$", "typeString": "type(address)"}, "typeName": {"id": 2245, "name": "address", "nodeType": "ElementaryTypeName", "src": "10644:7:5", "typeDescriptions": {}}}, "id": 2248, "isConstant": false, "isLValue": false, "isPure": true, "kind": "typeConversion", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "10644:10:5", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "src": "10635:19:5", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, {"hexValue": "45524332303a20617070726f76652066726f6d20746865207a65726f2061646472657373", "id": 2250, "isConstant": false, "isLValue": false, "isPure": true, "kind": "string", "lValueRequested": false, "nodeType": "Literal", "src": "10656:38:5", "typeDescriptions": {"typeIdentifier": "t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208", "typeString": "literal_string \"ERC20: approve from the zero address\""}, "value": "ERC20: approve from the zero address"}], "expression": {"argumentTypes": [{"typeIdentifier": "t_bool", "typeString": "bool"}, {"typeIdentifier": "t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208", "typeString": "literal_string \"ERC20: approve from the zero address\""}], "id": 2243, "name": "require", "nodeType": "Identifier", "overloadedDeclarations": [-18, -18], "referencedDeclaration": -18, "src": "10627:7:5", "typeDescriptions": {"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$", "typeString": "function (bool,string memory) pure"}}, "id": 2251, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "10627:68:5", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 2252, "nodeType": "ExpressionStatement", "src": "10627:68:5"}, {"expression": {"arguments": [{"commonType": {"typeIdentifier": "t_address", "typeString": "address"}, "id": 2259, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"id": 2254, "name": "spender", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 2238, "src": "10713:7:5", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "nodeType": "BinaryOperation", "operator": "!=", "rightExpression": {"arguments": [{"hexValue": "30", "id": 2257, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "10732:1:5", "typeDescriptions": {"typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0"}, "value": "0"}], "expression": {"argumentTypes": [{"typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0"}], "id": 2256, "isConstant": false, "isLValue": false, "isPure": true, "lValueRequested": false, "nodeType": "ElementaryTypeNameExpression", "src": "10724:7:5", "typeDescriptions": {"typeIdentifier": "t_type$_t_address_$", "typeString": "type(address)"}, "typeName": {"id": 2255, "name": "address", "nodeType": "ElementaryTypeName", "src": "10724:7:5", "typeDescriptions": {}}}, "id": 2258, "isConstant": false, "isLValue": false, "isPure": true, "kind": "typeConversion", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "10724:10:5", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "src": "10713:21:5", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, {"hexValue": "45524332303a20617070726f766520746f20746865207a65726f2061646472657373", "id": 2260, "isConstant": false, "isLValue": false, "isPure": true, "kind": "string", "lValueRequested": false, "nodeType": "Literal", "src": "10736:36:5", "typeDescriptions": {"typeIdentifier": "t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029", "typeString": "literal_string \"ERC20: approve to the zero address\""}, "value": "ERC20: approve to the zero address"}], "expression": {"argumentTypes": [{"typeIdentifier": "t_bool", "typeString": "bool"}, {"typeIdentifier": "t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029", "typeString": "literal_string \"ERC20: approve to the zero address\""}], "id": 2253, "name": "require", "nodeType": "Identifier", "overloadedDeclarations": [-18, -18], "referencedDeclaration": -18, "src": "10705:7:5", "typeDescriptions": {"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$", "typeString": "function (bool,string memory) pure"}}, "id": 2261, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "10705:68:5", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 2262, "nodeType": "ExpressionStatement", "src": "10705:68:5"}, {"expression": {"id": 2269, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"baseExpression": {"baseExpression": {"id": 2263, "name": "_allowances", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1779, "src": "10784:11:5", "typeDescriptions": {"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$", "typeString": "mapping(address => mapping(address => uint256))"}}, "id": 2266, "indexExpression": {"id": 2264, "name": "owner", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 2236, "src": "10796:5:5", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "nodeType": "IndexAccess", "src": "10784:18:5", "typeDescriptions": {"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$", "typeString": "mapping(address => uint256)"}}, "id": 2267, "indexExpression": {"id": 2265, "name": "spender", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 2238, "src": "10803:7:5", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": true, "nodeType": "IndexAccess", "src": "10784:27:5", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"id": 2268, "name": "amount", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 2240, "src": "10814:6:5", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "10784:36:5", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 2270, "nodeType": "ExpressionStatement", "src": "10784:36:5"}, {"eventCall": {"arguments": [{"id": 2272, "name": "owner", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 2236, "src": "10844:5:5", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, {"id": 2273, "name": "spender", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 2238, "src": "10851:7:5", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, {"id": 2274, "name": "amount", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 2240, "src": "10860:6:5", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_address", "typeString": "address"}, {"typeIdentifier": "t_address", "typeString": "address"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}], "id": 2271, "name": "Approval", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 2389, "src": "10835:8:5", "typeDescriptions": {"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$", "typeString": "function (address,address,uint256)"}}, "id": 2275, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "10835:32:5", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 2276, "nodeType": "EmitStatement", "src": "10830:37:5"}]}, "documentation": {"id": 2234, "nodeType": "StructuredDocumentation", "src": "10087:412:5", "text": " @dev Sets `amount` as the allowance of `spender` over the `owner` s tokens.\n This internal function is equivalent to `approve`, and can be used to\n e.g. set automatic allowances for certain subsystems, etc.\n Emits an {Approval} event.\n Requirements:\n - `owner` cannot be the zero address.\n - `spender` cannot be the zero address."}, "id": 2278, "implemented": true, "kind": "function", "modifiers": [], "name": "_approve", "nameLocation": "10513:8:5", "nodeType": "FunctionDefinition", "parameters": {"id": 2241, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 2236, "mutability": "mutable", "name": "owner", "nameLocation": "10539:5:5", "nodeType": "VariableDeclaration", "scope": 2278, "src": "10531:13:5", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}, "typeName": {"id": 2235, "name": "address", "nodeType": "ElementaryTypeName", "src": "10531:7:5", "stateMutability": "nonpayable", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "visibility": "internal"}, {"constant": false, "id": 2238, "mutability": "mutable", "name": "spender", "nameLocation": "10562:7:5", "nodeType": "VariableDeclaration", "scope": 2278, "src": "10554:15:5", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}, "typeName": {"id": 2237, "name": "address", "nodeType": "ElementaryTypeName", "src": "10554:7:5", "stateMutability": "nonpayable", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "visibility": "internal"}, {"constant": false, "id": 2240, "mutability": "mutable", "name": "amount", "nameLocation": "10587:6:5", "nodeType": "VariableDeclaration", "scope": 2278, "src": "10579:14:5", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 2239, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "10579:7:5", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "src": "10521:78:5"}, "returnParameters": {"id": 2242, "nodeType": "ParameterList", "parameters": [], "src": "10617:0:5"}, "scope": 2344, "src": "10504:370:5", "stateMutability": "nonpayable", "virtual": true, "visibility": "internal"}, {"body": {"id": 2320, "nodeType": "Block", "src": "11275:321:5", "statements": [{"assignments": [2289], "declarations": [{"constant": false, "id": 2289, "mutability": "mutable", "name": "currentAllowance", "nameLocation": "11293:16:5", "nodeType": "VariableDeclaration", "scope": 2320, "src": "11285:24:5", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 2288, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "11285:7:5", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "id": 2294, "initialValue": {"arguments": [{"id": 2291, "name": "owner", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 2281, "src": "11322:5:5", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, {"id": 2292, "name": "spender", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 2283, "src": "11329:7:5", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_address", "typeString": "address"}, {"typeIdentifier": "t_address", "typeString": "address"}], "id": 2290, "name": "allowance", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1899, "src": "11312:9:5", "typeDescriptions": {"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_uint256_$", "typeString": "function (address,address) view returns (uint256)"}}, "id": 2293, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "11312:25:5", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "VariableDeclarationStatement", "src": "11285:52:5"}, {"condition": {"commonType": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "id": 2301, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"id": 2295, "name": "currentAllowance", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 2289, "src": "11351:16:5", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "BinaryOperation", "operator": "!=", "rightExpression": {"expression": {"arguments": [{"id": 2298, "isConstant": false, "isLValue": false, "isPure": true, "lValueRequested": false, "nodeType": "ElementaryTypeNameExpression", "src": "11376:7:5", "typeDescriptions": {"typeIdentifier": "t_type$_t_uint256_$", "typeString": "type(uint256)"}, "typeName": {"id": 2297, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "11376:7:5", "typeDescriptions": {}}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_type$_t_uint256_$", "typeString": "type(uint256)"}], "id": 2296, "name": "type", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": -27, "src": "11371:4:5", "typeDescriptions": {"typeIdentifier": "t_function_metatype_pure$__$returns$__$", "typeString": "function () pure"}}, "id": 2299, "isConstant": false, "isLValue": false, "isPure": true, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "11371:13:5", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_magic_meta_type_t_uint256", "typeString": "type(uint256)"}}, "id": 2300, "isConstant": false, "isLValue": false, "isPure": true, "lValueRequested": false, "memberName": "max", "nodeType": "MemberAccess", "src": "11371:17:5", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "11351:37:5", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "id": 2319, "nodeType": "IfStatement", "src": "11347:243:5", "trueBody": {"id": 2318, "nodeType": "Block", "src": "11390:200:5", "statements": [{"expression": {"arguments": [{"commonType": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "id": 2305, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"id": 2303, "name": "currentAllowance", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 2289, "src": "11412:16:5", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "BinaryOperation", "operator": ">=", "rightExpression": {"id": 2304, "name": "amount", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 2285, "src": "11432:6:5", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "11412:26:5", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, {"hexValue": "45524332303a20696e73756666696369656e7420616c6c6f77616e6365", "id": 2306, "isConstant": false, "isLValue": false, "isPure": true, "kind": "string", "lValueRequested": false, "nodeType": "Literal", "src": "11440:31:5", "typeDescriptions": {"typeIdentifier": "t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe", "typeString": "literal_string \"ERC20: insufficient allowance\""}, "value": "ERC20: insufficient allowance"}], "expression": {"argumentTypes": [{"typeIdentifier": "t_bool", "typeString": "bool"}, {"typeIdentifier": "t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe", "typeString": "literal_string \"ERC20: insufficient allowance\""}], "id": 2302, "name": "require", "nodeType": "Identifier", "overloadedDeclarations": [-18, -18], "referencedDeclaration": -18, "src": "11404:7:5", "typeDescriptions": {"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$", "typeString": "function (bool,string memory) pure"}}, "id": 2307, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "11404:68:5", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 2308, "nodeType": "ExpressionStatement", "src": "11404:68:5"}, {"id": 2317, "nodeType": "UncheckedBlock", "src": "11486:94:5", "statements": [{"expression": {"arguments": [{"id": 2310, "name": "owner", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 2281, "src": "11523:5:5", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, {"id": 2311, "name": "spender", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 2283, "src": "11530:7:5", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, {"commonType": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "id": 2314, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"id": 2312, "name": "currentAllowance", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 2289, "src": "11539:16:5", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "BinaryOperation", "operator": "-", "rightExpression": {"id": 2313, "name": "amount", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 2285, "src": "11558:6:5", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "11539:25:5", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_address", "typeString": "address"}, {"typeIdentifier": "t_address", "typeString": "address"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}], "id": 2309, "name": "_approve", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 2278, "src": "11514:8:5", "typeDescriptions": {"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$", "typeString": "function (address,address,uint256)"}}, "id": 2315, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "11514:51:5", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 2316, "nodeType": "ExpressionStatement", "src": "11514:51:5"}]}]}}]}, "documentation": {"id": 2279, "nodeType": "StructuredDocumentation", "src": "10880:270:5", "text": " @dev Updates `owner` s allowance for `spender` based on spent `amount`.\n Does not update the allowance amount in case of infinite allowance.\n Revert if not enough allowance is available.\n Might emit an {Approval} event."}, "id": 2321, "implemented": true, "kind": "function", "modifiers": [], "name": "_spendAllowance", "nameLocation": "11164:15:5", "nodeType": "FunctionDefinition", "parameters": {"id": 2286, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 2281, "mutability": "mutable", "name": "owner", "nameLocation": "11197:5:5", "nodeType": "VariableDeclaration", "scope": 2321, "src": "11189:13:5", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}, "typeName": {"id": 2280, "name": "address", "nodeType": "ElementaryTypeName", "src": "11189:7:5", "stateMutability": "nonpayable", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "visibility": "internal"}, {"constant": false, "id": 2283, "mutability": "mutable", "name": "spender", "nameLocation": "11220:7:5", "nodeType": "VariableDeclaration", "scope": 2321, "src": "11212:15:5", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}, "typeName": {"id": 2282, "name": "address", "nodeType": "ElementaryTypeName", "src": "11212:7:5", "stateMutability": "nonpayable", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "visibility": "internal"}, {"constant": false, "id": 2285, "mutability": "mutable", "name": "amount", "nameLocation": "11245:6:5", "nodeType": "VariableDeclaration", "scope": 2321, "src": "11237:14:5", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 2284, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "11237:7:5", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "src": "11179:78:5"}, "returnParameters": {"id": 2287, "nodeType": "ParameterList", "parameters": [], "src": "11275:0:5"}, "scope": 2344, "src": "11155:441:5", "stateMutability": "nonpayable", "virtual": true, "visibility": "internal"}, {"body": {"id": 2331, "nodeType": "Block", "src": "12299:2:5", "statements": []}, "documentation": {"id": 2322, "nodeType": "StructuredDocumentation", "src": "11602:573:5", "text": " @dev Hook that is called before any transfer of tokens. This includes\n minting and burning.\n Calling conditions:\n - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens\n will be transferred to `to`.\n - when `from` is zero, `amount` tokens will be minted for `to`.\n - when `to` is zero, `amount` of ``from``'s tokens will be burned.\n - `from` and `to` are never both zero.\n To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks]."}, "id": 2332, "implemented": true, "kind": "function", "modifiers": [], "name": "_beforeTokenTransfer", "nameLocation": "12189:20:5", "nodeType": "FunctionDefinition", "parameters": {"id": 2329, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 2324, "mutability": "mutable", "name": "from", "nameLocation": "12227:4:5", "nodeType": "VariableDeclaration", "scope": 2332, "src": "12219:12:5", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}, "typeName": {"id": 2323, "name": "address", "nodeType": "ElementaryTypeName", "src": "12219:7:5", "stateMutability": "nonpayable", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "visibility": "internal"}, {"constant": false, "id": 2326, "mutability": "mutable", "name": "to", "nameLocation": "12249:2:5", "nodeType": "VariableDeclaration", "scope": 2332, "src": "12241:10:5", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}, "typeName": {"id": 2325, "name": "address", "nodeType": "ElementaryTypeName", "src": "12241:7:5", "stateMutability": "nonpayable", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "visibility": "internal"}, {"constant": false, "id": 2328, "mutability": "mutable", "name": "amount", "nameLocation": "12269:6:5", "nodeType": "VariableDeclaration", "scope": 2332, "src": "12261:14:5", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 2327, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "12261:7:5", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "src": "12209:72:5"}, "returnParameters": {"id": 2330, "nodeType": "ParameterList", "parameters": [], "src": "12299:0:5"}, "scope": 2344, "src": "12180:121:5", "stateMutability": "nonpayable", "virtual": true, "visibility": "internal"}, {"body": {"id": 2342, "nodeType": "Block", "src": "13007:2:5", "statements": []}, "documentation": {"id": 2333, "nodeType": "StructuredDocumentation", "src": "12307:577:5", "text": " @dev Hook that is called after any transfer of tokens. This includes\n minting and burning.\n Calling conditions:\n - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens\n has been transferred to `to`.\n - when `from` is zero, `amount` tokens have been minted for `to`.\n - when `to` is zero, `amount` of ``from``'s tokens have been burned.\n - `from` and `to` are never both zero.\n To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks]."}, "id": 2343, "implemented": true, "kind": "function", "modifiers": [], "name": "_afterTokenTransfer", "nameLocation": "12898:19:5", "nodeType": "FunctionDefinition", "parameters": {"id": 2340, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 2335, "mutability": "mutable", "name": "from", "nameLocation": "12935:4:5", "nodeType": "VariableDeclaration", "scope": 2343, "src": "12927:12:5", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}, "typeName": {"id": 2334, "name": "address", "nodeType": "ElementaryTypeName", "src": "12927:7:5", "stateMutability": "nonpayable", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "visibility": "internal"}, {"constant": false, "id": 2337, "mutability": "mutable", "name": "to", "nameLocation": "12957:2:5", "nodeType": "VariableDeclaration", "scope": 2343, "src": "12949:10:5", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}, "typeName": {"id": 2336, "name": "address", "nodeType": "ElementaryTypeName", "src": "12949:7:5", "stateMutability": "nonpayable", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "visibility": "internal"}, {"constant": false, "id": 2339, "mutability": "mutable", "name": "amount", "nameLocation": "12977:6:5", "nodeType": "VariableDeclaration", "scope": 2343, "src": "12969:14:5", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 2338, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "12969:7:5", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "src": "12917:72:5"}, "returnParameters": {"id": 2341, "nodeType": "ParameterList", "parameters": [], "src": "13007:0:5"}, "scope": 2344, "src": "12889:120:5", "stateMutability": "nonpayable", "virtual": true, "visibility": "internal"}], "scope": 2345, "src": "1401:11610:5", "usedErrors": []}], "src": "105:12907:5"}}, "/Users/vladimirtrifonov/src/playground/solidity/rare-skills/advanced-solidity-bootcamp/fuzzing-with-echidna/bonding-token/lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol": {"AST": {"absolutePath": "lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol", "exportedSymbols": {"IERC20": [2446]}, "id": 2447, "license": "MIT", "nodeType": "SourceUnit", "nodes": [{"id": 2370, "literals": ["solidity", "^", "0.8", ".0"], "nodeType": "PragmaDirective", "src": "106:23:6"}, {"abstract": false, "baseContracts": [], "canonicalName": "IERC20", "contractDependencies": [], "contractKind": "interface", "documentation": {"id": 2371, "nodeType": "StructuredDocumentation", "src": "131:70:6", "text": " @dev Interface of the ERC20 standard as defined in the EIP."}, "fullyImplemented": false, "id": 2446, "linearizedBaseContracts": [2446], "name": "IERC20", "nameLocation": "212:6:6", "nodeType": "ContractDefinition", "nodes": [{"anonymous": false, "documentation": {"id": 2372, "nodeType": "StructuredDocumentation", "src": "225:158:6", "text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."}, "eventSelector": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef", "id": 2380, "name": "Transfer", "nameLocation": "394:8:6", "nodeType": "EventDefinition", "parameters": {"id": 2379, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 2374, "indexed": true, "mutability": "mutable", "name": "from", "nameLocation": "419:4:6", "nodeType": "VariableDeclaration", "scope": 2380, "src": "403:20:6", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}, "typeName": {"id": 2373, "name": "address", "nodeType": "ElementaryTypeName", "src": "403:7:6", "stateMutability": "nonpayable", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "visibility": "internal"}, {"constant": false, "id": 2376, "indexed": true, "mutability": "mutable", "name": "to", "nameLocation": "441:2:6", "nodeType": "VariableDeclaration", "scope": 2380, "src": "425:18:6", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}, "typeName": {"id": 2375, "name": "address", "nodeType": "ElementaryTypeName", "src": "425:7:6", "stateMutability": "nonpayable", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "visibility": "internal"}, {"constant": false, "id": 2378, "indexed": false, "mutability": "mutable", "name": "value", "nameLocation": "453:5:6", "nodeType": "VariableDeclaration", "scope": 2380, "src": "445:13:6", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 2377, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "445:7:6", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "src": "402:57:6"}, "src": "388:72:6"}, {"anonymous": false, "documentation": {"id": 2381, "nodeType": "StructuredDocumentation", "src": "466:148:6", "text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."}, "eventSelector": "8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925", "id": 2389, "name": "Approval", "nameLocation": "625:8:6", "nodeType": "EventDefinition", "parameters": {"id": 2388, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 2383, "indexed": true, "mutability": "mutable", "name": "owner", "nameLocation": "650:5:6", "nodeType": "VariableDeclaration", "scope": 2389, "src": "634:21:6", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}, "typeName": {"id": 2382, "name": "address", "nodeType": "ElementaryTypeName", "src": "634:7:6", "stateMutability": "nonpayable", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "visibility": "internal"}, {"constant": false, "id": 2385, "indexed": true, "mutability": "mutable", "name": "spender", "nameLocation": "673:7:6", "nodeType": "VariableDeclaration", "scope": 2389, "src": "657:23:6", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}, "typeName": {"id": 2384, "name": "address", "nodeType": "ElementaryTypeName", "src": "657:7:6", "stateMutability": "nonpayable", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "visibility": "internal"}, {"constant": false, "id": 2387, "indexed": false, "mutability": "mutable", "name": "value", "nameLocation": "690:5:6", "nodeType": "VariableDeclaration", "scope": 2389, "src": "682:13:6", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 2386, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "682:7:6", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "src": "633:63:6"}, "src": "619:78:6"}, {"documentation": {"id": 2390, "nodeType": "StructuredDocumentation", "src": "703:66:6", "text": " @dev Returns the amount of tokens in existence."}, "functionSelector": "18160ddd", "id": 2395, "implemented": false, "kind": "function", "modifiers": [], "name": "totalSupply", "nameLocation": "783:11:6", "nodeType": "FunctionDefinition", "parameters": {"id": 2391, "nodeType": "ParameterList", "parameters": [], "src": "794:2:6"}, "returnParameters": {"id": 2394, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 2393, "mutability": "mutable", "name": "", "nameLocation": "-1:-1:-1", "nodeType": "VariableDeclaration", "scope": 2395, "src": "820:7:6", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 2392, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "820:7:6", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "src": "819:9:6"}, "scope": 2446, "src": "774:55:6", "stateMutability": "view", "virtual": false, "visibility": "external"}, {"documentation": {"id": 2396, "nodeType": "StructuredDocumentation", "src": "835:72:6", "text": " @dev Returns the amount of tokens owned by `account`."}, "functionSelector": "70a08231", "id": 2403, "implemented": false, "kind": "function", "modifiers": [], "name": "balanceOf", "nameLocation": "921:9:6", "nodeType": "FunctionDefinition", "parameters": {"id": 2399, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 2398, "mutability": "mutable", "name": "account", "nameLocation": "939:7:6", "nodeType": "VariableDeclaration", "scope": 2403, "src": "931:15:6", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}, "typeName": {"id": 2397, "name": "address", "nodeType": "ElementaryTypeName", "src": "931:7:6", "stateMutability": "nonpayable", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "visibility": "internal"}], "src": "930:17:6"}, "returnParameters": {"id": 2402, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 2401, "mutability": "mutable", "name": "", "nameLocation": "-1:-1:-1", "nodeType": "VariableDeclaration", "scope": 2403, "src": "971:7:6", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 2400, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "971:7:6", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "src": "970:9:6"}, "scope": 2446, "src": "912:68:6", "stateMutability": "view", "virtual": false, "visibility": "external"}, {"documentation": {"id": 2404, "nodeType": "StructuredDocumentation", "src": "986:202:6", "text": " @dev Moves `amount` tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."}, "functionSelector": "a9059cbb", "id": 2413, "implemented": false, "kind": "function", "modifiers": [], "name": "transfer", "nameLocation": "1202:8:6", "nodeType": "FunctionDefinition", "parameters": {"id": 2409, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 2406, "mutability": "mutable", "name": "to", "nameLocation": "1219:2:6", "nodeType": "VariableDeclaration", "scope": 2413, "src": "1211:10:6", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}, "typeName": {"id": 2405, "name": "address", "nodeType": "ElementaryTypeName", "src": "1211:7:6", "stateMutability": "nonpayable", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "visibility": "internal"}, {"constant": false, "id": 2408, "mutability": "mutable", "name": "amount", "nameLocation": "1231:6:6", "nodeType": "VariableDeclaration", "scope": 2413, "src": "1223:14:6", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 2407, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "1223:7:6", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "src": "1210:28:6"}, "returnParameters": {"id": 2412, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 2411, "mutability": "mutable", "name": "", "nameLocation": "-1:-1:-1", "nodeType": "VariableDeclaration", "scope": 2413, "src": "1257:4:6", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}, "typeName": {"id": 2410, "name": "bool", "nodeType": "ElementaryTypeName", "src": "1257:4:6", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "visibility": "internal"}], "src": "1256:6:6"}, "scope": 2446, "src": "1193:70:6", "stateMutability": "nonpayable", "virtual": false, "visibility": "external"}, {"documentation": {"id": 2414, "nodeType": "StructuredDocumentation", "src": "1269:264:6", "text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."}, "functionSelector": "dd62ed3e", "id": 2423, "implemented": false, "kind": "function", "modifiers": [], "name": "allowance", "nameLocation": "1547:9:6", "nodeType": "FunctionDefinition", "parameters": {"id": 2419, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 2416, "mutability": "mutable", "name": "owner", "nameLocation": "1565:5:6", "nodeType": "VariableDeclaration", "scope": 2423, "src": "1557:13:6", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}, "typeName": {"id": 2415, "name": "address", "nodeType": "ElementaryTypeName", "src": "1557:7:6", "stateMutability": "nonpayable", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "visibility": "internal"}, {"constant": false, "id": 2418, "mutability": "mutable", "name": "spender", "nameLocation": "1580:7:6", "nodeType": "VariableDeclaration", "scope": 2423, "src": "1572:15:6", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}, "typeName": {"id": 2417, "name": "address", "nodeType": "ElementaryTypeName", "src": "1572:7:6", "stateMutability": "nonpayable", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "visibility": "internal"}], "src": "1556:32:6"}, "returnParameters": {"id": 2422, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 2421, "mutability": "mutable", "name": "", "nameLocation": "-1:-1:-1", "nodeType": "VariableDeclaration", "scope": 2423, "src": "1612:7:6", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 2420, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "1612:7:6", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "src": "1611:9:6"}, "scope": 2446, "src": "1538:83:6", "stateMutability": "view", "virtual": false, "visibility": "external"}, {"documentation": {"id": 2424, "nodeType": "StructuredDocumentation", "src": "1627:642:6", "text": " @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."}, "functionSelector": "095ea7b3", "id": 2433, "implemented": false, "kind": "function", "modifiers": [], "name": "approve", "nameLocation": "2283:7:6", "nodeType": "FunctionDefinition", "parameters": {"id": 2429, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 2426, "mutability": "mutable", "name": "spender", "nameLocation": "2299:7:6", "nodeType": "VariableDeclaration", "scope": 2433, "src": "2291:15:6", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}, "typeName": {"id": 2425, "name": "address", "nodeType": "ElementaryTypeName", "src": "2291:7:6", "stateMutability": "nonpayable", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "visibility": "internal"}, {"constant": false, "id": 2428, "mutability": "mutable", "name": "amount", "nameLocation": "2316:6:6", "nodeType": "VariableDeclaration", "scope": 2433, "src": "2308:14:6", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 2427, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "2308:7:6", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "src": "2290:33:6"}, "returnParameters": {"id": 2432, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 2431, "mutability": "mutable", "name": "", "nameLocation": "-1:-1:-1", "nodeType": "VariableDeclaration", "scope": 2433, "src": "2342:4:6", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}, "typeName": {"id": 2430, "name": "bool", "nodeType": "ElementaryTypeName", "src": "2342:4:6", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "visibility": "internal"}], "src": "2341:6:6"}, "scope": 2446, "src": "2274:74:6", "stateMutability": "nonpayable", "virtual": false, "visibility": "external"}, {"documentation": {"id": 2434, "nodeType": "StructuredDocumentation", "src": "2354:287:6", "text": " @dev Moves `amount` tokens from `from` to `to` using the\n allowance mechanism. `amount` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."}, "functionSelector": "23b872dd", "id": 2445, "implemented": false, "kind": "function", "modifiers": [], "name": "transferFrom", "nameLocation": "2655:12:6", "nodeType": "FunctionDefinition", "parameters": {"id": 2441, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 2436, "mutability": "mutable", "name": "from", "nameLocation": "2685:4:6", "nodeType": "VariableDeclaration", "scope": 2445, "src": "2677:12:6", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}, "typeName": {"id": 2435, "name": "address", "nodeType": "ElementaryTypeName", "src": "2677:7:6", "stateMutability": "nonpayable", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "visibility": "internal"}, {"constant": false, "id": 2438, "mutability": "mutable", "name": "to", "nameLocation": "2707:2:6", "nodeType": "VariableDeclaration", "scope": 2445, "src": "2699:10:6", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}, "typeName": {"id": 2437, "name": "address", "nodeType": "ElementaryTypeName", "src": "2699:7:6", "stateMutability": "nonpayable", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "visibility": "internal"}, {"constant": false, "id": 2440, "mutability": "mutable", "name": "amount", "nameLocation": "2727:6:6", "nodeType": "VariableDeclaration", "scope": 2445, "src": "2719:14:6", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 2439, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "2719:7:6", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "src": "2667:72:6"}, "returnParameters": {"id": 2444, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 2443, "mutability": "mutable", "name": "", "nameLocation": "-1:-1:-1", "nodeType": "VariableDeclaration", "scope": 2445, "src": "2758:4:6", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}, "typeName": {"id": 2442, "name": "bool", "nodeType": "ElementaryTypeName", "src": "2758:4:6", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "visibility": "internal"}], "src": "2757:6:6"}, "scope": 2446, "src": "2646:118:6", "stateMutability": "nonpayable", "virtual": false, "visibility": "external"}], "scope": 2447, "src": "202:2564:6", "usedErrors": []}], "src": "106:2661:6"}}, "/Users/vladimirtrifonov/src/playground/solidity/rare-skills/advanced-solidity-bootcamp/fuzzing-with-echidna/bonding-token/lib/openzeppelin-contracts/contracts/token/ERC20/extensions/IERC20Metadata.sol": {"AST": {"absolutePath": "lib/openzeppelin-contracts/contracts/token/ERC20/extensions/IERC20Metadata.sol", "exportedSymbols": {"IERC20": [2446], "IERC20Metadata": [2483]}, "id": 2484, "license": "MIT", "nodeType": "SourceUnit", "nodes": [{"id": 2460, "literals": ["solidity", "^", "0.8", ".0"], "nodeType": "PragmaDirective", "src": "110:23:7"}, {"absolutePath": "lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol", "file": "../IERC20.sol", "id": 2461, "nameLocation": "-1:-1:-1", "nodeType": "ImportDirective", "scope": 2484, "sourceUnit": 2447, "src": "135:23:7", "symbolAliases": [], "unitAlias": ""}, {"abstract": false, "baseContracts": [{"baseName": {"id": 2463, "name": "IERC20", "nodeType": "IdentifierPath", "referencedDeclaration": 2446, "src": "305:6:7"}, "id": 2464, "nodeType": "InheritanceSpecifier", "src": "305:6:7"}], "canonicalName": "IERC20Metadata", "contractDependencies": [], "contractKind": "interface", "documentation": {"id": 2462, "nodeType": "StructuredDocumentation", "src": "160:116:7", "text": " @dev Interface for the optional metadata functions from the ERC20 standard.\n _Available since v4.1._"}, "fullyImplemented": false, "id": 2483, "linearizedBaseContracts": [2483, 2446], "name": "IERC20Metadata", "nameLocation": "287:14:7", "nodeType": "ContractDefinition", "nodes": [{"documentation": {"id": 2465, "nodeType": "StructuredDocumentation", "src": "318:54:7", "text": " @dev Returns the name of the token."}, "functionSelector": "06fdde03", "id": 2470, "implemented": false, "kind": "function", "modifiers": [], "name": "name", "nameLocation": "386:4:7", "nodeType": "FunctionDefinition", "parameters": {"id": 2466, "nodeType": "ParameterList", "parameters": [], "src": "390:2:7"}, "returnParameters": {"id": 2469, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 2468, "mutability": "mutable", "name": "", "nameLocation": "-1:-1:-1", "nodeType": "VariableDeclaration", "scope": 2470, "src": "416:13:7", "stateVariable": false, "storageLocation": "memory", "typeDescriptions": {"typeIdentifier": "t_string_memory_ptr", "typeString": "string"}, "typeName": {"id": 2467, "name": "string", "nodeType": "ElementaryTypeName", "src": "416:6:7", "typeDescriptions": {"typeIdentifier": "t_string_storage_ptr", "typeString": "string"}}, "visibility": "internal"}], "src": "415:15:7"}, "scope": 2483, "src": "377:54:7", "stateMutability": "view", "virtual": false, "visibility": "external"}, {"documentation": {"id": 2471, "nodeType": "StructuredDocumentation", "src": "437:56:7", "text": " @dev Returns the symbol of the token."}, "functionSelector": "95d89b41", "id": 2476, "implemented": false, "kind": "function", "modifiers": [], "name": "symbol", "nameLocation": "507:6:7", "nodeType": "FunctionDefinition", "parameters": {"id": 2472, "nodeType": "ParameterList", "parameters": [], "src": "513:2:7"}, "returnParameters": {"id": 2475, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 2474, "mutability": "mutable", "name": "", "nameLocation": "-1:-1:-1", "nodeType": "VariableDeclaration", "scope": 2476, "src": "539:13:7", "stateVariable": false, "storageLocation": "memory", "typeDescriptions": {"typeIdentifier": "t_string_memory_ptr", "typeString": "string"}, "typeName": {"id": 2473, "name": "string", "nodeType": "ElementaryTypeName", "src": "539:6:7", "typeDescriptions": {"typeIdentifier": "t_string_storage_ptr", "typeString": "string"}}, "visibility": "internal"}], "src": "538:15:7"}, "scope": 2483, "src": "498:56:7", "stateMutability": "view", "virtual": false, "visibility": "external"}, {"documentation": {"id": 2477, "nodeType": "StructuredDocumentation", "src": "560:65:7", "text": " @dev Returns the decimals places of the token."}, "functionSelector": "313ce567", "id": 2482, "implemented": false, "kind": "function", "modifiers": [], "name": "decimals", "nameLocation": "639:8:7", "nodeType": "FunctionDefinition", "parameters": {"id": 2478, "nodeType": "ParameterList", "parameters": [], "src": "647:2:7"}, "returnParameters": {"id": 2481, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 2480, "mutability": "mutable", "name": "", "nameLocation": "-1:-1:-1", "nodeType": "VariableDeclaration", "scope": 2482, "src": "673:5:7", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint8", "typeString": "uint8"}, "typeName": {"id": 2479, "name": "uint8", "nodeType": "ElementaryTypeName", "src": "673:5:7", "typeDescriptions": {"typeIdentifier": "t_uint8", "typeString": "uint8"}}, "visibility": "internal"}], "src": "672:7:7"}, "scope": 2483, "src": "630:50:7", "stateMutability": "view", "virtual": false, "visibility": "external"}], "scope": 2484, "src": "277:405:7", "usedErrors": []}], "src": "110:573:7"}}, "/Users/vladimirtrifonov/src/playground/solidity/rare-skills/advanced-solidity-bootcamp/fuzzing-with-echidna/bonding-token/lib/openzeppelin-contracts/contracts/utils/Address.sol": {"AST": {"absolutePath": "lib/openzeppelin-contracts/contracts/utils/Address.sol", "exportedSymbols": {"Address": [1615]}, "id": 1616, "license": "MIT", "nodeType": "SourceUnit", "nodes": [{"id": 1287, "literals": ["solidity", "^", "0.8", ".1"], "nodeType": "PragmaDirective", "src": "101:23:8"}, {"abstract": false, "baseContracts": [], "canonicalName": "Address", "contractDependencies": [], "contractKind": "library", "documentation": {"id": 1288, "nodeType": "StructuredDocumentation", "src": "126:67:8", "text": " @dev Collection of functions related to the address type"}, "fullyImplemented": true, "id": 1615, "linearizedBaseContracts": [1615], "name": "Address", "nameLocation": "202:7:8", "nodeType": "ContractDefinition", "nodes": [{"body": {"id": 1302, "nodeType": "Block", "src": "1241:254:8", "statements": [{"expression": {"commonType": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "id": 1300, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"expression": {"expression": {"id": 1296, "name": "account", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1291, "src": "1465:7:8", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "id": 1297, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "code", "nodeType": "MemberAccess", "src": "1465:12:8", "typeDescriptions": {"typeIdentifier": "t_bytes_memory_ptr", "typeString": "bytes memory"}}, "id": 1298, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "length", "nodeType": "MemberAccess", "src": "1465:19:8", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "BinaryOperation", "operator": ">", "rightExpression": {"hexValue": "30", "id": 1299, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "1487:1:8", "typeDescriptions": {"typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0"}, "value": "0"}, "src": "1465:23:8", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "functionReturnParameters": 1295, "id": 1301, "nodeType": "Return", "src": "1458:30:8"}]}, "documentation": {"id": 1289, "nodeType": "StructuredDocumentation", "src": "216:954:8", "text": " @dev Returns true if `account` is a contract.\n [IMPORTANT]\n ====\n It is unsafe to assume that an address for which this function returns\n false is an externally-owned account (EOA) and not a contract.\n Among others, `isContract` will return false for the following\n types of addresses:\n  - an externally-owned account\n  - a contract in construction\n  - an address where a contract will be created\n  - an address where a contract lived, but was destroyed\n ====\n [IMPORTANT]\n ====\n You shouldn't rely on `isContract` to protect against flash loan attacks!\n Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\n like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\n constructor.\n ===="}, "id": 1303, "implemented": true, "kind": "function", "modifiers": [], "name": "isContract", "nameLocation": "1184:10:8", "nodeType": "FunctionDefinition", "parameters": {"id": 1292, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 1291, "mutability": "mutable", "name": "account", "nameLocation": "1203:7:8", "nodeType": "VariableDeclaration", "scope": 1303, "src": "1195:15:8", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}, "typeName": {"id": 1290, "name": "address", "nodeType": "ElementaryTypeName", "src": "1195:7:8", "stateMutability": "nonpayable", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "visibility": "internal"}], "src": "1194:17:8"}, "returnParameters": {"id": 1295, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 1294, "mutability": "mutable", "name": "", "nameLocation": "-1:-1:-1", "nodeType": "VariableDeclaration", "scope": 1303, "src": "1235:4:8", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}, "typeName": {"id": 1293, "name": "bool", "nodeType": "ElementaryTypeName", "src": "1235:4:8", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "visibility": "internal"}], "src": "1234:6:8"}, "scope": 1615, "src": "1175:320:8", "stateMutability": "view", "virtual": false, "visibility": "internal"}, {"body": {"id": 1336, "nodeType": "Block", "src": "2483:241:8", "statements": [{"expression": {"arguments": [{"commonType": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "id": 1318, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"expression": {"arguments": [{"id": 1314, "name": "this", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": -28, "src": "2509:4:8", "typeDescriptions": {"typeIdentifier": "t_contract$_Address_$1615", "typeString": "library Address"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_contract$_Address_$1615", "typeString": "library Address"}], "id": 1313, "isConstant": false, "isLValue": false, "isPure": true, "lValueRequested": false, "nodeType": "ElementaryTypeNameExpression", "src": "2501:7:8", "typeDescriptions": {"typeIdentifier": "t_type$_t_address_$", "typeString": "type(address)"}, "typeName": {"id": 1312, "name": "address", "nodeType": "ElementaryTypeName", "src": "2501:7:8", "typeDescriptions": {}}}, "id": 1315, "isConstant": false, "isLValue": false, "isPure": false, "kind": "typeConversion", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "2501:13:8", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "id": 1316, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "balance", "nodeType": "MemberAccess", "src": "2501:21:8", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "BinaryOperation", "operator": ">=", "rightExpression": {"id": 1317, "name": "amount", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1308, "src": "2526:6:8", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "2501:31:8", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, {"hexValue": "416464726573733a20696e73756666696369656e742062616c616e6365", "id": 1319, "isConstant": false, "isLValue": false, "isPure": true, "kind": "string", "lValueRequested": false, "nodeType": "Literal", "src": "2534:31:8", "typeDescriptions": {"typeIdentifier": "t_stringliteral_5597a22abd0ef5332f8053862eb236db7590f17e2b93a53f63a103becfb561f9", "typeString": "literal_string \"Address: insufficient balance\""}, "value": "Address: insufficient balance"}], "expression": {"argumentTypes": [{"typeIdentifier": "t_bool", "typeString": "bool"}, {"typeIdentifier": "t_stringliteral_5597a22abd0ef5332f8053862eb236db7590f17e2b93a53f63a103becfb561f9", "typeString": "literal_string \"Address: insufficient balance\""}], "id": 1311, "name": "require", "nodeType": "Identifier", "overloadedDeclarations": [-18, -18], "referencedDeclaration": -18, "src": "2493:7:8", "typeDescriptions": {"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$", "typeString": "function (bool,string memory) pure"}}, "id": 1320, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "2493:73:8", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 1321, "nodeType": "ExpressionStatement", "src": "2493:73:8"}, {"assignments": [1323, null], "declarations": [{"constant": false, "id": 1323, "mutability": "mutable", "name": "success", "nameLocation": "2583:7:8", "nodeType": "VariableDeclaration", "scope": 1336, "src": "2578:12:8", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}, "typeName": {"id": 1322, "name": "bool", "nodeType": "ElementaryTypeName", "src": "2578:4:8", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "visibility": "internal"}, null], "id": 1330, "initialValue": {"arguments": [{"hexValue": "", "id": 1328, "isConstant": false, "isLValue": false, "isPure": true, "kind": "string", "lValueRequested": false, "nodeType": "Literal", "src": "2626:2:8", "typeDescriptions": {"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470", "typeString": "literal_string \"\""}, "value": ""}], "expression": {"argumentTypes": [{"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470", "typeString": "literal_string \"\""}], "expression": {"argumentTypes": [{"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470", "typeString": "literal_string \"\""}], "expression": {"id": 1324, "name": "recipient", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1306, "src": "2596:9:8", "typeDescriptions": {"typeIdentifier": "t_address_payable", "typeString": "address payable"}}, "id": 1325, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "call", "nodeType": "MemberAccess", "src": "2596:14:8", "typeDescriptions": {"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$", "typeString": "function (bytes memory) payable returns (bool,bytes memory)"}}, "id": 1327, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "names": ["value"], "nodeType": "FunctionCallOptions", "options": [{"id": 1326, "name": "amount", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1308, "src": "2618:6:8", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "src": "2596:29:8", "typeDescriptions": {"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value", "typeString": "function (bytes memory) payable returns (bool,bytes memory)"}}, "id": 1329, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "2596:33:8", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$", "typeString": "tuple(bool,bytes memory)"}}, "nodeType": "VariableDeclarationStatement", "src": "2577:52:8"}, {"expression": {"arguments": [{"id": 1332, "name": "success", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1323, "src": "2647:7:8", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, {"hexValue": "416464726573733a20756e61626c6520746f2073656e642076616c75652c20726563697069656e74206d61792068617665207265766572746564", "id": 1333, "isConstant": false, "isLValue": false, "isPure": true, "kind": "string", "lValueRequested": false, "nodeType": "Literal", "src": "2656:60:8", "typeDescriptions": {"typeIdentifier": "t_stringliteral_51ddaa38748c0a1144620fb5bfe8edab31ea437571ad591a7734bbfd0429aeae", "typeString": "literal_string \"Address: unable to send value, recipient may have reverted\""}, "value": "Address: unable to send value, recipient may have reverted"}], "expression": {"argumentTypes": [{"typeIdentifier": "t_bool", "typeString": "bool"}, {"typeIdentifier": "t_stringliteral_51ddaa38748c0a1144620fb5bfe8edab31ea437571ad591a7734bbfd0429aeae", "typeString": "literal_string \"Address: unable to send value, recipient may have reverted\""}], "id": 1331, "name": "require", "nodeType": "Identifier", "overloadedDeclarations": [-18, -18], "referencedDeclaration": -18, "src": "2639:7:8", "typeDescriptions": {"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$", "typeString": "function (bool,string memory) pure"}}, "id": 1334, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "2639:78:8", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 1335, "nodeType": "ExpressionStatement", "src": "2639:78:8"}]}, "documentation": {"id": 1304, "nodeType": "StructuredDocumentation", "src": "1501:906:8", "text": " @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n `recipient`, forwarding all available gas and reverting on errors.\n https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n of certain opcodes, possibly making contracts go over the 2300 gas limit\n imposed by `transfer`, making them unable to receive funds via\n `transfer`. {sendValue} removes this limitation.\n https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n IMPORTANT: because control is transferred to `recipient`, care must be\n taken to not create reentrancy vulnerabilities. Consider using\n {ReentrancyGuard} or the\n https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern]."}, "id": 1337, "implemented": true, "kind": "function", "modifiers": [], "name": "sendValue", "nameLocation": "2421:9:8", "nodeType": "FunctionDefinition", "parameters": {"id": 1309, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 1306, "mutability": "mutable", "name": "recipient", "nameLocation": "2447:9:8", "nodeType": "VariableDeclaration", "scope": 1337, "src": "2431:25:8", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_address_payable", "typeString": "address payable"}, "typeName": {"id": 1305, "name": "address", "nodeType": "ElementaryTypeName", "src": "2431:15:8", "stateMutability": "payable", "typeDescriptions": {"typeIdentifier": "t_address_payable", "typeString": "address payable"}}, "visibility": "internal"}, {"constant": false, "id": 1308, "mutability": "mutable", "name": "amount", "nameLocation": "2466:6:8", "nodeType": "VariableDeclaration", "scope": 1337, "src": "2458:14:8", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 1307, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "2458:7:8", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "src": "2430:43:8"}, "returnParameters": {"id": 1310, "nodeType": "ParameterList", "parameters": [], "src": "2483:0:8"}, "scope": 1615, "src": "2412:312:8", "stateMutability": "nonpayable", "virtual": false, "visibility": "internal"}, {"body": {"id": 1354, "nodeType": "Block", "src": "3555:96:8", "statements": [{"expression": {"arguments": [{"id": 1348, "name": "target", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1340, "src": "3594:6:8", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, {"id": 1349, "name": "data", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1342, "src": "3602:4:8", "typeDescriptions": {"typeIdentifier": "t_bytes_memory_ptr", "typeString": "bytes memory"}}, {"hexValue": "30", "id": 1350, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "3608:1:8", "typeDescriptions": {"typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0"}, "value": "0"}, {"hexValue": "416464726573733a206c6f772d6c6576656c2063616c6c206661696c6564", "id": 1351, "isConstant": false, "isLValue": false, "isPure": true, "kind": "string", "lValueRequested": false, "nodeType": "Literal", "src": "3611:32:8", "typeDescriptions": {"typeIdentifier": "t_stringliteral_24d7ab5d382116e64324f19950ca9340b8af1ddeb09a8d026e0a3c6a01dcc9df", "typeString": "literal_string \"Address: low-level call failed\""}, "value": "Address: low-level call failed"}], "expression": {"argumentTypes": [{"typeIdentifier": "t_address", "typeString": "address"}, {"typeIdentifier": "t_bytes_memory_ptr", "typeString": "bytes memory"}, {"typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0"}, {"typeIdentifier": "t_stringliteral_24d7ab5d382116e64324f19950ca9340b8af1ddeb09a8d026e0a3c6a01dcc9df", "typeString": "literal_string \"Address: low-level call failed\""}], "id": 1347, "name": "functionCallWithValue", "nodeType": "Identifier", "overloadedDeclarations": [1395, 1439], "referencedDeclaration": 1439, "src": "3572:21:8", "typeDescriptions": {"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$", "typeString": "function (address,bytes memory,uint256,string memory) returns (bytes memory)"}}, "id": 1352, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "3572:72:8", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_bytes_memory_ptr", "typeString": "bytes memory"}}, "functionReturnParameters": 1346, "id": 1353, "nodeType": "Return", "src": "3565:79:8"}]}, "documentation": {"id": 1338, "nodeType": "StructuredDocumentation", "src": "2730:731:8", "text": " @dev Performs a Solidity function call using a low level `call`. A\n plain `call` is an unsafe replacement for a function call: use this\n function instead.\n If `target` reverts with a revert reason, it is bubbled up by this\n function (like regular Solidity function calls).\n Returns the raw returned data. To convert to the expected return value,\n use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n Requirements:\n - `target` must be a contract.\n - calling `target` with `data` must not revert.\n _Available since v3.1._"}, "id": 1355, "implemented": true, "kind": "function", "modifiers": [], "name": "functionCall", "nameLocation": "3475:12:8", "nodeType": "FunctionDefinition", "parameters": {"id": 1343, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 1340, "mutability": "mutable", "name": "target", "nameLocation": "3496:6:8", "nodeType": "VariableDeclaration", "scope": 1355, "src": "3488:14:8", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}, "typeName": {"id": 1339, "name": "address", "nodeType": "ElementaryTypeName", "src": "3488:7:8", "stateMutability": "nonpayable", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "visibility": "internal"}, {"constant": false, "id": 1342, "mutability": "mutable", "name": "data", "nameLocation": "3517:4:8", "nodeType": "VariableDeclaration", "scope": 1355, "src": "3504:17:8", "stateVariable": false, "storageLocation": "memory", "typeDescriptions": {"typeIdentifier": "t_bytes_memory_ptr", "typeString": "bytes"}, "typeName": {"id": 1341, "name": "bytes", "nodeType": "ElementaryTypeName", "src": "3504:5:8", "typeDescriptions": {"typeIdentifier": "t_bytes_storage_ptr", "typeString": "bytes"}}, "visibility": "internal"}], "src": "3487:35:8"}, "returnParameters": {"id": 1346, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 1345, "mutability": "mutable", "name": "", "nameLocation": "-1:-1:-1", "nodeType": "VariableDeclaration", "scope": 1355, "src": "3541:12:8", "stateVariable": false, "storageLocation": "memory", "typeDescriptions": {"typeIdentifier": "t_bytes_memory_ptr", "typeString": "bytes"}, "typeName": {"id": 1344, "name": "bytes", "nodeType": "ElementaryTypeName", "src": "3541:5:8", "typeDescriptions": {"typeIdentifier": "t_bytes_storage_ptr", "typeString": "bytes"}}, "visibility": "internal"}], "src": "3540:14:8"}, "scope": 1615, "src": "3466:185:8", "stateMutability": "nonpayable", "virtual": false, "visibility": "internal"}, {"body": {"id": 1374, "nodeType": "Block", "src": "4020:76:8", "statements": [{"expression": {"arguments": [{"id": 1368, "name": "target", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1358, "src": "4059:6:8", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, {"id": 1369, "name": "data", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1360, "src": "4067:4:8", "typeDescriptions": {"typeIdentifier": "t_bytes_memory_ptr", "typeString": "bytes memory"}}, {"hexValue": "30", "id": 1370, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "4073:1:8", "typeDescriptions": {"typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0"}, "value": "0"}, {"id": 1371, "name": "errorMessage", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1362, "src": "4076:12:8", "typeDescriptions": {"typeIdentifier": "t_string_memory_ptr", "typeString": "string memory"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_address", "typeString": "address"}, {"typeIdentifier": "t_bytes_memory_ptr", "typeString": "bytes memory"}, {"typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0"}, {"typeIdentifier": "t_string_memory_ptr", "typeString": "string memory"}], "id": 1367, "name": "functionCallWithValue", "nodeType": "Identifier", "overloadedDeclarations": [1395, 1439], "referencedDeclaration": 1439, "src": "4037:21:8", "typeDescriptions": {"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$", "typeString": "function (address,bytes memory,uint256,string memory) returns (bytes memory)"}}, "id": 1372, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "4037:52:8", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_bytes_memory_ptr", "typeString": "bytes memory"}}, "functionReturnParameters": 1366, "id": 1373, "nodeType": "Return", "src": "4030:59:8"}]}, "documentation": {"id": 1356, "nodeType": "StructuredDocumentation", "src": "3657:211:8", "text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\n `errorMessage` as a fallback revert reason when `target` reverts.\n _Available since v3.1._"}, "id": 1375, "implemented": true, "kind": "function", "modifiers": [], "name": "functionCall", "nameLocation": "3882:12:8", "nodeType": "FunctionDefinition", "parameters": {"id": 1363, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 1358, "mutability": "mutable", "name": "target", "nameLocation": "3912:6:8", "nodeType": "VariableDeclaration", "scope": 1375, "src": "3904:14:8", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}, "typeName": {"id": 1357, "name": "address", "nodeType": "ElementaryTypeName", "src": "3904:7:8", "stateMutability": "nonpayable", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "visibility": "internal"}, {"constant": false, "id": 1360, "mutability": "mutable", "name": "data", "nameLocation": "3941:4:8", "nodeType": "VariableDeclaration", "scope": 1375, "src": "3928:17:8", "stateVariable": false, "storageLocation": "memory", "typeDescriptions": {"typeIdentifier": "t_bytes_memory_ptr", "typeString": "bytes"}, "typeName": {"id": 1359, "name": "bytes", "nodeType": "ElementaryTypeName", "src": "3928:5:8", "typeDescriptions": {"typeIdentifier": "t_bytes_storage_ptr", "typeString": "bytes"}}, "visibility": "internal"}, {"constant": false, "id": 1362, "mutability": "mutable", "name": "errorMessage", "nameLocation": "3969:12:8", "nodeType": "VariableDeclaration", "scope": 1375, "src": "3955:26:8", "stateVariable": false, "storageLocation": "memory", "typeDescriptions": {"typeIdentifier": "t_string_memory_ptr", "typeString": "string"}, "typeName": {"id": 1361, "name": "string", "nodeType": "ElementaryTypeName", "src": "3955:6:8", "typeDescriptions": {"typeIdentifier": "t_string_storage_ptr", "typeString": "string"}}, "visibility": "internal"}], "src": "3894:93:8"}, "returnParameters": {"id": 1366, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 1365, "mutability": "mutable", "name": "", "nameLocation": "-1:-1:-1", "nodeType": "VariableDeclaration", "scope": 1375, "src": "4006:12:8", "stateVariable": false, "storageLocation": "memory", "typeDescriptions": {"typeIdentifier": "t_bytes_memory_ptr", "typeString": "bytes"}, "typeName": {"id": 1364, "name": "bytes", "nodeType": "ElementaryTypeName", "src": "4006:5:8", "typeDescriptions": {"typeIdentifier": "t_bytes_storage_ptr", "typeString": "bytes"}}, "visibility": "internal"}], "src": "4005:14:8"}, "scope": 1615, "src": "3873:223:8", "stateMutability": "nonpayable", "virtual": false, "visibility": "internal"}, {"body": {"id": 1394, "nodeType": "Block", "src": "4601:111:8", "statements": [{"expression": {"arguments": [{"id": 1388, "name": "target", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1378, "src": "4640:6:8", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, {"id": 1389, "name": "data", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1380, "src": "4648:4:8", "typeDescriptions": {"typeIdentifier": "t_bytes_memory_ptr", "typeString": "bytes memory"}}, {"id": 1390, "name": "value", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1382, "src": "4654:5:8", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, {"hexValue": "416464726573733a206c6f772d6c6576656c2063616c6c20776974682076616c7565206661696c6564", "id": 1391, "isConstant": false, "isLValue": false, "isPure": true, "kind": "string", "lValueRequested": false, "nodeType": "Literal", "src": "4661:43:8", "typeDescriptions": {"typeIdentifier": "t_stringliteral_88a4a0b5e975840320a0475d4027005235904fdb5ece94df156f3d717cb2dbfc", "typeString": "literal_string \"Address: low-level call with value failed\""}, "value": "Address: low-level call with value failed"}], "expression": {"argumentTypes": [{"typeIdentifier": "t_address", "typeString": "address"}, {"typeIdentifier": "t_bytes_memory_ptr", "typeString": "bytes memory"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}, {"typeIdentifier": "t_stringliteral_88a4a0b5e975840320a0475d4027005235904fdb5ece94df156f3d717cb2dbfc", "typeString": "literal_string \"Address: low-level call with value failed\""}], "id": 1387, "name": "functionCallWithValue", "nodeType": "Identifier", "overloadedDeclarations": [1395, 1439], "referencedDeclaration": 1439, "src": "4618:21:8", "typeDescriptions": {"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$", "typeString": "function (address,bytes memory,uint256,string memory) returns (bytes memory)"}}, "id": 1392, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "4618:87:8", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_bytes_memory_ptr", "typeString": "bytes memory"}}, "functionReturnParameters": 1386, "id": 1393, "nodeType": "Return", "src": "4611:94:8"}]}, "documentation": {"id": 1376, "nodeType": "StructuredDocumentation", "src": "4102:351:8", "text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but also transferring `value` wei to `target`.\n Requirements:\n - the calling contract must have an ETH balance of at least `value`.\n - the called Solidity function must be `payable`.\n _Available since v3.1._"}, "id": 1395, "implemented": true, "kind": "function", "modifiers": [], "name": "functionCallWithValue", "nameLocation": "4467:21:8", "nodeType": "FunctionDefinition", "parameters": {"id": 1383, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 1378, "mutability": "mutable", "name": "target", "nameLocation": "4506:6:8", "nodeType": "VariableDeclaration", "scope": 1395, "src": "4498:14:8", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}, "typeName": {"id": 1377, "name": "address", "nodeType": "ElementaryTypeName", "src": "4498:7:8", "stateMutability": "nonpayable", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "visibility": "internal"}, {"constant": false, "id": 1380, "mutability": "mutable", "name": "data", "nameLocation": "4535:4:8", "nodeType": "VariableDeclaration", "scope": 1395, "src": "4522:17:8", "stateVariable": false, "storageLocation": "memory", "typeDescriptions": {"typeIdentifier": "t_bytes_memory_ptr", "typeString": "bytes"}, "typeName": {"id": 1379, "name": "bytes", "nodeType": "ElementaryTypeName", "src": "4522:5:8", "typeDescriptions": {"typeIdentifier": "t_bytes_storage_ptr", "typeString": "bytes"}}, "visibility": "internal"}, {"constant": false, "id": 1382, "mutability": "mutable", "name": "value", "nameLocation": "4557:5:8", "nodeType": "VariableDeclaration", "scope": 1395, "src": "4549:13:8", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 1381, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "4549:7:8", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "src": "4488:80:8"}, "returnParameters": {"id": 1386, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 1385, "mutability": "mutable", "name": "", "nameLocation": "-1:-1:-1", "nodeType": "VariableDeclaration", "scope": 1395, "src": "4587:12:8", "stateVariable": false, "storageLocation": "memory", "typeDescriptions": {"typeIdentifier": "t_bytes_memory_ptr", "typeString": "bytes"}, "typeName": {"id": 1384, "name": "bytes", "nodeType": "ElementaryTypeName", "src": "4587:5:8", "typeDescriptions": {"typeIdentifier": "t_bytes_storage_ptr", "typeString": "bytes"}}, "visibility": "internal"}], "src": "4586:14:8"}, "scope": 1615, "src": "4458:254:8", "stateMutability": "nonpayable", "virtual": false, "visibility": "internal"}, {"body": {"id": 1438, "nodeType": "Block", "src": "5139:267:8", "statements": [{"expression": {"arguments": [{"commonType": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "id": 1416, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"expression": {"arguments": [{"id": 1412, "name": "this", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": -28, "src": "5165:4:8", "typeDescriptions": {"typeIdentifier": "t_contract$_Address_$1615", "typeString": "library Address"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_contract$_Address_$1615", "typeString": "library Address"}], "id": 1411, "isConstant": false, "isLValue": false, "isPure": true, "lValueRequested": false, "nodeType": "ElementaryTypeNameExpression", "src": "5157:7:8", "typeDescriptions": {"typeIdentifier": "t_type$_t_address_$", "typeString": "type(address)"}, "typeName": {"id": 1410, "name": "address", "nodeType": "ElementaryTypeName", "src": "5157:7:8", "typeDescriptions": {}}}, "id": 1413, "isConstant": false, "isLValue": false, "isPure": false, "kind": "typeConversion", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "5157:13:8", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "id": 1414, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "balance", "nodeType": "MemberAccess", "src": "5157:21:8", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "BinaryOperation", "operator": ">=", "rightExpression": {"id": 1415, "name": "value", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1402, "src": "5182:5:8", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "5157:30:8", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, {"hexValue": "416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c6c", "id": 1417, "isConstant": false, "isLValue": false, "isPure": true, "kind": "string", "lValueRequested": false, "nodeType": "Literal", "src": "5189:40:8", "typeDescriptions": {"typeIdentifier": "t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c", "typeString": "literal_string \"Address: insufficient balance for call\""}, "value": "Address: insufficient balance for call"}], "expression": {"argumentTypes": [{"typeIdentifier": "t_bool", "typeString": "bool"}, {"typeIdentifier": "t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c", "typeString": "literal_string \"Address: insufficient balance for call\""}], "id": 1409, "name": "require", "nodeType": "Identifier", "overloadedDeclarations": [-18, -18], "referencedDeclaration": -18, "src": "5149:7:8", "typeDescriptions": {"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$", "typeString": "function (bool,string memory) pure"}}, "id": 1418, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "5149:81:8", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 1419, "nodeType": "ExpressionStatement", "src": "5149:81:8"}, {"assignments": [1421, 1423], "declarations": [{"constant": false, "id": 1421, "mutability": "mutable", "name": "success", "nameLocation": "5246:7:8", "nodeType": "VariableDeclaration", "scope": 1438, "src": "5241:12:8", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}, "typeName": {"id": 1420, "name": "bool", "nodeType": "ElementaryTypeName", "src": "5241:4:8", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "visibility": "internal"}, {"constant": false, "id": 1423, "mutability": "mutable", "name": "returndata", "nameLocation": "5268:10:8", "nodeType": "VariableDeclaration", "scope": 1438, "src": "5255:23:8", "stateVariable": false, "storageLocation": "memory", "typeDescriptions": {"typeIdentifier": "t_bytes_memory_ptr", "typeString": "bytes"}, "typeName": {"id": 1422, "name": "bytes", "nodeType": "ElementaryTypeName", "src": "5255:5:8", "typeDescriptions": {"typeIdentifier": "t_bytes_storage_ptr", "typeString": "bytes"}}, "visibility": "internal"}], "id": 1430, "initialValue": {"arguments": [{"id": 1428, "name": "data", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1400, "src": "5308:4:8", "typeDescriptions": {"typeIdentifier": "t_bytes_memory_ptr", "typeString": "bytes memory"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_bytes_memory_ptr", "typeString": "bytes memory"}], "expression": {"argumentTypes": [{"typeIdentifier": "t_bytes_memory_ptr", "typeString": "bytes memory"}], "expression": {"id": 1424, "name": "target", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1398, "src": "5282:6:8", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "id": 1425, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "call", "nodeType": "MemberAccess", "src": "5282:11:8", "typeDescriptions": {"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$", "typeString": "function (bytes memory) payable returns (bool,bytes memory)"}}, "id": 1427, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "names": ["value"], "nodeType": "FunctionCallOptions", "options": [{"id": 1426, "name": "value", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1402, "src": "5301:5:8", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "src": "5282:25:8", "typeDescriptions": {"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value", "typeString": "function (bytes memory) payable returns (bool,bytes memory)"}}, "id": 1429, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "5282:31:8", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$", "typeString": "tuple(bool,bytes memory)"}}, "nodeType": "VariableDeclarationStatement", "src": "5240:73:8"}, {"expression": {"arguments": [{"id": 1432, "name": "target", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1398, "src": "5357:6:8", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, {"id": 1433, "name": "success", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1421, "src": "5365:7:8", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, {"id": 1434, "name": "returndata", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1423, "src": "5374:10:8", "typeDescriptions": {"typeIdentifier": "t_bytes_memory_ptr", "typeString": "bytes memory"}}, {"id": 1435, "name": "errorMessage", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1404, "src": "5386:12:8", "typeDescriptions": {"typeIdentifier": "t_string_memory_ptr", "typeString": "string memory"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_address", "typeString": "address"}, {"typeIdentifier": "t_bool", "typeString": "bool"}, {"typeIdentifier": "t_bytes_memory_ptr", "typeString": "bytes memory"}, {"typeIdentifier": "t_string_memory_ptr", "typeString": "string memory"}], "id": 1431, "name": "verifyCallResultFromTarget", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1570, "src": "5330:26:8", "typeDescriptions": {"typeIdentifier": "t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$", "typeString": "function (address,bool,bytes memory,string memory) view returns (bytes memory)"}}, "id": 1436, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "5330:69:8", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_bytes_memory_ptr", "typeString": "bytes memory"}}, "functionReturnParameters": 1408, "id": 1437, "nodeType": "Return", "src": "5323:76:8"}]}, "documentation": {"id": 1396, "nodeType": "StructuredDocumentation", "src": "4718:237:8", "text": " @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\n with `errorMessage` as a fallback revert reason when `target` reverts.\n _Available since v3.1._"}, "id": 1439, "implemented": true, "kind": "function", "modifiers": [], "name": "functionCallWithValue", "nameLocation": "4969:21:8", "nodeType": "FunctionDefinition", "parameters": {"id": 1405, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 1398, "mutability": "mutable", "name": "target", "nameLocation": "5008:6:8", "nodeType": "VariableDeclaration", "scope": 1439, "src": "5000:14:8", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}, "typeName": {"id": 1397, "name": "address", "nodeType": "ElementaryTypeName", "src": "5000:7:8", "stateMutability": "nonpayable", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "visibility": "internal"}, {"constant": false, "id": 1400, "mutability": "mutable", "name": "data", "nameLocation": "5037:4:8", "nodeType": "VariableDeclaration", "scope": 1439, "src": "5024:17:8", "stateVariable": false, "storageLocation": "memory", "typeDescriptions": {"typeIdentifier": "t_bytes_memory_ptr", "typeString": "bytes"}, "typeName": {"id": 1399, "name": "bytes", "nodeType": "ElementaryTypeName", "src": "5024:5:8", "typeDescriptions": {"typeIdentifier": "t_bytes_storage_ptr", "typeString": "bytes"}}, "visibility": "internal"}, {"constant": false, "id": 1402, "mutability": "mutable", "name": "value", "nameLocation": "5059:5:8", "nodeType": "VariableDeclaration", "scope": 1439, "src": "5051:13:8", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 1401, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "5051:7:8", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}, {"constant": false, "id": 1404, "mutability": "mutable", "name": "errorMessage", "nameLocation": "5088:12:8", "nodeType": "VariableDeclaration", "scope": 1439, "src": "5074:26:8", "stateVariable": false, "storageLocation": "memory", "typeDescriptions": {"typeIdentifier": "t_string_memory_ptr", "typeString": "string"}, "typeName": {"id": 1403, "name": "string", "nodeType": "ElementaryTypeName", "src": "5074:6:8", "typeDescriptions": {"typeIdentifier": "t_string_storage_ptr", "typeString": "string"}}, "visibility": "internal"}], "src": "4990:116:8"}, "returnParameters": {"id": 1408, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 1407, "mutability": "mutable", "name": "", "nameLocation": "-1:-1:-1", "nodeType": "VariableDeclaration", "scope": 1439, "src": "5125:12:8", "stateVariable": false, "storageLocation": "memory", "typeDescriptions": {"typeIdentifier": "t_bytes_memory_ptr", "typeString": "bytes"}, "typeName": {"id": 1406, "name": "bytes", "nodeType": "ElementaryTypeName", "src": "5125:5:8", "typeDescriptions": {"typeIdentifier": "t_bytes_storage_ptr", "typeString": "bytes"}}, "visibility": "internal"}], "src": "5124:14:8"}, "scope": 1615, "src": "4960:446:8", "stateMutability": "nonpayable", "virtual": false, "visibility": "internal"}, {"body": {"id": 1455, "nodeType": "Block", "src": "5683:97:8", "statements": [{"expression": {"arguments": [{"id": 1450, "name": "target", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1442, "src": "5719:6:8", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, {"id": 1451, "name": "data", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1444, "src": "5727:4:8", "typeDescriptions": {"typeIdentifier": "t_bytes_memory_ptr", "typeString": "bytes memory"}}, {"hexValue": "416464726573733a206c6f772d6c6576656c207374617469632063616c6c206661696c6564", "id": 1452, "isConstant": false, "isLValue": false, "isPure": true, "kind": "string", "lValueRequested": false, "nodeType": "Literal", "src": "5733:39:8", "typeDescriptions": {"typeIdentifier": "t_stringliteral_90ec82aa826a536a4cbfae44ecfa384680faa9a4b77344bce96aa761ad904df0", "typeString": "literal_string \"Address: low-level static call failed\""}, "value": "Address: low-level static call failed"}], "expression": {"argumentTypes": [{"typeIdentifier": "t_address", "typeString": "address"}, {"typeIdentifier": "t_bytes_memory_ptr", "typeString": "bytes memory"}, {"typeIdentifier": "t_stringliteral_90ec82aa826a536a4cbfae44ecfa384680faa9a4b77344bce96aa761ad904df0", "typeString": "literal_string \"Address: low-level static call failed\""}], "id": 1449, "name": "functionStaticCall", "nodeType": "Identifier", "overloadedDeclarations": [1456, 1485], "referencedDeclaration": 1485, "src": "5700:18:8", "typeDescriptions": {"typeIdentifier": "t_function_internal_view$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$", "typeString": "function (address,bytes memory,string memory) view returns (bytes memory)"}}, "id": 1453, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "5700:73:8", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_bytes_memory_ptr", "typeString": "bytes memory"}}, "functionReturnParameters": 1448, "id": 1454, "nodeType": "Return", "src": "5693:80:8"}]}, "documentation": {"id": 1440, "nodeType": "StructuredDocumentation", "src": "5412:166:8", "text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a static call.\n _Available since v3.3._"}, "id": 1456, "implemented": true, "kind": "function", "modifiers": [], "name": "functionStaticCall", "nameLocation": "5592:18:8", "nodeType": "FunctionDefinition", "parameters": {"id": 1445, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 1442, "mutability": "mutable", "name": "target", "nameLocation": "5619:6:8", "nodeType": "VariableDeclaration", "scope": 1456, "src": "5611:14:8", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}, "typeName": {"id": 1441, "name": "address", "nodeType": "ElementaryTypeName", "src": "5611:7:8", "stateMutability": "nonpayable", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "visibility": "internal"}, {"constant": false, "id": 1444, "mutability": "mutable", "name": "data", "nameLocation": "5640:4:8", "nodeType": "VariableDeclaration", "scope": 1456, "src": "5627:17:8", "stateVariable": false, "storageLocation": "memory", "typeDescriptions": {"typeIdentifier": "t_bytes_memory_ptr", "typeString": "bytes"}, "typeName": {"id": 1443, "name": "bytes", "nodeType": "ElementaryTypeName", "src": "5627:5:8", "typeDescriptions": {"typeIdentifier": "t_bytes_storage_ptr", "typeString": "bytes"}}, "visibility": "internal"}], "src": "5610:35:8"}, "returnParameters": {"id": 1448, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 1447, "mutability": "mutable", "name": "", "nameLocation": "-1:-1:-1", "nodeType": "VariableDeclaration", "scope": 1456, "src": "5669:12:8", "stateVariable": false, "storageLocation": "memory", "typeDescriptions": {"typeIdentifier": "t_bytes_memory_ptr", "typeString": "bytes"}, "typeName": {"id": 1446, "name": "bytes", "nodeType": "ElementaryTypeName", "src": "5669:5:8", "typeDescriptions": {"typeIdentifier": "t_bytes_storage_ptr", "typeString": "bytes"}}, "visibility": "internal"}], "src": "5668:14:8"}, "scope": 1615, "src": "5583:197:8", "stateMutability": "view", "virtual": false, "visibility": "internal"}, {"body": {"id": 1484, "nodeType": "Block", "src": "6122:168:8", "statements": [{"assignments": [1469, 1471], "declarations": [{"constant": false, "id": 1469, "mutability": "mutable", "name": "success", "nameLocation": "6138:7:8", "nodeType": "VariableDeclaration", "scope": 1484, "src": "6133:12:8", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}, "typeName": {"id": 1468, "name": "bool", "nodeType": "ElementaryTypeName", "src": "6133:4:8", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "visibility": "internal"}, {"constant": false, "id": 1471, "mutability": "mutable", "name": "returndata", "nameLocation": "6160:10:8", "nodeType": "VariableDeclaration", "scope": 1484, "src": "6147:23:8", "stateVariable": false, "storageLocation": "memory", "typeDescriptions": {"typeIdentifier": "t_bytes_memory_ptr", "typeString": "bytes"}, "typeName": {"id": 1470, "name": "bytes", "nodeType": "ElementaryTypeName", "src": "6147:5:8", "typeDescriptions": {"typeIdentifier": "t_bytes_storage_ptr", "typeString": "bytes"}}, "visibility": "internal"}], "id": 1476, "initialValue": {"arguments": [{"id": 1474, "name": "data", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1461, "src": "6192:4:8", "typeDescriptions": {"typeIdentifier": "t_bytes_memory_ptr", "typeString": "bytes memory"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_bytes_memory_ptr", "typeString": "bytes memory"}], "expression": {"id": 1472, "name": "target", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1459, "src": "6174:6:8", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "id": 1473, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "staticcall", "nodeType": "MemberAccess", "src": "6174:17:8", "typeDescriptions": {"typeIdentifier": "t_function_barestaticcall_view$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$", "typeString": "function (bytes memory) view returns (bool,bytes memory)"}}, "id": 1475, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "6174:23:8", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$", "typeString": "tuple(bool,bytes memory)"}}, "nodeType": "VariableDeclarationStatement", "src": "6132:65:8"}, {"expression": {"arguments": [{"id": 1478, "name": "target", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1459, "src": "6241:6:8", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, {"id": 1479, "name": "success", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1469, "src": "6249:7:8", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, {"id": 1480, "name": "returndata", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1471, "src": "6258:10:8", "typeDescriptions": {"typeIdentifier": "t_bytes_memory_ptr", "typeString": "bytes memory"}}, {"id": 1481, "name": "errorMessage", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1463, "src": "6270:12:8", "typeDescriptions": {"typeIdentifier": "t_string_memory_ptr", "typeString": "string memory"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_address", "typeString": "address"}, {"typeIdentifier": "t_bool", "typeString": "bool"}, {"typeIdentifier": "t_bytes_memory_ptr", "typeString": "bytes memory"}, {"typeIdentifier": "t_string_memory_ptr", "typeString": "string memory"}], "id": 1477, "name": "verifyCallResultFromTarget", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1570, "src": "6214:26:8", "typeDescriptions": {"typeIdentifier": "t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$", "typeString": "function (address,bool,bytes memory,string memory) view returns (bytes memory)"}}, "id": 1482, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "6214:69:8", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_bytes_memory_ptr", "typeString": "bytes memory"}}, "functionReturnParameters": 1467, "id": 1483, "nodeType": "Return", "src": "6207:76:8"}]}, "documentation": {"id": 1457, "nodeType": "StructuredDocumentation", "src": "5786:173:8", "text": " @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n but performing a static call.\n _Available since v3.3._"}, "id": 1485, "implemented": true, "kind": "function", "modifiers": [], "name": "functionStaticCall", "nameLocation": "5973:18:8", "nodeType": "FunctionDefinition", "parameters": {"id": 1464, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 1459, "mutability": "mutable", "name": "target", "nameLocation": "6009:6:8", "nodeType": "VariableDeclaration", "scope": 1485, "src": "6001:14:8", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}, "typeName": {"id": 1458, "name": "address", "nodeType": "ElementaryTypeName", "src": "6001:7:8", "stateMutability": "nonpayable", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "visibility": "internal"}, {"constant": false, "id": 1461, "mutability": "mutable", "name": "data", "nameLocation": "6038:4:8", "nodeType": "VariableDeclaration", "scope": 1485, "src": "6025:17:8", "stateVariable": false, "storageLocation": "memory", "typeDescriptions": {"typeIdentifier": "t_bytes_memory_ptr", "typeString": "bytes"}, "typeName": {"id": 1460, "name": "bytes", "nodeType": "ElementaryTypeName", "src": "6025:5:8", "typeDescriptions": {"typeIdentifier": "t_bytes_storage_ptr", "typeString": "bytes"}}, "visibility": "internal"}, {"constant": false, "id": 1463, "mutability": "mutable", "name": "errorMessage", "nameLocation": "6066:12:8", "nodeType": "VariableDeclaration", "scope": 1485, "src": "6052:26:8", "stateVariable": false, "storageLocation": "memory", "typeDescriptions": {"typeIdentifier": "t_string_memory_ptr", "typeString": "string"}, "typeName": {"id": 1462, "name": "string", "nodeType": "ElementaryTypeName", "src": "6052:6:8", "typeDescriptions": {"typeIdentifier": "t_string_storage_ptr", "typeString": "string"}}, "visibility": "internal"}], "src": "5991:93:8"}, "returnParameters": {"id": 1467, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 1466, "mutability": "mutable", "name": "", "nameLocation": "-1:-1:-1", "nodeType": "VariableDeclaration", "scope": 1485, "src": "6108:12:8", "stateVariable": false, "storageLocation": "memory", "typeDescriptions": {"typeIdentifier": "t_bytes_memory_ptr", "typeString": "bytes"}, "typeName": {"id": 1465, "name": "bytes", "nodeType": "ElementaryTypeName", "src": "6108:5:8", "typeDescriptions": {"typeIdentifier": "t_bytes_storage_ptr", "typeString": "bytes"}}, "visibility": "internal"}], "src": "6107:14:8"}, "scope": 1615, "src": "5964:326:8", "stateMutability": "view", "virtual": false, "visibility": "internal"}, {"body": {"id": 1501, "nodeType": "Block", "src": "6566:101:8", "statements": [{"expression": {"arguments": [{"id": 1496, "name": "target", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1488, "src": "6604:6:8", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, {"id": 1497, "name": "data", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1490, "src": "6612:4:8", "typeDescriptions": {"typeIdentifier": "t_bytes_memory_ptr", "typeString": "bytes memory"}}, {"hexValue": "416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564", "id": 1498, "isConstant": false, "isLValue": false, "isPure": true, "kind": "string", "lValueRequested": false, "nodeType": "Literal", "src": "6618:41:8", "typeDescriptions": {"typeIdentifier": "t_stringliteral_9fdcd12e4b726339b32a442b0a448365d5d85c96b2d2cff917b4f66c63110398", "typeString": "literal_string \"Address: low-level delegate call failed\""}, "value": "Address: low-level delegate call failed"}], "expression": {"argumentTypes": [{"typeIdentifier": "t_address", "typeString": "address"}, {"typeIdentifier": "t_bytes_memory_ptr", "typeString": "bytes memory"}, {"typeIdentifier": "t_stringliteral_9fdcd12e4b726339b32a442b0a448365d5d85c96b2d2cff917b4f66c63110398", "typeString": "literal_string \"Address: low-level delegate call failed\""}], "id": 1495, "name": "functionDelegateCall", "nodeType": "Identifier", "overloadedDeclarations": [1502, 1531], "referencedDeclaration": 1531, "src": "6583:20:8", "typeDescriptions": {"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$", "typeString": "function (address,bytes memory,string memory) returns (bytes memory)"}}, "id": 1499, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "6583:77:8", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_bytes_memory_ptr", "typeString": "bytes memory"}}, "functionReturnParameters": 1494, "id": 1500, "nodeType": "Return", "src": "6576:84:8"}]}, "documentation": {"id": 1486, "nodeType": "StructuredDocumentation", "src": "6296:168:8", "text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a delegate call.\n _Available since v3.4._"}, "id": 1502, "implemented": true, "kind": "function", "modifiers": [], "name": "functionDelegateCall", "nameLocation": "6478:20:8", "nodeType": "FunctionDefinition", "parameters": {"id": 1491, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 1488, "mutability": "mutable", "name": "target", "nameLocation": "6507:6:8", "nodeType": "VariableDeclaration", "scope": 1502, "src": "6499:14:8", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}, "typeName": {"id": 1487, "name": "address", "nodeType": "ElementaryTypeName", "src": "6499:7:8", "stateMutability": "nonpayable", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "visibility": "internal"}, {"constant": false, "id": 1490, "mutability": "mutable", "name": "data", "nameLocation": "6528:4:8", "nodeType": "VariableDeclaration", "scope": 1502, "src": "6515:17:8", "stateVariable": false, "storageLocation": "memory", "typeDescriptions": {"typeIdentifier": "t_bytes_memory_ptr", "typeString": "bytes"}, "typeName": {"id": 1489, "name": "bytes", "nodeType": "ElementaryTypeName", "src": "6515:5:8", "typeDescriptions": {"typeIdentifier": "t_bytes_storage_ptr", "typeString": "bytes"}}, "visibility": "internal"}], "src": "6498:35:8"}, "returnParameters": {"id": 1494, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 1493, "mutability": "mutable", "name": "", "nameLocation": "-1:-1:-1", "nodeType": "VariableDeclaration", "scope": 1502, "src": "6552:12:8", "stateVariable": false, "storageLocation": "memory", "typeDescriptions": {"typeIdentifier": "t_bytes_memory_ptr", "typeString": "bytes"}, "typeName": {"id": 1492, "name": "bytes", "nodeType": "ElementaryTypeName", "src": "6552:5:8", "typeDescriptions": {"typeIdentifier": "t_bytes_storage_ptr", "typeString": "bytes"}}, "visibility": "internal"}], "src": "6551:14:8"}, "scope": 1615, "src": "6469:198:8", "stateMutability": "nonpayable", "virtual": false, "visibility": "internal"}, {"body": {"id": 1530, "nodeType": "Block", "src": "7008:170:8", "statements": [{"assignments": [1515, 1517], "declarations": [{"constant": false, "id": 1515, "mutability": "mutable", "name": "success", "nameLocation": "7024:7:8", "nodeType": "VariableDeclaration", "scope": 1530, "src": "7019:12:8", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}, "typeName": {"id": 1514, "name": "bool", "nodeType": "ElementaryTypeName", "src": "7019:4:8", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "visibility": "internal"}, {"constant": false, "id": 1517, "mutability": "mutable", "name": "returndata", "nameLocation": "7046:10:8", "nodeType": "VariableDeclaration", "scope": 1530, "src": "7033:23:8", "stateVariable": false, "storageLocation": "memory", "typeDescriptions": {"typeIdentifier": "t_bytes_memory_ptr", "typeString": "bytes"}, "typeName": {"id": 1516, "name": "bytes", "nodeType": "ElementaryTypeName", "src": "7033:5:8", "typeDescriptions": {"typeIdentifier": "t_bytes_storage_ptr", "typeString": "bytes"}}, "visibility": "internal"}], "id": 1522, "initialValue": {"arguments": [{"id": 1520, "name": "data", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1507, "src": "7080:4:8", "typeDescriptions": {"typeIdentifier": "t_bytes_memory_ptr", "typeString": "bytes memory"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_bytes_memory_ptr", "typeString": "bytes memory"}], "expression": {"id": 1518, "name": "target", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1505, "src": "7060:6:8", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "id": 1519, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "delegatecall", "nodeType": "MemberAccess", "src": "7060:19:8", "typeDescriptions": {"typeIdentifier": "t_function_baredelegatecall_nonpayable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$", "typeString": "function (bytes memory) returns (bool,bytes memory)"}}, "id": 1521, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "7060:25:8", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$", "typeString": "tuple(bool,bytes memory)"}}, "nodeType": "VariableDeclarationStatement", "src": "7018:67:8"}, {"expression": {"arguments": [{"id": 1524, "name": "target", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1505, "src": "7129:6:8", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, {"id": 1525, "name": "success", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1515, "src": "7137:7:8", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, {"id": 1526, "name": "returndata", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1517, "src": "7146:10:8", "typeDescriptions": {"typeIdentifier": "t_bytes_memory_ptr", "typeString": "bytes memory"}}, {"id": 1527, "name": "errorMessage", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1509, "src": "7158:12:8", "typeDescriptions": {"typeIdentifier": "t_string_memory_ptr", "typeString": "string memory"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_address", "typeString": "address"}, {"typeIdentifier": "t_bool", "typeString": "bool"}, {"typeIdentifier": "t_bytes_memory_ptr", "typeString": "bytes memory"}, {"typeIdentifier": "t_string_memory_ptr", "typeString": "string memory"}], "id": 1523, "name": "verifyCallResultFromTarget", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1570, "src": "7102:26:8", "typeDescriptions": {"typeIdentifier": "t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$", "typeString": "function (address,bool,bytes memory,string memory) view returns (bytes memory)"}}, "id": 1528, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "7102:69:8", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_bytes_memory_ptr", "typeString": "bytes memory"}}, "functionReturnParameters": 1513, "id": 1529, "nodeType": "Return", "src": "7095:76:8"}]}, "documentation": {"id": 1503, "nodeType": "StructuredDocumentation", "src": "6673:175:8", "text": " @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n but performing a delegate call.\n _Available since v3.4._"}, "id": 1531, "implemented": true, "kind": "function", "modifiers": [], "name": "functionDelegateCall", "nameLocation": "6862:20:8", "nodeType": "FunctionDefinition", "parameters": {"id": 1510, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 1505, "mutability": "mutable", "name": "target", "nameLocation": "6900:6:8", "nodeType": "VariableDeclaration", "scope": 1531, "src": "6892:14:8", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}, "typeName": {"id": 1504, "name": "address", "nodeType": "ElementaryTypeName", "src": "6892:7:8", "stateMutability": "nonpayable", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "visibility": "internal"}, {"constant": false, "id": 1507, "mutability": "mutable", "name": "data", "nameLocation": "6929:4:8", "nodeType": "VariableDeclaration", "scope": 1531, "src": "6916:17:8", "stateVariable": false, "storageLocation": "memory", "typeDescriptions": {"typeIdentifier": "t_bytes_memory_ptr", "typeString": "bytes"}, "typeName": {"id": 1506, "name": "bytes", "nodeType": "ElementaryTypeName", "src": "6916:5:8", "typeDescriptions": {"typeIdentifier": "t_bytes_storage_ptr", "typeString": "bytes"}}, "visibility": "internal"}, {"constant": false, "id": 1509, "mutability": "mutable", "name": "errorMessage", "nameLocation": "6957:12:8", "nodeType": "VariableDeclaration", "scope": 1531, "src": "6943:26:8", "stateVariable": false, "storageLocation": "memory", "typeDescriptions": {"typeIdentifier": "t_string_memory_ptr", "typeString": "string"}, "typeName": {"id": 1508, "name": "string", "nodeType": "ElementaryTypeName", "src": "6943:6:8", "typeDescriptions": {"typeIdentifier": "t_string_storage_ptr", "typeString": "string"}}, "visibility": "internal"}], "src": "6882:93:8"}, "returnParameters": {"id": 1513, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 1512, "mutability": "mutable", "name": "", "nameLocation": "-1:-1:-1", "nodeType": "VariableDeclaration", "scope": 1531, "src": "6994:12:8", "stateVariable": false, "storageLocation": "memory", "typeDescriptions": {"typeIdentifier": "t_bytes_memory_ptr", "typeString": "bytes"}, "typeName": {"id": 1511, "name": "bytes", "nodeType": "ElementaryTypeName", "src": "6994:5:8", "typeDescriptions": {"typeIdentifier": "t_bytes_storage_ptr", "typeString": "bytes"}}, "visibility": "internal"}], "src": "6993:14:8"}, "scope": 1615, "src": "6853:325:8", "stateMutability": "nonpayable", "virtual": false, "visibility": "internal"}, {"body": {"id": 1569, "nodeType": "Block", "src": "7660:434:8", "statements": [{"condition": {"id": 1545, "name": "success", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1536, "src": "7674:7:8", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "falseBody": {"id": 1567, "nodeType": "Block", "src": "8030:58:8", "statements": [{"expression": {"arguments": [{"id": 1563, "name": "returndata", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1538, "src": "8052:10:8", "typeDescriptions": {"typeIdentifier": "t_bytes_memory_ptr", "typeString": "bytes memory"}}, {"id": 1564, "name": "errorMessage", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1540, "src": "8064:12:8", "typeDescriptions": {"typeIdentifier": "t_string_memory_ptr", "typeString": "string memory"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_bytes_memory_ptr", "typeString": "bytes memory"}, {"typeIdentifier": "t_string_memory_ptr", "typeString": "string memory"}], "id": 1562, "name": "_revert", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1614, "src": "8044:7:8", "typeDescriptions": {"typeIdentifier": "t_function_internal_pure$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$__$", "typeString": "function (bytes memory,string memory) pure"}}, "id": 1565, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "8044:33:8", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 1566, "nodeType": "ExpressionStatement", "src": "8044:33:8"}]}, "id": 1568, "nodeType": "IfStatement", "src": "7670:418:8", "trueBody": {"id": 1561, "nodeType": "Block", "src": "7683:341:8", "statements": [{"condition": {"commonType": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "id": 1549, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"expression": {"id": 1546, "name": "returndata", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1538, "src": "7701:10:8", "typeDescriptions": {"typeIdentifier": "t_bytes_memory_ptr", "typeString": "bytes memory"}}, "id": 1547, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "length", "nodeType": "MemberAccess", "src": "7701:17:8", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "BinaryOperation", "operator": "==", "rightExpression": {"hexValue": "30", "id": 1548, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "7722:1:8", "typeDescriptions": {"typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0"}, "value": "0"}, "src": "7701:22:8", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "id": 1558, "nodeType": "IfStatement", "src": "7697:286:8", "trueBody": {"id": 1557, "nodeType": "Block", "src": "7725:258:8", "statements": [{"expression": {"arguments": [{"arguments": [{"id": 1552, "name": "target", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1534, "src": "7927:6:8", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_address", "typeString": "address"}], "id": 1551, "name": "isContract", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1303, "src": "7916:10:8", "typeDescriptions": {"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$", "typeString": "function (address) view returns (bool)"}}, "id": 1553, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "7916:18:8", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, {"hexValue": "416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374", "id": 1554, "isConstant": false, "isLValue": false, "isPure": true, "kind": "string", "lValueRequested": false, "nodeType": "Literal", "src": "7936:31:8", "typeDescriptions": {"typeIdentifier": "t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad", "typeString": "literal_string \"Address: call to non-contract\""}, "value": "Address: call to non-contract"}], "expression": {"argumentTypes": [{"typeIdentifier": "t_bool", "typeString": "bool"}, {"typeIdentifier": "t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad", "typeString": "literal_string \"Address: call to non-contract\""}], "id": 1550, "name": "require", "nodeType": "Identifier", "overloadedDeclarations": [-18, -18], "referencedDeclaration": -18, "src": "7908:7:8", "typeDescriptions": {"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$", "typeString": "function (bool,string memory) pure"}}, "id": 1555, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "7908:60:8", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 1556, "nodeType": "ExpressionStatement", "src": "7908:60:8"}]}}, {"expression": {"id": 1559, "name": "returndata", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1538, "src": "8003:10:8", "typeDescriptions": {"typeIdentifier": "t_bytes_memory_ptr", "typeString": "bytes memory"}}, "functionReturnParameters": 1544, "id": 1560, "nodeType": "Return", "src": "7996:17:8"}]}}]}, "documentation": {"id": 1532, "nodeType": "StructuredDocumentation", "src": "7184:277:8", "text": " @dev Tool to verify that a low level call to smart-contract was successful, and revert (either by bubbling\n the revert reason or using the provided one) in case of unsuccessful call or if target was not a contract.\n _Available since v4.8._"}, "id": 1570, "implemented": true, "kind": "function", "modifiers": [], "name": "verifyCallResultFromTarget", "nameLocation": "7475:26:8", "nodeType": "FunctionDefinition", "parameters": {"id": 1541, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 1534, "mutability": "mutable", "name": "target", "nameLocation": "7519:6:8", "nodeType": "VariableDeclaration", "scope": 1570, "src": "7511:14:8", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}, "typeName": {"id": 1533, "name": "address", "nodeType": "ElementaryTypeName", "src": "7511:7:8", "stateMutability": "nonpayable", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "visibility": "internal"}, {"constant": false, "id": 1536, "mutability": "mutable", "name": "success", "nameLocation": "7540:7:8", "nodeType": "VariableDeclaration", "scope": 1570, "src": "7535:12:8", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}, "typeName": {"id": 1535, "name": "bool", "nodeType": "ElementaryTypeName", "src": "7535:4:8", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "visibility": "internal"}, {"constant": false, "id": 1538, "mutability": "mutable", "name": "returndata", "nameLocation": "7570:10:8", "nodeType": "VariableDeclaration", "scope": 1570, "src": "7557:23:8", "stateVariable": false, "storageLocation": "memory", "typeDescriptions": {"typeIdentifier": "t_bytes_memory_ptr", "typeString": "bytes"}, "typeName": {"id": 1537, "name": "bytes", "nodeType": "ElementaryTypeName", "src": "7557:5:8", "typeDescriptions": {"typeIdentifier": "t_bytes_storage_ptr", "typeString": "bytes"}}, "visibility": "internal"}, {"constant": false, "id": 1540, "mutability": "mutable", "name": "errorMessage", "nameLocation": "7604:12:8", "nodeType": "VariableDeclaration", "scope": 1570, "src": "7590:26:8", "stateVariable": false, "storageLocation": "memory", "typeDescriptions": {"typeIdentifier": "t_string_memory_ptr", "typeString": "string"}, "typeName": {"id": 1539, "name": "string", "nodeType": "ElementaryTypeName", "src": "7590:6:8", "typeDescriptions": {"typeIdentifier": "t_string_storage_ptr", "typeString": "string"}}, "visibility": "internal"}], "src": "7501:121:8"}, "returnParameters": {"id": 1544, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 1543, "mutability": "mutable", "name": "", "nameLocation": "-1:-1:-1", "nodeType": "VariableDeclaration", "scope": 1570, "src": "7646:12:8", "stateVariable": false, "storageLocation": "memory", "typeDescriptions": {"typeIdentifier": "t_bytes_memory_ptr", "typeString": "bytes"}, "typeName": {"id": 1542, "name": "bytes", "nodeType": "ElementaryTypeName", "src": "7646:5:8", "typeDescriptions": {"typeIdentifier": "t_bytes_storage_ptr", "typeString": "bytes"}}, "visibility": "internal"}], "src": "7645:14:8"}, "scope": 1615, "src": "7466:628:8", "stateMutability": "view", "virtual": false, "visibility": "internal"}, {"body": {"id": 1593, "nodeType": "Block", "src": "8475:135:8", "statements": [{"condition": {"id": 1582, "name": "success", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1573, "src": "8489:7:8", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "falseBody": {"id": 1591, "nodeType": "Block", "src": "8546:58:8", "statements": [{"expression": {"arguments": [{"id": 1587, "name": "returndata", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1575, "src": "8568:10:8", "typeDescriptions": {"typeIdentifier": "t_bytes_memory_ptr", "typeString": "bytes memory"}}, {"id": 1588, "name": "errorMessage", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1577, "src": "8580:12:8", "typeDescriptions": {"typeIdentifier": "t_string_memory_ptr", "typeString": "string memory"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_bytes_memory_ptr", "typeString": "bytes memory"}, {"typeIdentifier": "t_string_memory_ptr", "typeString": "string memory"}], "id": 1586, "name": "_revert", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1614, "src": "8560:7:8", "typeDescriptions": {"typeIdentifier": "t_function_internal_pure$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$__$", "typeString": "function (bytes memory,string memory) pure"}}, "id": 1589, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "8560:33:8", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 1590, "nodeType": "ExpressionStatement", "src": "8560:33:8"}]}, "id": 1592, "nodeType": "IfStatement", "src": "8485:119:8", "trueBody": {"id": 1585, "nodeType": "Block", "src": "8498:42:8", "statements": [{"expression": {"id": 1583, "name": "returndata", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1575, "src": "8519:10:8", "typeDescriptions": {"typeIdentifier": "t_bytes_memory_ptr", "typeString": "bytes memory"}}, "functionReturnParameters": 1581, "id": 1584, "nodeType": "Return", "src": "8512:17:8"}]}}]}, "documentation": {"id": 1571, "nodeType": "StructuredDocumentation", "src": "8100:210:8", "text": " @dev Tool to verify that a low level call was successful, and revert if it wasn't, either by bubbling the\n revert reason or using the provided one.\n _Available since v4.3._"}, "id": 1594, "implemented": true, "kind": "function", "modifiers": [], "name": "verifyCallResult", "nameLocation": "8324:16:8", "nodeType": "FunctionDefinition", "parameters": {"id": 1578, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 1573, "mutability": "mutable", "name": "success", "nameLocation": "8355:7:8", "nodeType": "VariableDeclaration", "scope": 1594, "src": "8350:12:8", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}, "typeName": {"id": 1572, "name": "bool", "nodeType": "ElementaryTypeName", "src": "8350:4:8", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "visibility": "internal"}, {"constant": false, "id": 1575, "mutability": "mutable", "name": "returndata", "nameLocation": "8385:10:8", "nodeType": "VariableDeclaration", "scope": 1594, "src": "8372:23:8", "stateVariable": false, "storageLocation": "memory", "typeDescriptions": {"typeIdentifier": "t_bytes_memory_ptr", "typeString": "bytes"}, "typeName": {"id": 1574, "name": "bytes", "nodeType": "ElementaryTypeName", "src": "8372:5:8", "typeDescriptions": {"typeIdentifier": "t_bytes_storage_ptr", "typeString": "bytes"}}, "visibility": "internal"}, {"constant": false, "id": 1577, "mutability": "mutable", "name": "errorMessage", "nameLocation": "8419:12:8", "nodeType": "VariableDeclaration", "scope": 1594, "src": "8405:26:8", "stateVariable": false, "storageLocation": "memory", "typeDescriptions": {"typeIdentifier": "t_string_memory_ptr", "typeString": "string"}, "typeName": {"id": 1576, "name": "string", "nodeType": "ElementaryTypeName", "src": "8405:6:8", "typeDescriptions": {"typeIdentifier": "t_string_storage_ptr", "typeString": "string"}}, "visibility": "internal"}], "src": "8340:97:8"}, "returnParameters": {"id": 1581, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 1580, "mutability": "mutable", "name": "", "nameLocation": "-1:-1:-1", "nodeType": "VariableDeclaration", "scope": 1594, "src": "8461:12:8", "stateVariable": false, "storageLocation": "memory", "typeDescriptions": {"typeIdentifier": "t_bytes_memory_ptr", "typeString": "bytes"}, "typeName": {"id": 1579, "name": "bytes", "nodeType": "ElementaryTypeName", "src": "8461:5:8", "typeDescriptions": {"typeIdentifier": "t_bytes_storage_ptr", "typeString": "bytes"}}, "visibility": "internal"}], "src": "8460:14:8"}, "scope": 1615, "src": "8315:295:8", "stateMutability": "pure", "virtual": false, "visibility": "internal"}, {"body": {"id": 1613, "nodeType": "Block", "src": "8699:457:8", "statements": [{"condition": {"commonType": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "id": 1604, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"expression": {"id": 1601, "name": "returndata", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1596, "src": "8775:10:8", "typeDescriptions": {"typeIdentifier": "t_bytes_memory_ptr", "typeString": "bytes memory"}}, "id": 1602, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "length", "nodeType": "MemberAccess", "src": "8775:17:8", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "BinaryOperation", "operator": ">", "rightExpression": {"hexValue": "30", "id": 1603, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "8795:1:8", "typeDescriptions": {"typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0"}, "value": "0"}, "src": "8775:21:8", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "falseBody": {"id": 1611, "nodeType": "Block", "src": "9105:45:8", "statements": [{"expression": {"arguments": [{"id": 1608, "name": "errorMessage", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1598, "src": "9126:12:8", "typeDescriptions": {"typeIdentifier": "t_string_memory_ptr", "typeString": "string memory"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_string_memory_ptr", "typeString": "string memory"}], "id": 1607, "name": "revert", "nodeType": "Identifier", "overloadedDeclarations": [-19, -19], "referencedDeclaration": -19, "src": "9119:6:8", "typeDescriptions": {"typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$", "typeString": "function (string memory) pure"}}, "id": 1609, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "9119:20:8", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 1610, "nodeType": "ExpressionStatement", "src": "9119:20:8"}]}, "id": 1612, "nodeType": "IfStatement", "src": "8771:379:8", "trueBody": {"id": 1606, "nodeType": "Block", "src": "8798:301:8", "statements": [{"AST": {"nodeType": "YulBlock", "src": "8956:133:8", "statements": [{"nodeType": "YulVariableDeclaration", "src": "8974:40:8", "value": {"arguments": [{"name": "returndata", "nodeType": "YulIdentifier", "src": "9003:10:8"}], "functionName": {"name": "mload", "nodeType": "YulIdentifier", "src": "8997:5:8"}, "nodeType": "YulFunctionCall", "src": "8997:17:8"}, "variables": [{"name": "returndata_size", "nodeType": "YulTypedName", "src": "8978:15:8", "type": ""}]}, {"expression": {"arguments": [{"arguments": [{"kind": "number", "nodeType": "YulLiteral", "src": "9042:2:8", "type": "", "value": "32"}, {"name": "returndata", "nodeType": "YulIdentifier", "src": "9046:10:8"}], "functionName": {"name": "add", "nodeType": "YulIdentifier", "src": "9038:3:8"}, "nodeType": "YulFunctionCall", "src": "9038:19:8"}, {"name": "returndata_size", "nodeType": "YulIdentifier", "src": "9059:15:8"}], "functionName": {"name": "revert", "nodeType": "YulIdentifier", "src": "9031:6:8"}, "nodeType": "YulFunctionCall", "src": "9031:44:8"}, "nodeType": "YulExpressionStatement", "src": "9031:44:8"}]}, "documentation": "@solidity memory-safe-assembly", "evmVersion": "london", "externalReferences": [{"declaration": 1596, "isOffset": false, "isSlot": false, "src": "9003:10:8", "valueSize": 1}, {"declaration": 1596, "isOffset": false, "isSlot": false, "src": "9046:10:8", "valueSize": 1}], "id": 1605, "nodeType": "InlineAssembly", "src": "8947:142:8"}]}}]}, "id": 1614, "implemented": true, "kind": "function", "modifiers": [], "name": "_revert", "nameLocation": "8625:7:8", "nodeType": "FunctionDefinition", "parameters": {"id": 1599, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 1596, "mutability": "mutable", "name": "returndata", "nameLocation": "8646:10:8", "nodeType": "VariableDeclaration", "scope": 1614, "src": "8633:23:8", "stateVariable": false, "storageLocation": "memory", "typeDescriptions": {"typeIdentifier": "t_bytes_memory_ptr", "typeString": "bytes"}, "typeName": {"id": 1595, "name": "bytes", "nodeType": "ElementaryTypeName", "src": "8633:5:8", "typeDescriptions": {"typeIdentifier": "t_bytes_storage_ptr", "typeString": "bytes"}}, "visibility": "internal"}, {"constant": false, "id": 1598, "mutability": "mutable", "name": "errorMessage", "nameLocation": "8672:12:8", "nodeType": "VariableDeclaration", "scope": 1614, "src": "8658:26:8", "stateVariable": false, "storageLocation": "memory", "typeDescriptions": {"typeIdentifier": "t_string_memory_ptr", "typeString": "string"}, "typeName": {"id": 1597, "name": "string", "nodeType": "ElementaryTypeName", "src": "8658:6:8", "typeDescriptions": {"typeIdentifier": "t_string_storage_ptr", "typeString": "string"}}, "visibility": "internal"}], "src": "8632:53:8"}, "returnParameters": {"id": 1600, "nodeType": "ParameterList", "parameters": [], "src": "8699:0:8"}, "scope": 1615, "src": "8616:540:8", "stateMutability": "pure", "virtual": false, "visibility": "private"}], "scope": 1616, "src": "194:8964:8", "usedErrors": []}], "src": "101:9058:8"}}, "/Users/vladimirtrifonov/src/playground/solidity/rare-skills/advanced-solidity-bootcamp/fuzzing-with-echidna/bonding-token/lib/openzeppelin-contracts/contracts/utils/Context.sol": {"AST": {"absolutePath": "lib/openzeppelin-contracts/contracts/utils/Context.sol", "exportedSymbols": {"Context": [2505]}, "id": 2506, "license": "MIT", "nodeType": "SourceUnit", "nodes": [{"id": 2485, "literals": ["solidity", "^", "0.8", ".0"], "nodeType": "PragmaDirective", "src": "86:23:9"}, {"abstract": true, "baseContracts": [], "canonicalName": "Context", "contractDependencies": [], "contractKind": "contract", "documentation": {"id": 2486, "nodeType": "StructuredDocumentation", "src": "111:496:9", "text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."}, "fullyImplemented": true, "id": 2505, "linearizedBaseContracts": [2505], "name": "Context", "nameLocation": "626:7:9", "nodeType": "ContractDefinition", "nodes": [{"body": {"id": 2494, "nodeType": "Block", "src": "702:34:9", "statements": [{"expression": {"expression": {"id": 2491, "name": "msg", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": -15, "src": "719:3:9", "typeDescriptions": {"typeIdentifier": "t_magic_message", "typeString": "msg"}}, "id": 2492, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "sender", "nodeType": "MemberAccess", "src": "719:10:9", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "functionReturnParameters": 2490, "id": 2493, "nodeType": "Return", "src": "712:17:9"}]}, "id": 2495, "implemented": true, "kind": "function", "modifiers": [], "name": "_msgSender", "nameLocation": "649:10:9", "nodeType": "FunctionDefinition", "parameters": {"id": 2487, "nodeType": "ParameterList", "parameters": [], "src": "659:2:9"}, "returnParameters": {"id": 2490, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 2489, "mutability": "mutable", "name": "", "nameLocation": "-1:-1:-1", "nodeType": "VariableDeclaration", "scope": 2495, "src": "693:7:9", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}, "typeName": {"id": 2488, "name": "address", "nodeType": "ElementaryTypeName", "src": "693:7:9", "stateMutability": "nonpayable", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "visibility": "internal"}], "src": "692:9:9"}, "scope": 2505, "src": "640:96:9", "stateMutability": "view", "virtual": true, "visibility": "internal"}, {"body": {"id": 2503, "nodeType": "Block", "src": "809:32:9", "statements": [{"expression": {"expression": {"id": 2500, "name": "msg", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": -15, "src": "826:3:9", "typeDescriptions": {"typeIdentifier": "t_magic_message", "typeString": "msg"}}, "id": 2501, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "data", "nodeType": "MemberAccess", "src": "826:8:9", "typeDescriptions": {"typeIdentifier": "t_bytes_calldata_ptr", "typeString": "bytes calldata"}}, "functionReturnParameters": 2499, "id": 2502, "nodeType": "Return", "src": "819:15:9"}]}, "id": 2504, "implemented": true, "kind": "function", "modifiers": [], "name": "_msgData", "nameLocation": "751:8:9", "nodeType": "FunctionDefinition", "parameters": {"id": 2496, "nodeType": "ParameterList", "parameters": [], "src": "759:2:9"}, "returnParameters": {"id": 2499, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 2498, "mutability": "mutable", "name": "", "nameLocation": "-1:-1:-1", "nodeType": "VariableDeclaration", "scope": 2504, "src": "793:14:9", "stateVariable": false, "storageLocation": "calldata", "typeDescriptions": {"typeIdentifier": "t_bytes_calldata_ptr", "typeString": "bytes"}, "typeName": {"id": 2497, "name": "bytes", "nodeType": "ElementaryTypeName", "src": "793:5:9", "typeDescriptions": {"typeIdentifier": "t_bytes_storage_ptr", "typeString": "bytes"}}, "visibility": "internal"}], "src": "792:16:9"}, "scope": 2505, "src": "742:99:9", "stateMutability": "view", "virtual": true, "visibility": "internal"}], "scope": 2506, "src": "608:235:9", "usedErrors": []}], "src": "86:758:9"}}, "/Users/vladimirtrifonov/src/playground/solidity/rare-skills/advanced-solidity-bootcamp/fuzzing-with-echidna/bonding-token/lib/openzeppelin-contracts/contracts/utils/introspection/ERC165.sol": {"AST": {"absolutePath": "lib/openzeppelin-contracts/contracts/utils/introspection/ERC165.sol", "exportedSymbols": {"ERC165": [2368], "IERC165": [2458]}, "id": 2369, "license": "MIT", "nodeType": "SourceUnit", "nodes": [{"id": 2346, "literals": ["solidity", "^", "0.8", ".0"], "nodeType": "PragmaDirective", "src": "99:23:10"}, {"absolutePath": "lib/openzeppelin-contracts/contracts/utils/introspection/IERC165.sol", "file": "./IERC165.sol", "id": 2347, "nameLocation": "-1:-1:-1", "nodeType": "ImportDirective", "scope": 2369, "sourceUnit": 2459, "src": "124:23:10", "symbolAliases": [], "unitAlias": ""}, {"abstract": true, "baseContracts": [{"baseName": {"id": 2349, "name": "IERC165", "nodeType": "IdentifierPath", "referencedDeclaration": 2458, "src": "754:7:10"}, "id": 2350, "nodeType": "InheritanceSpecifier", "src": "754:7:10"}], "canonicalName": "ERC165", "contractDependencies": [], "contractKind": "contract", "documentation": {"id": 2348, "nodeType": "StructuredDocumentation", "src": "149:576:10", "text": " @dev Implementation of the {IERC165} interface.\n Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check\n for the additional interface id that will be supported. For example:\n ```solidity\n function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\n }\n ```\n Alternatively, {ERC165Storage} provides an easier to use but more expensive implementation."}, "fullyImplemented": true, "id": 2368, "linearizedBaseContracts": [2368, 2458], "name": "ERC165", "nameLocation": "744:6:10", "nodeType": "ContractDefinition", "nodes": [{"baseFunctions": [2457], "body": {"id": 2366, "nodeType": "Block", "src": "920:64:10", "statements": [{"expression": {"commonType": {"typeIdentifier": "t_bytes4", "typeString": "bytes4"}, "id": 2364, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"id": 2359, "name": "interfaceId", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 2353, "src": "937:11:10", "typeDescriptions": {"typeIdentifier": "t_bytes4", "typeString": "bytes4"}}, "nodeType": "BinaryOperation", "operator": "==", "rightExpression": {"expression": {"arguments": [{"id": 2361, "name": "IERC165", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 2458, "src": "957:7:10", "typeDescriptions": {"typeIdentifier": "t_type$_t_contract$_IERC165_$2458_$", "typeString": "type(contract IERC165)"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_type$_t_contract$_IERC165_$2458_$", "typeString": "type(contract IERC165)"}], "id": 2360, "name": "type", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": -27, "src": "952:4:10", "typeDescriptions": {"typeIdentifier": "t_function_metatype_pure$__$returns$__$", "typeString": "function () pure"}}, "id": 2362, "isConstant": false, "isLValue": false, "isPure": true, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "952:13:10", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_magic_meta_type_t_contract$_IERC165_$2458", "typeString": "type(contract IERC165)"}}, "id": 2363, "isConstant": false, "isLValue": false, "isPure": true, "lValueRequested": false, "memberName": "interfaceId", "nodeType": "MemberAccess", "src": "952:25:10", "typeDescriptions": {"typeIdentifier": "t_bytes4", "typeString": "bytes4"}}, "src": "937:40:10", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "functionReturnParameters": 2358, "id": 2365, "nodeType": "Return", "src": "930:47:10"}]}, "documentation": {"id": 2351, "nodeType": "StructuredDocumentation", "src": "768:56:10", "text": " @dev See {IERC165-supportsInterface}."}, "functionSelector": "01ffc9a7", "id": 2367, "implemented": true, "kind": "function", "modifiers": [], "name": "supportsInterface", "nameLocation": "838:17:10", "nodeType": "FunctionDefinition", "overrides": {"id": 2355, "nodeType": "OverrideSpecifier", "overrides": [], "src": "896:8:10"}, "parameters": {"id": 2354, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 2353, "mutability": "mutable", "name": "interfaceId", "nameLocation": "863:11:10", "nodeType": "VariableDeclaration", "scope": 2367, "src": "856:18:10", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_bytes4", "typeString": "bytes4"}, "typeName": {"id": 2352, "name": "bytes4", "nodeType": "ElementaryTypeName", "src": "856:6:10", "typeDescriptions": {"typeIdentifier": "t_bytes4", "typeString": "bytes4"}}, "visibility": "internal"}], "src": "855:20:10"}, "returnParameters": {"id": 2358, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 2357, "mutability": "mutable", "name": "", "nameLocation": "-1:-1:-1", "nodeType": "VariableDeclaration", "scope": 2367, "src": "914:4:10", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}, "typeName": {"id": 2356, "name": "bool", "nodeType": "ElementaryTypeName", "src": "914:4:10", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "visibility": "internal"}], "src": "913:6:10"}, "scope": 2368, "src": "829:155:10", "stateMutability": "view", "virtual": true, "visibility": "public"}], "scope": 2369, "src": "726:260:10", "usedErrors": []}], "src": "99:888:10"}}, "/Users/vladimirtrifonov/src/playground/solidity/rare-skills/advanced-solidity-bootcamp/fuzzing-with-echidna/bonding-token/lib/openzeppelin-contracts/contracts/utils/introspection/IERC165.sol": {"AST": {"absolutePath": "lib/openzeppelin-contracts/contracts/utils/introspection/IERC165.sol", "exportedSymbols": {"IERC165": [2458]}, "id": 2459, "license": "MIT", "nodeType": "SourceUnit", "nodes": [{"id": 2448, "literals": ["solidity", "^", "0.8", ".0"], "nodeType": "PragmaDirective", "src": "100:23:11"}, {"abstract": false, "baseContracts": [], "canonicalName": "IERC165", "contractDependencies": [], "contractKind": "interface", "documentation": {"id": 2449, "nodeType": "StructuredDocumentation", "src": "125:279:11", "text": " @dev Interface of the ERC165 standard, as defined in the\n https://eips.ethereum.org/EIPS/eip-165[EIP].\n Implementers can declare support of contract interfaces, which can then be\n queried by others ({ERC165Checker}).\n For an implementation, see {ERC165}."}, "fullyImplemented": false, "id": 2458, "linearizedBaseContracts": [2458], "name": "IERC165", "nameLocation": "415:7:11", "nodeType": "ContractDefinition", "nodes": [{"documentation": {"id": 2450, "nodeType": "StructuredDocumentation", "src": "429:340:11", "text": " @dev Returns true if this contract implements the interface defined by\n `interfaceId`. See the corresponding\n https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\n to learn more about how these ids are created.\n This function call must use less than 30 000 gas."}, "functionSelector": "01ffc9a7", "id": 2457, "implemented": false, "kind": "function", "modifiers": [], "name": "supportsInterface", "nameLocation": "783:17:11", "nodeType": "FunctionDefinition", "parameters": {"id": 2453, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 2452, "mutability": "mutable", "name": "interfaceId", "nameLocation": "808:11:11", "nodeType": "VariableDeclaration", "scope": 2457, "src": "801:18:11", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_bytes4", "typeString": "bytes4"}, "typeName": {"id": 2451, "name": "bytes4", "nodeType": "ElementaryTypeName", "src": "801:6:11", "typeDescriptions": {"typeIdentifier": "t_bytes4", "typeString": "bytes4"}}, "visibility": "internal"}], "src": "800:20:11"}, "returnParameters": {"id": 2456, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 2455, "mutability": "mutable", "name": "", "nameLocation": "-1:-1:-1", "nodeType": "VariableDeclaration", "scope": 2457, "src": "844:4:11", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}, "typeName": {"id": 2454, "name": "bool", "nodeType": "ElementaryTypeName", "src": "844:4:11", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "visibility": "internal"}], "src": "843:6:11"}, "scope": 2458, "src": "774:76:11", "stateMutability": "view", "virtual": false, "visibility": "external"}], "scope": 2459, "src": "405:447:11", "usedErrors": []}], "src": "100:753:11"}}, "/Users/vladimirtrifonov/src/playground/solidity/rare-skills/advanced-solidity-bootcamp/fuzzing-with-echidna/bonding-token/src/BondingToken.sol": {"AST": {"absolutePath": "src/BondingToken.sol", "exportedSymbols": {"Address": [1615], "BondingToken": [892], "Context": [2505], "ERC1363": [1213], "ERC165": [2368], "ERC20": [2344], "IBondingToken": [1661], "IERC1363": [1741], "IERC1363Receiver": [1231], "IERC1363Spender": [1757], "IERC165": [2458], "IERC20": [2446], "IERC20Metadata": [2483], "ReentrancyGuard": [1285]}, "id": 893, "license": "MIT", "nodeType": "SourceUnit", "nodes": [{"id": 323, "literals": ["solidity", "0.8", ".15"], "nodeType": "PragmaDirective", "src": "32:23:12"}, {"absolutePath": "lib/erc1363-payable-token/contracts/token/ERC1363/ERC1363.sol", "file": "../lib/erc1363-payable-token/contracts/token/ERC1363/ERC1363.sol", "id": 324, "nameLocation": "-1:-1:-1", "nodeType": "ImportDirective", "scope": 893, "sourceUnit": 1214, "src": "57:74:12", "symbolAliases": [], "unitAlias": ""}, {"absolutePath": "lib/erc1363-payable-token/contracts/token/ERC1363/IERC1363Receiver.sol", "file": "../lib/erc1363-payable-token/contracts/token/ERC1363/IERC1363Receiver.sol", "id": 325, "nameLocation": "-1:-1:-1", "nodeType": "ImportDirective", "scope": 893, "sourceUnit": 1232, "src": "132:83:12", "symbolAliases": [], "unitAlias": ""}, {"absolutePath": "lib/openzeppelin-contracts/contracts/utils/Address.sol", "file": "../lib/openzeppelin-contracts/contracts/utils/Address.sol", "id": 326, "nameLocation": "-1:-1:-1", "nodeType": "ImportDirective", "scope": 893, "sourceUnit": 1616, "src": "216:67:12", "symbolAliases": [], "unitAlias": ""}, {"absolutePath": "lib/openzeppelin-contracts/contracts/security/ReentrancyGuard.sol", "file": "../lib/openzeppelin-contracts/contracts/security/ReentrancyGuard.sol", "id": 327, "nameLocation": "-1:-1:-1", "nodeType": "ImportDirective", "scope": 893, "sourceUnit": 1286, "src": "284:78:12", "symbolAliases": [], "unitAlias": ""}, {"absolutePath": "src/IBondingToken.sol", "file": "./IBondingToken.sol", "id": 328, "nameLocation": "-1:-1:-1", "nodeType": "ImportDirective", "scope": 893, "sourceUnit": 1662, "src": "363:29:12", "symbolAliases": [], "unitAlias": ""}, {"abstract": false, "baseContracts": [{"baseName": {"id": 330, "name": "ERC1363", "nodeType": "IdentifierPath", "referencedDeclaration": 1213, "src": "800:7:12"}, "id": 331, "nodeType": "InheritanceSpecifier", "src": "800:7:12"}, {"baseName": {"id": 332, "name": "IERC1363Receiver", "nodeType": "IdentifierPath", "referencedDeclaration": 1231, "src": "813:16:12"}, "id": 333, "nodeType": "InheritanceSpecifier", "src": "813:16:12"}, {"baseName": {"id": 334, "name": "IBondingToken", "nodeType": "IdentifierPath", "referencedDeclaration": 1661, "src": "835:13:12"}, "id": 335, "nodeType": "InheritanceSpecifier", "src": "835:13:12"}, {"baseName": {"id": 336, "name": "ReentrancyGuard", "nodeType": "IdentifierPath", "referencedDeclaration": 1285, "src": "854:15:12"}, "id": 337, "nodeType": "InheritanceSpecifier", "src": "854:15:12"}], "canonicalName": "BondingToken", "contractDependencies": [], "contractKind": "contract", "documentation": {"id": 329, "nodeType": "StructuredDocumentation", "src": "394:376:12", "text": " @title BondingToken\n @dev A token contract that implements a bonding curve for buying and selling tokens using Ether.\n The contract uses ERC1363 to accept and transfer tokens, and implements the IBondingToken interface for buying and selling tokens.\n The contract also implements the IERC1363Receiver interface to receive tokens that are sent to the contract."}, "fullyImplemented": true, "id": 892, "linearizedBaseContracts": [892, 1285, 1661, 1231, 1213, 2368, 1741, 2458, 2344, 2483, 2446, 2505], "name": "BondingToken", "nameLocation": "780:12:12", "nodeType": "ContractDefinition", "nodes": [{"constant": true, "id": 342, "mutability": "constant", "name": "MULTIPLIER", "nameLocation": "893:10:12", "nodeType": "VariableDeclaration", "scope": 892, "src": "876:37:12", "stateVariable": true, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 338, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "876:7:12", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "value": {"commonType": {"typeIdentifier": "t_rational_1000000_by_1", "typeString": "int_const 1000000"}, "id": 341, "isConstant": false, "isLValue": false, "isPure": true, "lValueRequested": false, "leftExpression": {"hexValue": "3130", "id": 339, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "906:2:12", "typeDescriptions": {"typeIdentifier": "t_rational_10_by_1", "typeString": "int_const 10"}, "value": "10"}, "nodeType": "BinaryOperation", "operator": "**", "rightExpression": {"hexValue": "36", "id": 340, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "912:1:12", "typeDescriptions": {"typeIdentifier": "t_rational_6_by_1", "typeString": "int_const 6"}, "value": "6"}, "src": "906:7:12", "typeDescriptions": {"typeIdentifier": "t_rational_1000000_by_1", "typeString": "int_const 1000000"}}, "visibility": "internal"}, {"constant": true, "functionSelector": "54d0a685", "id": 345, "mutability": "constant", "name": "MAX_BUY_AMOUNT_PER_TX", "nameLocation": "956:21:12", "nodeType": "VariableDeclaration", "scope": 892, "src": "932:61:12", "stateVariable": true, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 343, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "932:7:12", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "value": {"hexValue": "315f3030305f3030305f303030", "id": 344, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "980:13:12", "typeDescriptions": {"typeIdentifier": "t_rational_1000000000_by_1", "typeString": "int_const 1000000000"}, "value": "1_000_000_000"}, "visibility": "public"}, {"constant": true, "functionSelector": "b4a0b8c7", "id": 348, "mutability": "constant", "name": "MAX_SUPPLY_THRESHOLD", "nameLocation": "1023:20:12", "nodeType": "VariableDeclaration", "scope": 892, "src": "999:64:12", "stateVariable": true, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 346, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "999:7:12", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "value": {"hexValue": "315f3030305f3030305f3030305f303030", "id": 347, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "1046:17:12", "typeDescriptions": {"typeIdentifier": "t_rational_1000000000000_by_1", "typeString": "int_const 1000000000000"}, "value": "1_000_000_000_000"}, "visibility": "public"}, {"body": {"id": 363, "nodeType": "Block", "src": "1174:86:12", "statements": [{"expression": {"arguments": [{"commonType": {"typeIdentifier": "t_address", "typeString": "address"}, "id": 358, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"expression": {"id": 352, "name": "msg", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": -15, "src": "1192:3:12", "typeDescriptions": {"typeIdentifier": "t_magic_message", "typeString": "msg"}}, "id": 353, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "sender", "nodeType": "MemberAccess", "src": "1192:10:12", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "nodeType": "BinaryOperation", "operator": "==", "rightExpression": {"arguments": [{"id": 356, "name": "this", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": -28, "src": "1214:4:12", "typeDescriptions": {"typeIdentifier": "t_contract$_BondingToken_$892", "typeString": "contract BondingToken"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_contract$_BondingToken_$892", "typeString": "contract BondingToken"}], "id": 355, "isConstant": false, "isLValue": false, "isPure": true, "lValueRequested": false, "nodeType": "ElementaryTypeNameExpression", "src": "1206:7:12", "typeDescriptions": {"typeIdentifier": "t_type$_t_address_$", "typeString": "type(address)"}, "typeName": {"id": 354, "name": "address", "nodeType": "ElementaryTypeName", "src": "1206:7:12", "typeDescriptions": {}}}, "id": 357, "isConstant": false, "isLValue": false, "isPure": false, "kind": "typeConversion", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "1206:13:12", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "src": "1192:27:12", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, {"hexValue": "4f6e6c7920616c6c6f77656420746f6b656e", "id": 359, "isConstant": false, "isLValue": false, "isPure": true, "kind": "string", "lValueRequested": false, "nodeType": "Literal", "src": "1221:20:12", "typeDescriptions": {"typeIdentifier": "t_stringliteral_825629458be90bfd2bb7acdc291ca24fe49ea08ef5b19fa90dc883d02cb0ac48", "typeString": "literal_string \"Only allowed token\""}, "value": "Only allowed token"}], "expression": {"argumentTypes": [{"typeIdentifier": "t_bool", "typeString": "bool"}, {"typeIdentifier": "t_stringliteral_825629458be90bfd2bb7acdc291ca24fe49ea08ef5b19fa90dc883d02cb0ac48", "typeString": "literal_string \"Only allowed token\""}], "id": 351, "name": "require", "nodeType": "Identifier", "overloadedDeclarations": [-18, -18], "referencedDeclaration": -18, "src": "1184:7:12", "typeDescriptions": {"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$", "typeString": "function (bool,string memory) pure"}}, "id": 360, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "1184:58:12", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 361, "nodeType": "ExpressionStatement", "src": "1184:58:12"}, {"id": 362, "nodeType": "PlaceholderStatement", "src": "1252:1:12"}]}, "documentation": {"id": 349, "nodeType": "StructuredDocumentation", "src": "1070:71:12", "text": " @dev Throws if the caller is not the token contract."}, "id": 364, "name": "onlyAllowedToken", "nameLocation": "1155:16:12", "nodeType": "ModifierDefinition", "parameters": {"id": 350, "nodeType": "ParameterList", "parameters": [], "src": "1171:2:12"}, "src": "1146:114:12", "virtual": false, "visibility": "internal"}, {"body": {"id": 376, "nodeType": "Block", "src": "1541:2:12", "statements": []}, "documentation": {"id": 365, "nodeType": "StructuredDocumentation", "src": "1266:170:12", "text": " @dev Initializes the contract with the given name and symbol.\n @param _name The name of the token.\n @param _symbol The symbol of the token."}, "id": 377, "implemented": true, "kind": "constructor", "modifiers": [{"arguments": [{"id": 372, "name": "_name", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 367, "src": "1525:5:12", "typeDescriptions": {"typeIdentifier": "t_string_memory_ptr", "typeString": "string memory"}}, {"id": 373, "name": "_symbol", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 369, "src": "1532:7:12", "typeDescriptions": {"typeIdentifier": "t_string_memory_ptr", "typeString": "string memory"}}], "id": 374, "kind": "baseConstructorSpecifier", "modifierName": {"id": 371, "name": "ERC20", "nodeType": "IdentifierPath", "referencedDeclaration": 2344, "src": "1519:5:12"}, "nodeType": "ModifierInvocation", "src": "1519:21:12"}], "name": "", "nameLocation": "-1:-1:-1", "nodeType": "FunctionDefinition", "parameters": {"id": 370, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 367, "mutability": "mutable", "name": "_name", "nameLocation": "1476:5:12", "nodeType": "VariableDeclaration", "scope": 377, "src": "1462:19:12", "stateVariable": false, "storageLocation": "memory", "typeDescriptions": {"typeIdentifier": "t_string_memory_ptr", "typeString": "string"}, "typeName": {"id": 366, "name": "string", "nodeType": "ElementaryTypeName", "src": "1462:6:12", "typeDescriptions": {"typeIdentifier": "t_string_storage_ptr", "typeString": "string"}}, "visibility": "internal"}, {"constant": false, "id": 369, "mutability": "mutable", "name": "_symbol", "nameLocation": "1505:7:12", "nodeType": "VariableDeclaration", "scope": 377, "src": "1491:21:12", "stateVariable": false, "storageLocation": "memory", "typeDescriptions": {"typeIdentifier": "t_string_memory_ptr", "typeString": "string"}, "typeName": {"id": 368, "name": "string", "nodeType": "ElementaryTypeName", "src": "1491:6:12", "typeDescriptions": {"typeIdentifier": "t_string_storage_ptr", "typeString": "string"}}, "visibility": "internal"}], "src": "1452:66:12"}, "returnParameters": {"id": 375, "nodeType": "ParameterList", "parameters": [], "src": "1541:0:12"}, "scope": 892, "src": "1441:102:12", "stateMutability": "nonpayable", "virtual": false, "visibility": "public"}, {"baseFunctions": [934], "body": {"id": 399, "nodeType": "Block", "src": "1894:134:12", "statements": [{"expression": {"commonType": {"typeIdentifier": "t_bool", "typeString": "bool"}, "id": 397, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"commonType": {"typeIdentifier": "t_bytes4", "typeString": "bytes4"}, "id": 392, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"id": 387, "name": "interfaceId", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 380, "src": "1923:11:12", "typeDescriptions": {"typeIdentifier": "t_bytes4", "typeString": "bytes4"}}, "nodeType": "BinaryOperation", "operator": "==", "rightExpression": {"expression": {"arguments": [{"id": 389, "name": "IBondingToken", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1661, "src": "1943:13:12", "typeDescriptions": {"typeIdentifier": "t_type$_t_contract$_IBondingToken_$1661_$", "typeString": "type(contract IBondingToken)"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_type$_t_contract$_IBondingToken_$1661_$", "typeString": "type(contract IBondingToken)"}], "id": 388, "name": "type", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": -27, "src": "1938:4:12", "typeDescriptions": {"typeIdentifier": "t_function_metatype_pure$__$returns$__$", "typeString": "function () pure"}}, "id": 390, "isConstant": false, "isLValue": false, "isPure": true, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "1938:19:12", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_magic_meta_type_t_contract$_IBondingToken_$1661", "typeString": "type(contract IBondingToken)"}}, "id": 391, "isConstant": false, "isLValue": false, "isPure": true, "lValueRequested": false, "memberName": "interfaceId", "nodeType": "MemberAccess", "src": "1938:31:12", "typeDescriptions": {"typeIdentifier": "t_bytes4", "typeString": "bytes4"}}, "src": "1923:46:12", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "nodeType": "BinaryOperation", "operator": "||", "rightExpression": {"arguments": [{"id": 395, "name": "interfaceId", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 380, "src": "2009:11:12", "typeDescriptions": {"typeIdentifier": "t_bytes4", "typeString": "bytes4"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_bytes4", "typeString": "bytes4"}], "expression": {"id": 393, "name": "super", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": -25, "src": "1985:5:12", "typeDescriptions": {"typeIdentifier": "t_type$_t_super$_BondingToken_$892_$", "typeString": "type(contract super BondingToken)"}}, "id": 394, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "supportsInterface", "nodeType": "MemberAccess", "referencedDeclaration": 934, "src": "1985:23:12", "typeDescriptions": {"typeIdentifier": "t_function_internal_view$_t_bytes4_$returns$_t_bool_$", "typeString": "function (bytes4) view returns (bool)"}}, "id": 396, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "1985:36:12", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "src": "1923:98:12", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "functionReturnParameters": 386, "id": 398, "nodeType": "Return", "src": "1904:117:12"}]}, "documentation": {"id": 378, "nodeType": "StructuredDocumentation", "src": "1549:234:12", "text": " @dev Checks if a contract implements the IBondingToken interface.\n @param interfaceId The interface ID being checked.\n @return A boolean indicating if the contract implements the IBondingToken interface."}, "functionSelector": "01ffc9a7", "id": 400, "implemented": true, "kind": "function", "modifiers": [], "name": "supportsInterface", "nameLocation": "1797:17:12", "nodeType": "FunctionDefinition", "overrides": {"id": 383, "nodeType": "OverrideSpecifier", "overrides": [{"id": 382, "name": "ERC1363", "nodeType": "IdentifierPath", "referencedDeclaration": 1213, "src": "1870:7:12"}], "src": "1861:17:12"}, "parameters": {"id": 381, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 380, "mutability": "mutable", "name": "interfaceId", "nameLocation": "1831:11:12", "nodeType": "VariableDeclaration", "scope": 400, "src": "1824:18:12", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_bytes4", "typeString": "bytes4"}, "typeName": {"id": 379, "name": "bytes4", "nodeType": "ElementaryTypeName", "src": "1824:6:12", "typeDescriptions": {"typeIdentifier": "t_bytes4", "typeString": "bytes4"}}, "visibility": "internal"}], "src": "1814:34:12"}, "returnParameters": {"id": 386, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 385, "mutability": "mutable", "name": "", "nameLocation": "-1:-1:-1", "nodeType": "VariableDeclaration", "scope": 400, "src": "1888:4:12", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}, "typeName": {"id": 384, "name": "bool", "nodeType": "ElementaryTypeName", "src": "1888:4:12", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "visibility": "internal"}], "src": "1887:6:12"}, "scope": 892, "src": "1788:240:12", "stateMutability": "view", "virtual": false, "visibility": "public"}, {"baseFunctions": [1638], "body": {"id": 436, "nodeType": "Block", "src": "2231:215:12", "statements": [{"expression": {"arguments": [{"commonType": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "id": 412, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"expression": {"id": 409, "name": "msg", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": -15, "src": "2249:3:12", "typeDescriptions": {"typeIdentifier": "t_magic_message", "typeString": "msg"}}, "id": 410, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "value", "nodeType": "MemberAccess", "src": "2249:9:12", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "BinaryOperation", "operator": ">", "rightExpression": {"hexValue": "30", "id": 411, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "2261:1:12", "typeDescriptions": {"typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0"}, "value": "0"}, "src": "2249:13:12", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, {"hexValue": "496e73756666696369656e742066756e6473", "id": 413, "isConstant": false, "isLValue": false, "isPure": true, "kind": "string", "lValueRequested": false, "nodeType": "Literal", "src": "2264:20:12", "typeDescriptions": {"typeIdentifier": "t_stringliteral_63452317cb6d597bef833f023ed2962a84dbd24c571e27629ed1e3056d6cfd8d", "typeString": "literal_string \"Insufficient funds\""}, "value": "Insufficient funds"}], "expression": {"argumentTypes": [{"typeIdentifier": "t_bool", "typeString": "bool"}, {"typeIdentifier": "t_stringliteral_63452317cb6d597bef833f023ed2962a84dbd24c571e27629ed1e3056d6cfd8d", "typeString": "literal_string \"Insufficient funds\""}], "id": 408, "name": "require", "nodeType": "Identifier", "overloadedDeclarations": [-18, -18], "referencedDeclaration": -18, "src": "2241:7:12", "typeDescriptions": {"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$", "typeString": "function (bool,string memory) pure"}}, "id": 414, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "2241:44:12", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 415, "nodeType": "ExpressionStatement", "src": "2241:44:12"}, {"expression": {"arguments": [{"commonType": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "id": 419, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"id": 417, "name": "amount", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 403, "src": "2303:6:12", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "BinaryOperation", "operator": ">", "rightExpression": {"hexValue": "30", "id": 418, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "2312:1:12", "typeDescriptions": {"typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0"}, "value": "0"}, "src": "2303:10:12", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, {"hexValue": "416d6f756e74206973207a65726f", "id": 420, "isConstant": false, "isLValue": false, "isPure": true, "kind": "string", "lValueRequested": false, "nodeType": "Literal", "src": "2315:16:12", "typeDescriptions": {"typeIdentifier": "t_stringliteral_8955ab95281aea4ffc58a5f8944088fd3b4a14fefa4e2498e09100f16c46383c", "typeString": "literal_string \"Amount is zero\""}, "value": "Amount is zero"}], "expression": {"argumentTypes": [{"typeIdentifier": "t_bool", "typeString": "bool"}, {"typeIdentifier": "t_stringliteral_8955ab95281aea4ffc58a5f8944088fd3b4a14fefa4e2498e09100f16c46383c", "typeString": "literal_string \"Amount is zero\""}], "id": 416, "name": "require", "nodeType": "Identifier", "overloadedDeclarations": [-18, -18], "referencedDeclaration": -18, "src": "2295:7:12", "typeDescriptions": {"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$", "typeString": "function (bool,string memory) pure"}}, "id": 421, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "2295:37:12", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 422, "nodeType": "ExpressionStatement", "src": "2295:37:12"}, {"expression": {"arguments": [{"commonType": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "id": 426, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"id": 424, "name": "amount", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 403, "src": "2350:6:12", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "BinaryOperation", "operator": "<=", "rightExpression": {"id": 425, "name": "MAX_BUY_AMOUNT_PER_TX", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 345, "src": "2360:21:12", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "2350:31:12", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, {"hexValue": "416d6f756e7420697320746f6f2068696768", "id": 427, "isConstant": false, "isLValue": false, "isPure": true, "kind": "string", "lValueRequested": false, "nodeType": "Literal", "src": "2383:20:12", "typeDescriptions": {"typeIdentifier": "t_stringliteral_a5ba1278ea568ec68a997b9afa9cf2ce89400efad585d31bf5e21fe968a01be3", "typeString": "literal_string \"Amount is too high\""}, "value": "Amount is too high"}], "expression": {"argumentTypes": [{"typeIdentifier": "t_bool", "typeString": "bool"}, {"typeIdentifier": "t_stringliteral_a5ba1278ea568ec68a997b9afa9cf2ce89400efad585d31bf5e21fe968a01be3", "typeString": "literal_string \"Amount is too high\""}], "id": 423, "name": "require", "nodeType": "Identifier", "overloadedDeclarations": [-18, -18], "referencedDeclaration": -18, "src": "2342:7:12", "typeDescriptions": {"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$", "typeString": "function (bool,string memory) pure"}}, "id": 428, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "2342:62:12", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 429, "nodeType": "ExpressionStatement", "src": "2342:62:12"}, {"expression": {"arguments": [{"expression": {"id": 431, "name": "msg", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": -15, "src": "2420:3:12", "typeDescriptions": {"typeIdentifier": "t_magic_message", "typeString": "msg"}}, "id": 432, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "sender", "nodeType": "MemberAccess", "src": "2420:10:12", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, {"id": 433, "name": "amount", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 403, "src": "2432:6:12", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_address", "typeString": "address"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}], "id": 430, "name": "_buy", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 497, "src": "2415:4:12", "typeDescriptions": {"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$", "typeString": "function (address,uint256)"}}, "id": 434, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "2415:24:12", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 435, "nodeType": "ExpressionStatement", "src": "2415:24:12"}]}, "documentation": {"id": 401, "nodeType": "StructuredDocumentation", "src": "2034:135:12", "text": " @dev Allows a user to buy tokens by sending Ether to the contract.\n @param amount The amount of tokens to buy."}, "functionSelector": "d96a094a", "id": 437, "implemented": true, "kind": "function", "modifiers": [{"id": 406, "kind": "modifierInvocation", "modifierName": {"id": 405, "name": "nonReentrant", "nodeType": "IdentifierPath", "referencedDeclaration": 1261, "src": "2218:12:12"}, "nodeType": "ModifierInvocation", "src": "2218:12:12"}], "name": "buy", "nameLocation": "2183:3:12", "nodeType": "FunctionDefinition", "parameters": {"id": 404, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 403, "mutability": "mutable", "name": "amount", "nameLocation": "2195:6:12", "nodeType": "VariableDeclaration", "scope": 437, "src": "2187:14:12", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 402, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "2187:7:12", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "src": "2186:16:12"}, "returnParameters": {"id": 407, "nodeType": "ParameterList", "parameters": [], "src": "2231:0:12"}, "scope": 892, "src": "2174:272:12", "stateMutability": "payable", "virtual": false, "visibility": "public"}, {"body": {"id": 496, "nodeType": "Block", "src": "2690:420:12", "statements": [{"assignments": [446], "declarations": [{"constant": false, "id": 446, "mutability": "mutable", "name": "cost", "nameLocation": "2708:4:12", "nodeType": "VariableDeclaration", "scope": 496, "src": "2700:12:12", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 445, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "2700:7:12", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "id": 450, "initialValue": {"arguments": [{"id": 448, "name": "amount", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 442, "src": "2739:6:12", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_uint256", "typeString": "uint256"}], "id": 447, "name": "calculatePriceForTokens", "nodeType": "Identifier", "overloadedDeclarations": [619, 753], "referencedDeclaration": 619, "src": "2715:23:12", "typeDescriptions": {"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_uint256_$", "typeString": "function (uint256) view returns (uint256)"}}, "id": 449, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "2715:31:12", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "VariableDeclarationStatement", "src": "2700:46:12"}, {"expression": {"arguments": [{"commonType": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "id": 455, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"expression": {"id": 452, "name": "msg", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": -15, "src": "2764:3:12", "typeDescriptions": {"typeIdentifier": "t_magic_message", "typeString": "msg"}}, "id": 453, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "value", "nodeType": "MemberAccess", "src": "2764:9:12", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "BinaryOperation", "operator": ">=", "rightExpression": {"id": 454, "name": "cost", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 446, "src": "2777:4:12", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "2764:17:12", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, {"hexValue": "496e73756666696369656e742066756e6473", "id": 456, "isConstant": false, "isLValue": false, "isPure": true, "kind": "string", "lValueRequested": false, "nodeType": "Literal", "src": "2783:20:12", "typeDescriptions": {"typeIdentifier": "t_stringliteral_63452317cb6d597bef833f023ed2962a84dbd24c571e27629ed1e3056d6cfd8d", "typeString": "literal_string \"Insufficient funds\""}, "value": "Insufficient funds"}], "expression": {"argumentTypes": [{"typeIdentifier": "t_bool", "typeString": "bool"}, {"typeIdentifier": "t_stringliteral_63452317cb6d597bef833f023ed2962a84dbd24c571e27629ed1e3056d6cfd8d", "typeString": "literal_string \"Insufficient funds\""}], "id": 451, "name": "require", "nodeType": "Identifier", "overloadedDeclarations": [-18, -18], "referencedDeclaration": -18, "src": "2756:7:12", "typeDescriptions": {"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$", "typeString": "function (bool,string memory) pure"}}, "id": 457, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "2756:48:12", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 458, "nodeType": "ExpressionStatement", "src": "2756:48:12"}, {"expression": {"arguments": [{"id": 460, "name": "account", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 440, "src": "2820:7:12", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, {"id": 461, "name": "amount", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 442, "src": "2829:6:12", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_address", "typeString": "address"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}], "id": 459, "name": "_mint", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 2161, "src": "2814:5:12", "typeDescriptions": {"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$", "typeString": "function (address,uint256)"}}, "id": 462, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "2814:22:12", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 463, "nodeType": "ExpressionStatement", "src": "2814:22:12"}, {"expression": {"arguments": [{"commonType": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "id": 468, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"arguments": [], "expression": {"argumentTypes": [], "id": 465, "name": "totalSupply", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1842, "src": "2867:11:12", "typeDescriptions": {"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$", "typeString": "function () view returns (uint256)"}}, "id": 466, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "2867:13:12", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "BinaryOperation", "operator": "<=", "rightExpression": {"id": 467, "name": "MAX_SUPPLY_THRESHOLD", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 348, "src": "2884:20:12", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "2867:37:12", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, {"hexValue": "4d617820737570706c79207468726573686f6c642072656163686564", "id": 469, "isConstant": false, "isLValue": false, "isPure": true, "kind": "string", "lValueRequested": false, "nodeType": "Literal", "src": "2918:30:12", "typeDescriptions": {"typeIdentifier": "t_stringliteral_ffd9f488c95a29c65e1cf8adec60ca8a63a22a43274486f9f2ee9cb4bd095b53", "typeString": "literal_string \"Max supply threshold reached\""}, "value": "Max supply threshold reached"}], "expression": {"argumentTypes": [{"typeIdentifier": "t_bool", "typeString": "bool"}, {"typeIdentifier": "t_stringliteral_ffd9f488c95a29c65e1cf8adec60ca8a63a22a43274486f9f2ee9cb4bd095b53", "typeString": "literal_string \"Max supply threshold reached\""}], "id": 464, "name": "require", "nodeType": "Identifier", "overloadedDeclarations": [-18, -18], "referencedDeclaration": -18, "src": "2846:7:12", "typeDescriptions": {"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$", "typeString": "function (bool,string memory) pure"}}, "id": 470, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "2846:112:12", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 471, "nodeType": "ExpressionStatement", "src": "2846:112:12"}, {"condition": {"commonType": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "id": 475, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"expression": {"id": 472, "name": "msg", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": -15, "src": "2972:3:12", "typeDescriptions": {"typeIdentifier": "t_magic_message", "typeString": "msg"}}, "id": 473, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "value", "nodeType": "MemberAccess", "src": "2972:9:12", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "BinaryOperation", "operator": ">", "rightExpression": {"id": 474, "name": "cost", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 446, "src": "2984:4:12", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "2972:16:12", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "id": 490, "nodeType": "IfStatement", "src": "2968:100:12", "trueBody": {"id": 489, "nodeType": "Block", "src": "2990:78:12", "statements": [{"expression": {"arguments": [{"arguments": [{"id": 481, "name": "account", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 440, "src": "3030:7:12", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_address", "typeString": "address"}], "id": 480, "isConstant": false, "isLValue": false, "isPure": true, "lValueRequested": false, "nodeType": "ElementaryTypeNameExpression", "src": "3022:8:12", "typeDescriptions": {"typeIdentifier": "t_type$_t_address_payable_$", "typeString": "type(address payable)"}, "typeName": {"id": 479, "name": "address", "nodeType": "ElementaryTypeName", "src": "3022:8:12", "stateMutability": "payable", "typeDescriptions": {}}}, "id": 482, "isConstant": false, "isLValue": false, "isPure": false, "kind": "typeConversion", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "3022:16:12", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_address_payable", "typeString": "address payable"}}, {"commonType": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "id": 486, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"expression": {"id": 483, "name": "msg", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": -15, "src": "3040:3:12", "typeDescriptions": {"typeIdentifier": "t_magic_message", "typeString": "msg"}}, "id": 484, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "value", "nodeType": "MemberAccess", "src": "3040:9:12", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "BinaryOperation", "operator": "-", "rightExpression": {"id": 485, "name": "cost", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 446, "src": "3052:4:12", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "3040:16:12", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_address_payable", "typeString": "address payable"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}], "expression": {"id": 476, "name": "Address", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1615, "src": "3004:7:12", "typeDescriptions": {"typeIdentifier": "t_type$_t_contract$_Address_$1615_$", "typeString": "type(library Address)"}}, "id": 478, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "sendValue", "nodeType": "MemberAccess", "referencedDeclaration": 1337, "src": "3004:17:12", "typeDescriptions": {"typeIdentifier": "t_function_internal_nonpayable$_t_address_payable_$_t_uint256_$returns$__$", "typeString": "function (address payable,uint256)"}}, "id": 487, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "3004:53:12", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 488, "nodeType": "ExpressionStatement", "src": "3004:53:12"}]}}, {"eventCall": {"arguments": [{"id": 492, "name": "account", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 440, "src": "3087:7:12", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, {"id": 493, "name": "amount", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 442, "src": "3096:6:12", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_address", "typeString": "address"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}], "id": 491, "name": "Buy", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1625, "src": "3083:3:12", "typeDescriptions": {"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$", "typeString": "function (address,uint256)"}}, "id": 494, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "3083:20:12", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 495, "nodeType": "EmitStatement", "src": "3078:25:12"}]}, "documentation": {"id": 438, "nodeType": "StructuredDocumentation", "src": "2452:178:12", "text": " @dev Internal function to buy tokens.\n @param account The address of the account to receive the tokens.\n @param amount The amount of tokens to buy."}, "id": 497, "implemented": true, "kind": "function", "modifiers": [], "name": "_buy", "nameLocation": "2644:4:12", "nodeType": "FunctionDefinition", "parameters": {"id": 443, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 440, "mutability": "mutable", "name": "account", "nameLocation": "2657:7:12", "nodeType": "VariableDeclaration", "scope": 497, "src": "2649:15:12", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}, "typeName": {"id": 439, "name": "address", "nodeType": "ElementaryTypeName", "src": "2649:7:12", "stateMutability": "nonpayable", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "visibility": "internal"}, {"constant": false, "id": 442, "mutability": "mutable", "name": "amount", "nameLocation": "2674:6:12", "nodeType": "VariableDeclaration", "scope": 497, "src": "2666:14:12", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 441, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "2666:7:12", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "src": "2648:33:12"}, "returnParameters": {"id": 444, "nodeType": "ParameterList", "parameters": [], "src": "2690:0:12"}, "scope": 892, "src": "2635:475:12", "stateMutability": "nonpayable", "virtual": false, "visibility": "private"}, {"baseFunctions": [1644], "body": {"id": 533, "nodeType": "Block", "src": "3320:210:12", "statements": [{"expression": {"arguments": [{"commonType": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "id": 511, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"arguments": [{"expression": {"id": 507, "name": "msg", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": -15, "src": "3348:3:12", "typeDescriptions": {"typeIdentifier": "t_magic_message", "typeString": "msg"}}, "id": 508, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "sender", "nodeType": "MemberAccess", "src": "3348:10:12", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_address", "typeString": "address"}], "id": 506, "name": "balanceOf", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1856, "src": "3338:9:12", "typeDescriptions": {"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$", "typeString": "function (address) view returns (uint256)"}}, "id": 509, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "3338:21:12", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "BinaryOperation", "operator": ">=", "rightExpression": {"id": 510, "name": "amount", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 500, "src": "3363:6:12", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "3338:31:12", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, {"hexValue": "496e73756666696369656e7420616d6f756e74", "id": 512, "isConstant": false, "isLValue": false, "isPure": true, "kind": "string", "lValueRequested": false, "nodeType": "Literal", "src": "3371:21:12", "typeDescriptions": {"typeIdentifier": "t_stringliteral_bf58beaf08663d37df7e1961d65d3eff91b12706dfa2eef26f7dde8f1653c496", "typeString": "literal_string \"Insufficient amount\""}, "value": "Insufficient amount"}], "expression": {"argumentTypes": [{"typeIdentifier": "t_bool", "typeString": "bool"}, {"typeIdentifier": "t_stringliteral_bf58beaf08663d37df7e1961d65d3eff91b12706dfa2eef26f7dde8f1653c496", "typeString": "literal_string \"Insufficient amount\""}], "id": 505, "name": "require", "nodeType": "Identifier", "overloadedDeclarations": [-18, -18], "referencedDeclaration": -18, "src": "3330:7:12", "typeDescriptions": {"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$", "typeString": "function (bool,string memory) pure"}}, "id": 513, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "3330:63:12", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 514, "nodeType": "ExpressionStatement", "src": "3330:63:12"}, {"assignments": [516], "declarations": [{"constant": false, "id": 516, "mutability": "mutable", "name": "success", "nameLocation": "3409:7:12", "nodeType": "VariableDeclaration", "scope": 533, "src": "3404:12:12", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}, "typeName": {"id": 515, "name": "bool", "nodeType": "ElementaryTypeName", "src": "3404:4:12", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "visibility": "internal"}], "id": 524, "initialValue": {"arguments": [{"arguments": [{"id": 520, "name": "this", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": -28, "src": "3436:4:12", "typeDescriptions": {"typeIdentifier": "t_contract$_BondingToken_$892", "typeString": "contract BondingToken"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_contract$_BondingToken_$892", "typeString": "contract BondingToken"}], "id": 519, "isConstant": false, "isLValue": false, "isPure": true, "lValueRequested": false, "nodeType": "ElementaryTypeNameExpression", "src": "3428:7:12", "typeDescriptions": {"typeIdentifier": "t_type$_t_address_$", "typeString": "type(address)"}, "typeName": {"id": 518, "name": "address", "nodeType": "ElementaryTypeName", "src": "3428:7:12", "typeDescriptions": {}}}, "id": 521, "isConstant": false, "isLValue": false, "isPure": false, "kind": "typeConversion", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "3428:13:12", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, {"id": 522, "name": "amount", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 500, "src": "3443:6:12", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_address", "typeString": "address"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}], "id": 517, "name": "transfer", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1881, "src": "3419:8:12", "typeDescriptions": {"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$", "typeString": "function (address,uint256) returns (bool)"}}, "id": 523, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "3419:31:12", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "nodeType": "VariableDeclarationStatement", "src": "3404:46:12"}, {"condition": {"id": 526, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "nodeType": "UnaryOperation", "operator": "!", "prefix": true, "src": "3464:8:12", "subExpression": {"id": 525, "name": "success", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 516, "src": "3465:7:12", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "id": 532, "nodeType": "IfStatement", "src": "3460:64:12", "trueBody": {"id": 531, "nodeType": "Block", "src": "3474:50:12", "statements": [{"expression": {"arguments": [{"hexValue": "5472616e73666572206661696c6564", "id": 528, "isConstant": false, "isLValue": false, "isPure": true, "kind": "string", "lValueRequested": false, "nodeType": "Literal", "src": "3495:17:12", "typeDescriptions": {"typeIdentifier": "t_stringliteral_25adaa6d082ce15f901e0d8a3d393e7462ef9edf2e6bc8321fa14d1615b6fc51", "typeString": "literal_string \"Transfer failed\""}, "value": "Transfer failed"}], "expression": {"argumentTypes": [{"typeIdentifier": "t_stringliteral_25adaa6d082ce15f901e0d8a3d393e7462ef9edf2e6bc8321fa14d1615b6fc51", "typeString": "literal_string \"Transfer failed\""}], "id": 527, "name": "revert", "nodeType": "Identifier", "overloadedDeclarations": [-19, -19], "referencedDeclaration": -19, "src": "3488:6:12", "typeDescriptions": {"typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$", "typeString": "function (string memory) pure"}}, "id": 529, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "3488:25:12", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 530, "nodeType": "ExpressionStatement", "src": "3488:25:12"}]}}]}, "documentation": {"id": 498, "nodeType": "StructuredDocumentation", "src": "3116:147:12", "text": " @dev Allows a user to sell tokens back to the contract in exchange for Ether.\n @param amount The amount of tokens to sell."}, "functionSelector": "e4849b32", "id": 534, "implemented": true, "kind": "function", "modifiers": [{"id": 503, "kind": "modifierInvocation", "modifierName": {"id": 502, "name": "nonReentrant", "nodeType": "IdentifierPath", "referencedDeclaration": 1261, "src": "3307:12:12"}, "nodeType": "ModifierInvocation", "src": "3307:12:12"}], "name": "sell", "nameLocation": "3277:4:12", "nodeType": "FunctionDefinition", "parameters": {"id": 501, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 500, "mutability": "mutable", "name": "amount", "nameLocation": "3290:6:12", "nodeType": "VariableDeclaration", "scope": 534, "src": "3282:14:12", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 499, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "3282:7:12", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "src": "3281:16:12"}, "returnParameters": {"id": 504, "nodeType": "ParameterList", "parameters": [], "src": "3320:0:12"}, "scope": 892, "src": "3268:262:12", "stateMutability": "nonpayable", "virtual": false, "visibility": "external"}, {"body": {"id": 571, "nodeType": "Block", "src": "3776:193:12", "statements": [{"expression": {"arguments": [{"arguments": [{"id": 545, "name": "this", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": -28, "src": "3800:4:12", "typeDescriptions": {"typeIdentifier": "t_contract$_BondingToken_$892", "typeString": "contract BondingToken"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_contract$_BondingToken_$892", "typeString": "contract BondingToken"}], "id": 544, "isConstant": false, "isLValue": false, "isPure": true, "lValueRequested": false, "nodeType": "ElementaryTypeNameExpression", "src": "3792:7:12", "typeDescriptions": {"typeIdentifier": "t_type$_t_address_$", "typeString": "type(address)"}, "typeName": {"id": 543, "name": "address", "nodeType": "ElementaryTypeName", "src": "3792:7:12", "typeDescriptions": {}}}, "id": 546, "isConstant": false, "isLValue": false, "isPure": false, "kind": "typeConversion", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "3792:13:12", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, {"id": 547, "name": "amount", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 539, "src": "3807:6:12", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_address", "typeString": "address"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}], "id": 542, "name": "_burn", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 2233, "src": "3786:5:12", "typeDescriptions": {"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$", "typeString": "function (address,uint256)"}}, "id": 548, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "3786:28:12", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 549, "nodeType": "ExpressionStatement", "src": "3786:28:12"}, {"assignments": [551], "declarations": [{"constant": false, "id": 551, "mutability": "mutable", "name": "payout", "nameLocation": "3832:6:12", "nodeType": "VariableDeclaration", "scope": 571, "src": "3824:14:12", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 550, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "3824:7:12", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "id": 555, "initialValue": {"arguments": [{"id": 553, "name": "amount", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 539, "src": "3865:6:12", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_uint256", "typeString": "uint256"}], "id": 552, "name": "calculatePriceForTokens", "nodeType": "Identifier", "overloadedDeclarations": [619, 753], "referencedDeclaration": 619, "src": "3841:23:12", "typeDescriptions": {"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_uint256_$", "typeString": "function (uint256) view returns (uint256)"}}, "id": 554, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "3841:31:12", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "VariableDeclarationStatement", "src": "3824:48:12"}, {"expression": {"arguments": [{"arguments": [{"id": 561, "name": "account", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 537, "src": "3908:7:12", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_address", "typeString": "address"}], "id": 560, "isConstant": false, "isLValue": false, "isPure": true, "lValueRequested": false, "nodeType": "ElementaryTypeNameExpression", "src": "3900:8:12", "typeDescriptions": {"typeIdentifier": "t_type$_t_address_payable_$", "typeString": "type(address payable)"}, "typeName": {"id": 559, "name": "address", "nodeType": "ElementaryTypeName", "src": "3900:8:12", "stateMutability": "payable", "typeDescriptions": {}}}, "id": 562, "isConstant": false, "isLValue": false, "isPure": false, "kind": "typeConversion", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "3900:16:12", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_address_payable", "typeString": "address payable"}}, {"id": 563, "name": "payout", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 551, "src": "3918:6:12", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_address_payable", "typeString": "address payable"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}], "expression": {"id": 556, "name": "Address", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1615, "src": "3882:7:12", "typeDescriptions": {"typeIdentifier": "t_type$_t_contract$_Address_$1615_$", "typeString": "type(library Address)"}}, "id": 558, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "sendValue", "nodeType": "MemberAccess", "referencedDeclaration": 1337, "src": "3882:17:12", "typeDescriptions": {"typeIdentifier": "t_function_internal_nonpayable$_t_address_payable_$_t_uint256_$returns$__$", "typeString": "function (address payable,uint256)"}}, "id": 564, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "3882:43:12", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 565, "nodeType": "ExpressionStatement", "src": "3882:43:12"}, {"eventCall": {"arguments": [{"id": 567, "name": "account", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 537, "src": "3946:7:12", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, {"id": 568, "name": "amount", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 539, "src": "3955:6:12", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_address", "typeString": "address"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}], "id": 566, "name": "Sell", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1632, "src": "3941:4:12", "typeDescriptions": {"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$", "typeString": "function (address,uint256)"}}, "id": 569, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "3941:21:12", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 570, "nodeType": "EmitStatement", "src": "3936:26:12"}]}, "documentation": {"id": 535, "nodeType": "StructuredDocumentation", "src": "3536:179:12", "text": " @dev Internal function to sell tokens.\n @param account The address of the account to receive the Ether.\n @param amount The amount of tokens to sell."}, "id": 572, "implemented": true, "kind": "function", "modifiers": [], "name": "_sell", "nameLocation": "3729:5:12", "nodeType": "FunctionDefinition", "parameters": {"id": 540, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 537, "mutability": "mutable", "name": "account", "nameLocation": "3743:7:12", "nodeType": "VariableDeclaration", "scope": 572, "src": "3735:15:12", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}, "typeName": {"id": 536, "name": "address", "nodeType": "ElementaryTypeName", "src": "3735:7:12", "stateMutability": "nonpayable", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "visibility": "internal"}, {"constant": false, "id": 539, "mutability": "mutable", "name": "amount", "nameLocation": "3760:6:12", "nodeType": "VariableDeclaration", "scope": 572, "src": "3752:14:12", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 538, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "3752:7:12", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "src": "3734:33:12"}, "returnParameters": {"id": 541, "nodeType": "ParameterList", "parameters": [], "src": "3776:0:12"}, "scope": 892, "src": "3720:249:12", "stateMutability": "nonpayable", "virtual": false, "visibility": "private"}, {"baseFunctions": [2343], "body": {"id": 603, "nodeType": "Block", "src": "4429:107:12", "statements": [{"condition": {"commonType": {"typeIdentifier": "t_bool", "typeString": "bool"}, "id": 595, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"commonType": {"typeIdentifier": "t_address", "typeString": "address"}, "id": 588, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"id": 583, "name": "from", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 575, "src": "4443:4:12", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "nodeType": "BinaryOperation", "operator": "!=", "rightExpression": {"arguments": [{"hexValue": "30", "id": 586, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "4459:1:12", "typeDescriptions": {"typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0"}, "value": "0"}], "expression": {"argumentTypes": [{"typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0"}], "id": 585, "isConstant": false, "isLValue": false, "isPure": true, "lValueRequested": false, "nodeType": "ElementaryTypeNameExpression", "src": "4451:7:12", "typeDescriptions": {"typeIdentifier": "t_type$_t_address_$", "typeString": "type(address)"}, "typeName": {"id": 584, "name": "address", "nodeType": "ElementaryTypeName", "src": "4451:7:12", "typeDescriptions": {}}}, "id": 587, "isConstant": false, "isLValue": false, "isPure": true, "kind": "typeConversion", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "4451:10:12", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "src": "4443:18:12", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "nodeType": "BinaryOperation", "operator": "&&", "rightExpression": {"commonType": {"typeIdentifier": "t_address", "typeString": "address"}, "id": 594, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"id": 589, "name": "to", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 577, "src": "4465:2:12", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "nodeType": "BinaryOperation", "operator": "==", "rightExpression": {"arguments": [{"id": 592, "name": "this", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": -28, "src": "4479:4:12", "typeDescriptions": {"typeIdentifier": "t_contract$_BondingToken_$892", "typeString": "contract BondingToken"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_contract$_BondingToken_$892", "typeString": "contract BondingToken"}], "id": 591, "isConstant": false, "isLValue": false, "isPure": true, "lValueRequested": false, "nodeType": "ElementaryTypeNameExpression", "src": "4471:7:12", "typeDescriptions": {"typeIdentifier": "t_type$_t_address_$", "typeString": "type(address)"}, "typeName": {"id": 590, "name": "address", "nodeType": "ElementaryTypeName", "src": "4471:7:12", "typeDescriptions": {}}}, "id": 593, "isConstant": false, "isLValue": false, "isPure": false, "kind": "typeConversion", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "4471:13:12", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "src": "4465:19:12", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "src": "4443:41:12", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "id": 602, "nodeType": "IfStatement", "src": "4439:91:12", "trueBody": {"id": 601, "nodeType": "Block", "src": "4486:44:12", "statements": [{"expression": {"arguments": [{"id": 597, "name": "from", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 575, "src": "4506:4:12", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, {"id": 598, "name": "amount", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 579, "src": "4512:6:12", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_address", "typeString": "address"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}], "id": 596, "name": "_sell", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 572, "src": "4500:5:12", "typeDescriptions": {"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$", "typeString": "function (address,uint256)"}}, "id": 599, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "4500:19:12", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 600, "nodeType": "ExpressionStatement", "src": "4500:19:12"}]}}]}, "documentation": {"id": 573, "nodeType": "StructuredDocumentation", "src": "3975:330:12", "text": " @dev Overrides the ERC20 _afterTokenTransfer function to sell tokens when\n they are transferred to the contract.\n @param from The address of the account sending the tokens.\n @param to The address of the account receiving the tokens.\n @param amount The amount of tokens being transferred."}, "id": 604, "implemented": true, "kind": "function", "modifiers": [], "name": "_afterTokenTransfer", "nameLocation": "4319:19:12", "nodeType": "FunctionDefinition", "overrides": {"id": 581, "nodeType": "OverrideSpecifier", "overrides": [], "src": "4420:8:12"}, "parameters": {"id": 580, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 575, "mutability": "mutable", "name": "from", "nameLocation": "4356:4:12", "nodeType": "VariableDeclaration", "scope": 604, "src": "4348:12:12", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}, "typeName": {"id": 574, "name": "address", "nodeType": "ElementaryTypeName", "src": "4348:7:12", "stateMutability": "nonpayable", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "visibility": "internal"}, {"constant": false, "id": 577, "mutability": "mutable", "name": "to", "nameLocation": "4378:2:12", "nodeType": "VariableDeclaration", "scope": 604, "src": "4370:10:12", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}, "typeName": {"id": 576, "name": "address", "nodeType": "ElementaryTypeName", "src": "4370:7:12", "stateMutability": "nonpayable", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "visibility": "internal"}, {"constant": false, "id": 579, "mutability": "mutable", "name": "amount", "nameLocation": "4398:6:12", "nodeType": "VariableDeclaration", "scope": 604, "src": "4390:14:12", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 578, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "4390:7:12", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "src": "4338:72:12"}, "returnParameters": {"id": 582, "nodeType": "ParameterList", "parameters": [], "src": "4429:0:12"}, "scope": 892, "src": "4310:226:12", "stateMutability": "nonpayable", "virtual": false, "visibility": "internal"}, {"baseFunctions": [1652], "body": {"id": 618, "nodeType": "Block", "src": "4850:70:12", "statements": [{"expression": {"arguments": [{"id": 613, "name": "amount", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 607, "src": "4891:6:12", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, {"arguments": [], "expression": {"argumentTypes": [], "id": 614, "name": "totalSupply", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1842, "src": "4899:11:12", "typeDescriptions": {"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$", "typeString": "function () view returns (uint256)"}}, "id": 615, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "4899:13:12", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_uint256", "typeString": "uint256"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}], "id": 612, "name": "calculatePriceForTokens", "nodeType": "Identifier", "overloadedDeclarations": [619, 753], "referencedDeclaration": 753, "src": "4867:23:12", "typeDescriptions": {"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$", "typeString": "function (uint256,uint256) pure returns (uint256)"}}, "id": 616, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "4867:46:12", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "functionReturnParameters": 611, "id": 617, "nodeType": "Return", "src": "4860:53:12"}]}, "documentation": {"id": 605, "nodeType": "StructuredDocumentation", "src": "4542:210:12", "text": " @dev Calculates the cost of buying a given amount of tokens.\n @param amount The amount of tokens to calculate the cost for.\n @return The cost of buying the given amount of tokens."}, "functionSelector": "465fa408", "id": 619, "implemented": true, "kind": "function", "modifiers": [], "name": "calculatePriceForTokens", "nameLocation": "4766:23:12", "nodeType": "FunctionDefinition", "parameters": {"id": 608, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 607, "mutability": "mutable", "name": "amount", "nameLocation": "4807:6:12", "nodeType": "VariableDeclaration", "scope": 619, "src": "4799:14:12", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 606, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "4799:7:12", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "src": "4789:30:12"}, "returnParameters": {"id": 611, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 610, "mutability": "mutable", "name": "", "nameLocation": "-1:-1:-1", "nodeType": "VariableDeclaration", "scope": 619, "src": "4841:7:12", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 609, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "4841:7:12", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "src": "4840:9:12"}, "scope": 892, "src": "4757:163:12", "stateMutability": "view", "virtual": false, "visibility": "public"}, {"baseFunctions": [1660], "body": {"id": 633, "nodeType": "Block", "src": "5291:70:12", "statements": [{"expression": {"arguments": [{"id": 628, "name": "amount", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 622, "src": "5332:6:12", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, {"arguments": [], "expression": {"argumentTypes": [], "id": 629, "name": "totalSupply", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1842, "src": "5340:11:12", "typeDescriptions": {"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$", "typeString": "function () view returns (uint256)"}}, "id": 630, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "5340:13:12", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_uint256", "typeString": "uint256"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}], "id": 627, "name": "calculateTokensForPrice", "nodeType": "Identifier", "overloadedDeclarations": [634, 797], "referencedDeclaration": 797, "src": "5308:23:12", "typeDescriptions": {"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$", "typeString": "function (uint256,uint256) pure returns (uint256)"}}, "id": 631, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "5308:46:12", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "functionReturnParameters": 626, "id": 632, "nodeType": "Return", "src": "5301:53:12"}]}, "documentation": {"id": 620, "nodeType": "StructuredDocumentation", "src": "4926:267:12", "text": " @dev Calculates the amount of tokens that can be bought with a given amount of Ether.\n @param amount The amount of Ether to calculate the token amount for.\n @return The amount of tokens that can be bought with the given amount of Ether."}, "functionSelector": "b9615a6e", "id": 634, "implemented": true, "kind": "function", "modifiers": [], "name": "calculateTokensForPrice", "nameLocation": "5207:23:12", "nodeType": "FunctionDefinition", "parameters": {"id": 623, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 622, "mutability": "mutable", "name": "amount", "nameLocation": "5248:6:12", "nodeType": "VariableDeclaration", "scope": 634, "src": "5240:14:12", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 621, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "5240:7:12", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "src": "5230:30:12"}, "returnParameters": {"id": 626, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 625, "mutability": "mutable", "name": "", "nameLocation": "-1:-1:-1", "nodeType": "VariableDeclaration", "scope": 634, "src": "5282:7:12", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 624, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "5282:7:12", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "src": "5281:9:12"}, "scope": 892, "src": "5198:163:12", "stateMutability": "view", "virtual": false, "visibility": "public"}, {"baseFunctions": [1230], "body": {"id": 655, "nodeType": "Block", "src": "5642:68:12", "statements": [{"expression": {"expression": {"expression": {"id": 651, "name": "IERC1363Receiver", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1231, "src": "5659:16:12", "typeDescriptions": {"typeIdentifier": "t_type$_t_contract$_IERC1363Receiver_$1231_$", "typeString": "type(contract IERC1363Receiver)"}}, "id": 652, "isConstant": false, "isLValue": false, "isPure": true, "lValueRequested": false, "memberName": "onTransferReceived", "nodeType": "MemberAccess", "referencedDeclaration": 1230, "src": "5659:35:12", "typeDescriptions": {"typeIdentifier": "t_function_declaration_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_calldata_ptr_$returns$_t_bytes4_$", "typeString": "function IERC1363Receiver.onTransferReceived(address,address,uint256,bytes calldata) returns (bytes4)"}}, "id": 653, "isConstant": false, "isLValue": false, "isPure": true, "lValueRequested": false, "memberName": "selector", "nodeType": "MemberAccess", "src": "5659:44:12", "typeDescriptions": {"typeIdentifier": "t_bytes4", "typeString": "bytes4"}}, "functionReturnParameters": 650, "id": 654, "nodeType": "Return", "src": "5652:51:12"}]}, "documentation": {"id": 635, "nodeType": "StructuredDocumentation", "src": "5367:104:12", "text": " @dev Called by ERC1363 to indicate that tokens have been transferred to the contract."}, "functionSelector": "88a7ca5c", "id": 656, "implemented": true, "kind": "function", "modifiers": [{"id": 647, "kind": "modifierInvocation", "modifierName": {"id": 646, "name": "onlyAllowedToken", "nodeType": "IdentifierPath", "referencedDeclaration": 364, "src": "5608:16:12"}, "nodeType": "ModifierInvocation", "src": "5608:16:12"}], "name": "onTransferReceived", "nameLocation": "5485:18:12", "nodeType": "FunctionDefinition", "overrides": {"id": 645, "nodeType": "OverrideSpecifier", "overrides": [], "src": "5599:8:12"}, "parameters": {"id": 644, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 637, "mutability": "mutable", "name": "", "nameLocation": "-1:-1:-1", "nodeType": "VariableDeclaration", "scope": 656, "src": "5513:7:12", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}, "typeName": {"id": 636, "name": "address", "nodeType": "ElementaryTypeName", "src": "5513:7:12", "stateMutability": "nonpayable", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "visibility": "internal"}, {"constant": false, "id": 639, "mutability": "mutable", "name": "", "nameLocation": "-1:-1:-1", "nodeType": "VariableDeclaration", "scope": 656, "src": "5530:7:12", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}, "typeName": {"id": 638, "name": "address", "nodeType": "ElementaryTypeName", "src": "5530:7:12", "stateMutability": "nonpayable", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "visibility": "internal"}, {"constant": false, "id": 641, "mutability": "mutable", "name": "", "nameLocation": "-1:-1:-1", "nodeType": "VariableDeclaration", "scope": 656, "src": "5547:7:12", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 640, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "5547:7:12", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}, {"constant": false, "id": 643, "mutability": "mutable", "name": "", "nameLocation": "-1:-1:-1", "nodeType": "VariableDeclaration", "scope": 656, "src": "5564:14:12", "stateVariable": false, "storageLocation": "calldata", "typeDescriptions": {"typeIdentifier": "t_bytes_calldata_ptr", "typeString": "bytes"}, "typeName": {"id": 642, "name": "bytes", "nodeType": "ElementaryTypeName", "src": "5564:5:12", "typeDescriptions": {"typeIdentifier": "t_bytes_storage_ptr", "typeString": "bytes"}}, "visibility": "internal"}], "src": "5503:81:12"}, "returnParameters": {"id": 650, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 649, "mutability": "mutable", "name": "", "nameLocation": "-1:-1:-1", "nodeType": "VariableDeclaration", "scope": 656, "src": "5634:6:12", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_bytes4", "typeString": "bytes4"}, "typeName": {"id": 648, "name": "bytes4", "nodeType": "ElementaryTypeName", "src": "5634:6:12", "typeDescriptions": {"typeIdentifier": "t_bytes4", "typeString": "bytes4"}}, "visibility": "internal"}], "src": "5633:8:12"}, "scope": 892, "src": "5476:234:12", "stateMutability": "view", "virtual": false, "visibility": "external"}, {"body": {"id": 705, "nodeType": "Block", "src": "5980:296:12", "statements": [{"expression": {"arguments": [{"commonType": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "id": 668, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"expression": {"id": 665, "name": "msg", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": -15, "src": "5998:3:12", "typeDescriptions": {"typeIdentifier": "t_magic_message", "typeString": "msg"}}, "id": 666, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "value", "nodeType": "MemberAccess", "src": "5998:9:12", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "BinaryOperation", "operator": ">", "rightExpression": {"hexValue": "30", "id": 667, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "6010:1:12", "typeDescriptions": {"typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0"}, "value": "0"}, "src": "5998:13:12", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, {"hexValue": "496e73756666696369656e742066756e6473", "id": 669, "isConstant": false, "isLValue": false, "isPure": true, "kind": "string", "lValueRequested": false, "nodeType": "Literal", "src": "6013:20:12", "typeDescriptions": {"typeIdentifier": "t_stringliteral_63452317cb6d597bef833f023ed2962a84dbd24c571e27629ed1e3056d6cfd8d", "typeString": "literal_string \"Insufficient funds\""}, "value": "Insufficient funds"}], "expression": {"argumentTypes": [{"typeIdentifier": "t_bool", "typeString": "bool"}, {"typeIdentifier": "t_stringliteral_63452317cb6d597bef833f023ed2962a84dbd24c571e27629ed1e3056d6cfd8d", "typeString": "literal_string \"Insufficient funds\""}], "id": 664, "name": "require", "nodeType": "Identifier", "overloadedDeclarations": [-18, -18], "referencedDeclaration": -18, "src": "5990:7:12", "typeDescriptions": {"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$", "typeString": "function (bool,string memory) pure"}}, "id": 670, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "5990:44:12", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 671, "nodeType": "ExpressionStatement", "src": "5990:44:12"}, {"assignments": [673], "declarations": [{"constant": false, "id": 673, "mutability": "mutable", "name": "amount", "nameLocation": "6052:6:12", "nodeType": "VariableDeclaration", "scope": 705, "src": "6044:14:12", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 672, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "6044:7:12", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "id": 678, "initialValue": {"arguments": [{"expression": {"id": 675, "name": "msg", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": -15, "src": "6085:3:12", "typeDescriptions": {"typeIdentifier": "t_magic_message", "typeString": "msg"}}, "id": 676, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "value", "nodeType": "MemberAccess", "src": "6085:9:12", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_uint256", "typeString": "uint256"}], "id": 674, "name": "calculateTokensForPrice", "nodeType": "Identifier", "overloadedDeclarations": [634, 797], "referencedDeclaration": 634, "src": "6061:23:12", "typeDescriptions": {"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_uint256_$", "typeString": "function (uint256) view returns (uint256)"}}, "id": 677, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "6061:34:12", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "VariableDeclarationStatement", "src": "6044:51:12"}, {"assignments": [680], "declarations": [{"constant": false, "id": 680, "mutability": "mutable", "name": "decoded", "nameLocation": "6113:7:12", "nodeType": "VariableDeclaration", "scope": 705, "src": "6105:15:12", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 679, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "6105:7:12", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "id": 688, "initialValue": {"arguments": [{"id": 683, "name": "_input", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 659, "src": "6134:6:12", "typeDescriptions": {"typeIdentifier": "t_bytes_calldata_ptr", "typeString": "bytes calldata"}}, {"components": [{"id": 685, "isConstant": false, "isLValue": false, "isPure": true, "lValueRequested": false, "nodeType": "ElementaryTypeNameExpression", "src": "6143:7:12", "typeDescriptions": {"typeIdentifier": "t_type$_t_uint256_$", "typeString": "type(uint256)"}, "typeName": {"id": 684, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "6143:7:12", "typeDescriptions": {}}}], "id": 686, "isConstant": false, "isInlineArray": false, "isLValue": false, "isPure": true, "lValueRequested": false, "nodeType": "TupleExpression", "src": "6142:9:12", "typeDescriptions": {"typeIdentifier": "t_type$_t_uint256_$", "typeString": "type(uint256)"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_bytes_calldata_ptr", "typeString": "bytes calldata"}, {"typeIdentifier": "t_type$_t_uint256_$", "typeString": "type(uint256)"}], "expression": {"id": 681, "name": "abi", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": -1, "src": "6123:3:12", "typeDescriptions": {"typeIdentifier": "t_magic_abi", "typeString": "abi"}}, "id": 682, "isConstant": false, "isLValue": false, "isPure": true, "lValueRequested": false, "memberName": "decode", "nodeType": "MemberAccess", "src": "6123:10:12", "typeDescriptions": {"typeIdentifier": "t_function_abidecode_pure$__$returns$__$", "typeString": "function () pure"}}, "id": 687, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "6123:29:12", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "VariableDeclarationStatement", "src": "6105:47:12"}, {"expression": {"arguments": [{"commonType": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "id": 692, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"id": 690, "name": "amount", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 673, "src": "6170:6:12", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "BinaryOperation", "operator": ">=", "rightExpression": {"id": 691, "name": "decoded", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 680, "src": "6180:7:12", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "6170:17:12", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, {"hexValue": "416d6f756e74206973206e6f7420636f7272656374", "id": 693, "isConstant": false, "isLValue": false, "isPure": true, "kind": "string", "lValueRequested": false, "nodeType": "Literal", "src": "6189:23:12", "typeDescriptions": {"typeIdentifier": "t_stringliteral_b001ffb150e556bccd8e30a98d2d84ca3b68298d4c9818d94e3183262fa5f9ba", "typeString": "literal_string \"Amount is not correct\""}, "value": "Amount is not correct"}], "expression": {"argumentTypes": [{"typeIdentifier": "t_bool", "typeString": "bool"}, {"typeIdentifier": "t_stringliteral_b001ffb150e556bccd8e30a98d2d84ca3b68298d4c9818d94e3183262fa5f9ba", "typeString": "literal_string \"Amount is not correct\""}], "id": 689, "name": "require", "nodeType": "Identifier", "overloadedDeclarations": [-18, -18], "referencedDeclaration": -18, "src": "6162:7:12", "typeDescriptions": {"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$", "typeString": "function (bool,string memory) pure"}}, "id": 694, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "6162:51:12", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 695, "nodeType": "ExpressionStatement", "src": "6162:51:12"}, {"expression": {"arguments": [{"id": 697, "name": "amount", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 673, "src": "6227:6:12", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_uint256", "typeString": "uint256"}], "id": 696, "name": "buy", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 437, "src": "6223:3:12", "typeDescriptions": {"typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$__$", "typeString": "function (uint256)"}}, "id": 698, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "6223:11:12", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 699, "nodeType": "ExpressionStatement", "src": "6223:11:12"}, {"expression": {"arguments": [{"id": 702, "name": "amount", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 673, "src": "6262:6:12", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_uint256", "typeString": "uint256"}], "expression": {"id": 700, "name": "abi", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": -1, "src": "6251:3:12", "typeDescriptions": {"typeIdentifier": "t_magic_abi", "typeString": "abi"}}, "id": 701, "isConstant": false, "isLValue": false, "isPure": true, "lValueRequested": false, "memberName": "encode", "nodeType": "MemberAccess", "src": "6251:10:12", "typeDescriptions": {"typeIdentifier": "t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$", "typeString": "function () pure returns (bytes memory)"}}, "id": 703, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "6251:18:12", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_bytes_memory_ptr", "typeString": "bytes memory"}}, "functionReturnParameters": 663, "id": 704, "nodeType": "Return", "src": "6244:25:12"}]}, "documentation": {"id": 657, "nodeType": "StructuredDocumentation", "src": "5716:165:12", "text": " @dev Allows the contract to receive Ether by calling the buy function with the amount of tokens\n that can be bought with the received Ether."}, "id": 706, "implemented": true, "kind": "fallback", "modifiers": [], "name": "", "nameLocation": "-1:-1:-1", "nodeType": "FunctionDefinition", "parameters": {"id": 660, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 659, "mutability": "mutable", "name": "_input", "nameLocation": "5919:6:12", "nodeType": "VariableDeclaration", "scope": 706, "src": "5904:21:12", "stateVariable": false, "storageLocation": "calldata", "typeDescriptions": {"typeIdentifier": "t_bytes_calldata_ptr", "typeString": "bytes"}, "typeName": {"id": 658, "name": "bytes", "nodeType": "ElementaryTypeName", "src": "5904:5:12", "typeDescriptions": {"typeIdentifier": "t_bytes_storage_ptr", "typeString": "bytes"}}, "visibility": "internal"}], "src": "5894:37:12"}, "returnParameters": {"id": 663, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 662, "mutability": "mutable", "name": "_output", "nameLocation": "5971:7:12", "nodeType": "VariableDeclaration", "scope": 706, "src": "5958:20:12", "stateVariable": false, "storageLocation": "memory", "typeDescriptions": {"typeIdentifier": "t_bytes_memory_ptr", "typeString": "bytes"}, "typeName": {"id": 661, "name": "bytes", "nodeType": "ElementaryTypeName", "src": "5958:5:12", "typeDescriptions": {"typeIdentifier": "t_bytes_storage_ptr", "typeString": "bytes"}}, "visibility": "internal"}], "src": "5957:22:12"}, "scope": 892, "src": "5886:390:12", "stateMutability": "payable", "virtual": false, "visibility": "external"}, {"body": {"id": 713, "nodeType": "Block", "src": "6309:40:12", "statements": [{"expression": {"arguments": [{"hexValue": "4e6f7420737570706f72746564", "id": 710, "isConstant": false, "isLValue": false, "isPure": true, "kind": "string", "lValueRequested": false, "nodeType": "Literal", "src": "6326:15:12", "typeDescriptions": {"typeIdentifier": "t_stringliteral_e5b7c22b986abeee436d3f29779441c97ce367faa95f4de1bae94ece3817df25", "typeString": "literal_string \"Not supported\""}, "value": "Not supported"}], "expression": {"argumentTypes": [{"typeIdentifier": "t_stringliteral_e5b7c22b986abeee436d3f29779441c97ce367faa95f4de1bae94ece3817df25", "typeString": "literal_string \"Not supported\""}], "id": 709, "name": "revert", "nodeType": "Identifier", "overloadedDeclarations": [-19, -19], "referencedDeclaration": -19, "src": "6319:6:12", "typeDescriptions": {"typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$", "typeString": "function (string memory) pure"}}, "id": 711, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "6319:23:12", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 712, "nodeType": "ExpressionStatement", "src": "6319:23:12"}]}, "id": 714, "implemented": true, "kind": "receive", "modifiers": [], "name": "", "nameLocation": "-1:-1:-1", "nodeType": "FunctionDefinition", "parameters": {"id": 707, "nodeType": "ParameterList", "parameters": [], "src": "6289:2:12"}, "returnParameters": {"id": 708, "nodeType": "ParameterList", "parameters": [], "src": "6309:0:12"}, "scope": 892, "src": "6282:67:12", "stateMutability": "payable", "virtual": false, "visibility": "external"}, {"body": {"id": 752, "nodeType": "Block", "src": "6818:136:12", "statements": [{"expression": {"commonType": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "id": 750, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"components": [{"commonType": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "id": 744, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"components": [{"commonType": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "id": 741, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"components": [{"commonType": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "id": 738, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"commonType": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "id": 731, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"components": [{"commonType": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "id": 728, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"commonType": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "id": 726, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"id": 724, "name": "supply", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 719, "src": "6851:6:12", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "BinaryOperation", "operator": "+", "rightExpression": {"id": 725, "name": "amount", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 717, "src": "6860:6:12", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "6851:15:12", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "BinaryOperation", "operator": "+", "rightExpression": {"hexValue": "31", "id": 727, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "6869:1:12", "typeDescriptions": {"typeIdentifier": "t_rational_1_by_1", "typeString": "int_const 1"}, "value": "1"}, "src": "6851:19:12", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "id": 729, "isConstant": false, "isInlineArray": false, "isLValue": false, "isPure": false, "lValueRequested": false, "nodeType": "TupleExpression", "src": "6850:21:12", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "BinaryOperation", "operator": "**", "rightExpression": {"hexValue": "33", "id": 730, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "6875:1:12", "typeDescriptions": {"typeIdentifier": "t_rational_3_by_1", "typeString": "int_const 3"}, "value": "3"}, "src": "6850:26:12", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "BinaryOperation", "operator": "-", "rightExpression": {"commonType": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "id": 737, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"components": [{"commonType": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "id": 734, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"id": 732, "name": "supply", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 719, "src": "6880:6:12", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "BinaryOperation", "operator": "+", "rightExpression": {"hexValue": "31", "id": 733, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "6889:1:12", "typeDescriptions": {"typeIdentifier": "t_rational_1_by_1", "typeString": "int_const 1"}, "value": "1"}, "src": "6880:10:12", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "id": 735, "isConstant": false, "isInlineArray": false, "isLValue": false, "isPure": false, "lValueRequested": false, "nodeType": "TupleExpression", "src": "6879:12:12", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "BinaryOperation", "operator": "**", "rightExpression": {"hexValue": "33", "id": 736, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "6895:1:12", "typeDescriptions": {"typeIdentifier": "t_rational_3_by_1", "typeString": "int_const 3"}, "value": "3"}, "src": "6879:17:12", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "6850:46:12", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "id": 739, "isConstant": false, "isInlineArray": false, "isLValue": false, "isPure": false, "lValueRequested": false, "nodeType": "TupleExpression", "src": "6849:48:12", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "BinaryOperation", "operator": "*", "rightExpression": {"id": 740, "name": "MULTIPLIER", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 342, "src": "6900:10:12", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "6849:61:12", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "id": 742, "isConstant": false, "isInlineArray": false, "isLValue": false, "isPure": false, "lValueRequested": false, "nodeType": "TupleExpression", "src": "6848:63:12", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "BinaryOperation", "operator": "/", "rightExpression": {"hexValue": "33", "id": 743, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "6930:1:12", "typeDescriptions": {"typeIdentifier": "t_rational_3_by_1", "typeString": "int_const 3"}, "value": "3"}, "src": "6848:83:12", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "id": 745, "isConstant": false, "isInlineArray": false, "isLValue": false, "isPure": false, "lValueRequested": false, "nodeType": "TupleExpression", "src": "6847:85:12", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "BinaryOperation", "operator": "-", "rightExpression": {"components": [{"commonType": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "id": 748, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"id": 746, "name": "amount", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 717, "src": "6936:6:12", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "BinaryOperation", "operator": "/", "rightExpression": {"hexValue": "33", "id": 747, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "6945:1:12", "typeDescriptions": {"typeIdentifier": "t_rational_3_by_1", "typeString": "int_const 3"}, "value": "3"}, "src": "6936:10:12", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "id": 749, "isConstant": false, "isInlineArray": false, "isLValue": false, "isPure": false, "lValueRequested": false, "nodeType": "TupleExpression", "src": "6935:12:12", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "6847:100:12", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "functionReturnParameters": 723, "id": 751, "nodeType": "Return", "src": "6828:119:12"}]}, "documentation": {"id": 715, "nodeType": "StructuredDocumentation", "src": "6355:341:12", "text": " @dev The `calculatePriceForTokens` function takes an amount of tokens and the current token supply\n as input and returns the cost of purchasing that amount of tokens in Ether.\n priceForTokens = poolBalance(tokenSupply + amount) - poolBalance(tokenSupply)\n poolBalance = ((tokenSupply + 1) ^ 3) / 3"}, "functionSelector": "dce29da8", "id": 753, "implemented": true, "kind": "function", "modifiers": [], "name": "calculatePriceForTokens", "nameLocation": "6710:23:12", "nodeType": "FunctionDefinition", "parameters": {"id": 720, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 717, "mutability": "mutable", "name": "amount", "nameLocation": "6751:6:12", "nodeType": "VariableDeclaration", "scope": 753, "src": "6743:14:12", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 716, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "6743:7:12", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}, {"constant": false, "id": 719, "mutability": "mutable", "name": "supply", "nameLocation": "6775:6:12", "nodeType": "VariableDeclaration", "scope": 753, "src": "6767:14:12", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 718, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "6767:7:12", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "src": "6733:54:12"}, "returnParameters": {"id": 723, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 722, "mutability": "mutable", "name": "", "nameLocation": "-1:-1:-1", "nodeType": "VariableDeclaration", "scope": 753, "src": "6809:7:12", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 721, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "6809:7:12", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "src": "6808:9:12"}, "scope": 892, "src": "6701:253:12", "stateMutability": "pure", "virtual": false, "visibility": "public"}, {"body": {"id": 796, "nodeType": "Block", "src": "7296:179:12", "statements": [{"assignments": [764], "declarations": [{"constant": false, "id": 764, "mutability": "mutable", "name": "root", "nameLocation": "7314:4:12", "nodeType": "VariableDeclaration", "scope": 796, "src": "7306:12:12", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 763, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "7306:7:12", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "id": 780, "initialValue": {"arguments": [{"commonType": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "id": 778, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"commonType": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "id": 771, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"components": [{"commonType": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "id": 768, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"id": 766, "name": "amount", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 756, "src": "7331:6:12", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "BinaryOperation", "operator": "/", "rightExpression": {"id": 767, "name": "MULTIPLIER", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 342, "src": "7340:10:12", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "7331:19:12", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "id": 769, "isConstant": false, "isInlineArray": false, "isLValue": false, "isPure": false, "lValueRequested": false, "nodeType": "TupleExpression", "src": "7330:21:12", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "BinaryOperation", "operator": "*", "rightExpression": {"hexValue": "33", "id": 770, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "7354:1:12", "typeDescriptions": {"typeIdentifier": "t_rational_3_by_1", "typeString": "int_const 3"}, "value": "3"}, "src": "7330:25:12", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "BinaryOperation", "operator": "+", "rightExpression": {"commonType": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "id": 777, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"components": [{"commonType": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "id": 774, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"id": 772, "name": "supply", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 758, "src": "7359:6:12", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "BinaryOperation", "operator": "+", "rightExpression": {"hexValue": "31", "id": 773, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "7368:1:12", "typeDescriptions": {"typeIdentifier": "t_rational_1_by_1", "typeString": "int_const 1"}, "value": "1"}, "src": "7359:10:12", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "id": 775, "isConstant": false, "isInlineArray": false, "isLValue": false, "isPure": false, "lValueRequested": false, "nodeType": "TupleExpression", "src": "7358:12:12", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "BinaryOperation", "operator": "**", "rightExpression": {"hexValue": "33", "id": 776, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "7374:1:12", "typeDescriptions": {"typeIdentifier": "t_rational_3_by_1", "typeString": "int_const 3"}, "value": "3"}, "src": "7358:17:12", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "7330:45:12", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_uint256", "typeString": "uint256"}], "id": 765, "name": "cubeRoot", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 811, "src": "7321:8:12", "typeDescriptions": {"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$", "typeString": "function (uint256) pure returns (uint256)"}}, "id": 779, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "7321:55:12", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "VariableDeclarationStatement", "src": "7306:70:12"}, {"expression": {"arguments": [{"commonType": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "id": 786, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"id": 782, "name": "root", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 764, "src": "7394:4:12", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "BinaryOperation", "operator": ">=", "rightExpression": {"commonType": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "id": 785, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"id": 783, "name": "supply", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 758, "src": "7402:6:12", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "BinaryOperation", "operator": "+", "rightExpression": {"hexValue": "31", "id": 784, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "7411:1:12", "typeDescriptions": {"typeIdentifier": "t_rational_1_by_1", "typeString": "int_const 1"}, "value": "1"}, "src": "7402:10:12", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "7394:18:12", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, {"hexValue": "416d6f756e7420697320746f6f206c6f77", "id": 787, "isConstant": false, "isLValue": false, "isPure": true, "kind": "string", "lValueRequested": false, "nodeType": "Literal", "src": "7414:19:12", "typeDescriptions": {"typeIdentifier": "t_stringliteral_1f9e408fc562ed96d7ff0b5930451369a9db20d5afd1b6cdb3f6a01fc7197181", "typeString": "literal_string \"Amount is too low\""}, "value": "Amount is too low"}], "expression": {"argumentTypes": [{"typeIdentifier": "t_bool", "typeString": "bool"}, {"typeIdentifier": "t_stringliteral_1f9e408fc562ed96d7ff0b5930451369a9db20d5afd1b6cdb3f6a01fc7197181", "typeString": "literal_string \"Amount is too low\""}], "id": 781, "name": "require", "nodeType": "Identifier", "overloadedDeclarations": [-18, -18], "referencedDeclaration": -18, "src": "7386:7:12", "typeDescriptions": {"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$", "typeString": "function (bool,string memory) pure"}}, "id": 788, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "7386:48:12", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 789, "nodeType": "ExpressionStatement", "src": "7386:48:12"}, {"expression": {"commonType": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "id": 794, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"commonType": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "id": 792, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"id": 790, "name": "root", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 764, "src": "7451:4:12", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "BinaryOperation", "operator": "-", "rightExpression": {"id": 791, "name": "supply", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 758, "src": "7458:6:12", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "7451:13:12", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "BinaryOperation", "operator": "-", "rightExpression": {"hexValue": "31", "id": 793, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "7467:1:12", "typeDescriptions": {"typeIdentifier": "t_rational_1_by_1", "typeString": "int_const 1"}, "value": "1"}, "src": "7451:17:12", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "functionReturnParameters": 762, "id": 795, "nodeType": "Return", "src": "7444:24:12"}]}, "documentation": {"id": 754, "nodeType": "StructuredDocumentation", "src": "6960:214:12", "text": " @dev The `calculateTokensForPrice` function takes an amount of Ether and the current token supply\n as input and returns the number of tokens that can be purchased with that amount of Ether."}, "functionSelector": "18d8e8e0", "id": 797, "implemented": true, "kind": "function", "modifiers": [], "name": "calculateTokensForPrice", "nameLocation": "7188:23:12", "nodeType": "FunctionDefinition", "parameters": {"id": 759, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 756, "mutability": "mutable", "name": "amount", "nameLocation": "7229:6:12", "nodeType": "VariableDeclaration", "scope": 797, "src": "7221:14:12", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 755, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "7221:7:12", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}, {"constant": false, "id": 758, "mutability": "mutable", "name": "supply", "nameLocation": "7253:6:12", "nodeType": "VariableDeclaration", "scope": 797, "src": "7245:14:12", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 757, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "7245:7:12", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "src": "7211:54:12"}, "returnParameters": {"id": 762, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 761, "mutability": "mutable", "name": "", "nameLocation": "-1:-1:-1", "nodeType": "VariableDeclaration", "scope": 797, "src": "7287:7:12", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 760, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "7287:7:12", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "src": "7286:9:12"}, "scope": 892, "src": "7179:296:12", "stateMutability": "pure", "virtual": false, "visibility": "public"}, {"body": {"id": 810, "nodeType": "Block", "src": "7726:37:12", "statements": [{"expression": {"arguments": [{"id": 806, "name": "n", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 800, "src": "7751:1:12", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, {"hexValue": "33", "id": 807, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "7754:1:12", "typeDescriptions": {"typeIdentifier": "t_rational_3_by_1", "typeString": "int_const 3"}, "value": "3"}], "expression": {"argumentTypes": [{"typeIdentifier": "t_uint256", "typeString": "uint256"}, {"typeIdentifier": "t_rational_3_by_1", "typeString": "int_const 3"}], "id": 805, "name": "nthRoot", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 891, "src": "7743:7:12", "typeDescriptions": {"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$", "typeString": "function (uint256,uint256) pure returns (uint256)"}}, "id": 808, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "7743:13:12", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "functionReturnParameters": 804, "id": 809, "nodeType": "Return", "src": "7736:20:12"}]}, "documentation": {"id": 798, "nodeType": "StructuredDocumentation", "src": "7481:179:12", "text": " @dev The `cubeRoot` function calculates the cube root of a non-negative integer using the nthRoot\n function implemented using the binary search algorithm."}, "id": 811, "implemented": true, "kind": "function", "modifiers": [], "name": "cubeRoot", "nameLocation": "7674:8:12", "nodeType": "FunctionDefinition", "parameters": {"id": 801, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 800, "mutability": "mutable", "name": "n", "nameLocation": "7691:1:12", "nodeType": "VariableDeclaration", "scope": 811, "src": "7683:9:12", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 799, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "7683:7:12", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "src": "7682:11:12"}, "returnParameters": {"id": 804, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 803, "mutability": "mutable", "name": "", "nameLocation": "-1:-1:-1", "nodeType": "VariableDeclaration", "scope": 811, "src": "7717:7:12", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 802, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "7717:7:12", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "src": "7716:9:12"}, "scope": 892, "src": "7665:98:12", "stateMutability": "pure", "virtual": false, "visibility": "internal"}, {"body": {"id": 890, "nodeType": "Block", "src": "9091:532:12", "statements": [{"expression": {"arguments": [{"commonType": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "id": 824, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"id": 822, "name": "n", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 816, "src": "9109:1:12", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "BinaryOperation", "operator": ">", "rightExpression": {"hexValue": "30", "id": 823, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "9113:1:12", "typeDescriptions": {"typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0"}, "value": "0"}, "src": "9109:5:12", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, {"hexValue": "526f6f74206d75737420626520706f736974697665", "id": 825, "isConstant": false, "isLValue": false, "isPure": true, "kind": "string", "lValueRequested": false, "nodeType": "Literal", "src": "9116:23:12", "typeDescriptions": {"typeIdentifier": "t_stringliteral_a7c8b102f04622c9e1fa30a38b1274cce1419722c213051ae5bdfcbdab32d56b", "typeString": "literal_string \"Root must be positive\""}, "value": "Root must be positive"}], "expression": {"argumentTypes": [{"typeIdentifier": "t_bool", "typeString": "bool"}, {"typeIdentifier": "t_stringliteral_a7c8b102f04622c9e1fa30a38b1274cce1419722c213051ae5bdfcbdab32d56b", "typeString": "literal_string \"Root must be positive\""}], "id": 821, "name": "require", "nodeType": "Identifier", "overloadedDeclarations": [-18, -18], "referencedDeclaration": -18, "src": "9101:7:12", "typeDescriptions": {"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$", "typeString": "function (bool,string memory) pure"}}, "id": 826, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "9101:39:12", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 827, "nodeType": "ExpressionStatement", "src": "9101:39:12"}, {"condition": {"commonType": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "id": 830, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"id": 828, "name": "x", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 814, "src": "9155:1:12", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "BinaryOperation", "operator": "==", "rightExpression": {"hexValue": "30", "id": 829, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "9160:1:12", "typeDescriptions": {"typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0"}, "value": "0"}, "src": "9155:6:12", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "id": 834, "nodeType": "IfStatement", "src": "9151:45:12", "trueBody": {"id": 833, "nodeType": "Block", "src": "9163:33:12", "statements": [{"expression": {"hexValue": "30", "id": 831, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "9184:1:12", "typeDescriptions": {"typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0"}, "value": "0"}, "functionReturnParameters": 820, "id": 832, "nodeType": "Return", "src": "9177:8:12"}]}}, {"assignments": [836], "declarations": [{"constant": false, "id": 836, "mutability": "mutable", "name": "left", "nameLocation": "9214:4:12", "nodeType": "VariableDeclaration", "scope": 890, "src": "9206:12:12", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 835, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "9206:7:12", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "id": 838, "initialValue": {"hexValue": "30", "id": 837, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "9221:1:12", "typeDescriptions": {"typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0"}, "value": "0"}, "nodeType": "VariableDeclarationStatement", "src": "9206:16:12"}, {"assignments": [840], "declarations": [{"constant": false, "id": 840, "mutability": "mutable", "name": "right", "nameLocation": "9240:5:12", "nodeType": "VariableDeclaration", "scope": 890, "src": "9232:13:12", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 839, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "9232:7:12", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "id": 842, "initialValue": {"id": 841, "name": "x", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 814, "src": "9248:1:12", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "VariableDeclarationStatement", "src": "9232:17:12"}, {"body": {"id": 884, "nodeType": "Block", "src": "9281:310:12", "statements": [{"assignments": [847], "declarations": [{"constant": false, "id": 847, "mutability": "mutable", "name": "mid", "nameLocation": "9303:3:12", "nodeType": "VariableDeclaration", "scope": 884, "src": "9295:11:12", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 846, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "9295:7:12", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "id": 854, "initialValue": {"commonType": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "id": 853, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"components": [{"commonType": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "id": 850, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"id": 848, "name": "left", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 836, "src": "9310:4:12", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "BinaryOperation", "operator": "+", "rightExpression": {"id": 849, "name": "right", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 840, "src": "9317:5:12", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "9310:12:12", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "id": 851, "isConstant": false, "isInlineArray": false, "isLValue": false, "isPure": false, "lValueRequested": false, "nodeType": "TupleExpression", "src": "9309:14:12", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "BinaryOperation", "operator": "/", "rightExpression": {"hexValue": "32", "id": 852, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "9326:1:12", "typeDescriptions": {"typeIdentifier": "t_rational_2_by_1", "typeString": "int_const 2"}, "value": "2"}, "src": "9309:18:12", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "VariableDeclarationStatement", "src": "9295:32:12"}, {"assignments": [856], "declarations": [{"constant": false, "id": 856, "mutability": "mutable", "name": "midToNthPower", "nameLocation": "9349:13:12", "nodeType": "VariableDeclaration", "scope": 884, "src": "9341:21:12", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 855, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "9341:7:12", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "id": 860, "initialValue": {"commonType": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "id": 859, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"id": 857, "name": "mid", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 847, "src": "9365:3:12", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "BinaryOperation", "operator": "**", "rightExpression": {"id": 858, "name": "n", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 816, "src": "9372:1:12", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "9365:8:12", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "VariableDeclarationStatement", "src": "9341:32:12"}, {"condition": {"commonType": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "id": 863, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"id": 861, "name": "midToNthPower", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 856, "src": "9392:13:12", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "BinaryOperation", "operator": "==", "rightExpression": {"id": 862, "name": "x", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 814, "src": "9409:1:12", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "9392:18:12", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "falseBody": {"condition": {"commonType": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "id": 869, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"id": 867, "name": "midToNthPower", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 856, "src": "9465:13:12", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "BinaryOperation", "operator": "<", "rightExpression": {"id": 868, "name": "x", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 814, "src": "9481:1:12", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "9465:17:12", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "falseBody": {"id": 881, "nodeType": "Block", "src": "9537:44:12", "statements": [{"expression": {"id": 879, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"id": 877, "name": "right", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 840, "src": "9555:5:12", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"id": 878, "name": "mid", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 847, "src": "9563:3:12", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "9555:11:12", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 880, "nodeType": "ExpressionStatement", "src": "9555:11:12"}]}, "id": 882, "nodeType": "IfStatement", "src": "9461:120:12", "trueBody": {"id": 876, "nodeType": "Block", "src": "9484:47:12", "statements": [{"expression": {"id": 874, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"id": 870, "name": "left", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 836, "src": "9502:4:12", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"commonType": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "id": 873, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"id": 871, "name": "mid", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 847, "src": "9509:3:12", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "BinaryOperation", "operator": "+", "rightExpression": {"hexValue": "31", "id": 872, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "9515:1:12", "typeDescriptions": {"typeIdentifier": "t_rational_1_by_1", "typeString": "int_const 1"}, "value": "1"}, "src": "9509:7:12", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "9502:14:12", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 875, "nodeType": "ExpressionStatement", "src": "9502:14:12"}]}}, "id": 883, "nodeType": "IfStatement", "src": "9388:193:12", "trueBody": {"id": 866, "nodeType": "Block", "src": "9412:43:12", "statements": [{"expression": {"id": 864, "name": "mid", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 847, "src": "9437:3:12", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "functionReturnParameters": 820, "id": 865, "nodeType": "Return", "src": "9430:10:12"}]}}]}, "condition": {"commonType": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "id": 845, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"id": 843, "name": "left", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 836, "src": "9267:4:12", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "BinaryOperation", "operator": "<", "rightExpression": {"id": 844, "name": "right", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 840, "src": "9274:5:12", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "9267:12:12", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "id": 885, "nodeType": "WhileStatement", "src": "9260:331:12"}, {"expression": {"commonType": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "id": 888, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"id": 886, "name": "left", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 836, "src": "9608:4:12", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "BinaryOperation", "operator": "-", "rightExpression": {"hexValue": "31", "id": 887, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "9615:1:12", "typeDescriptions": {"typeIdentifier": "t_rational_1_by_1", "typeString": "int_const 1"}, "value": "1"}, "src": "9608:8:12", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "functionReturnParameters": 820, "id": 889, "nodeType": "Return", "src": "9601:15:12"}]}, "documentation": {"id": 812, "nodeType": "StructuredDocumentation", "src": "7769:1246:12", "text": " @dev  The nthRoot function calculates the integer n-th root of a non-negative integer x\n using the binary search algorithm. The function begins by initializing the search\n range to [0, x]. At each iteration of the loop, the function calculates the midpoint\n mid of the search range and raises it to the n-th power. If mid^n is equal to x,\n the function returns mid as the result. If mid^n is less than x, the search range is\n updated to the right half of the previous range. If mid^n is greater than x, the search\n range is updated to the left half of the previous range. The loop terminates when\n the search range is reduced to a single integer value, which is then returned as the\n largest integer y such that y^n <= x.\n Note: The binary search algorithm implemented in the nthRoot function has a time complexity\n of O(log x), which makes it more efficient than Newton's method for large values of x.\n However, the binary search algorithm can only calculate the integer n-th root of a\n non-negative integer x. It cannot be used to calculate the real-valued n-th root of a\n non-negative real number x, which is a limitation of the algorithm."}, "id": 891, "implemented": true, "kind": "function", "modifiers": [], "name": "nthRoot", "nameLocation": "9029:7:12", "nodeType": "FunctionDefinition", "parameters": {"id": 817, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 814, "mutability": "mutable", "name": "x", "nameLocation": "9045:1:12", "nodeType": "VariableDeclaration", "scope": 891, "src": "9037:9:12", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 813, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "9037:7:12", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}, {"constant": false, "id": 816, "mutability": "mutable", "name": "n", "nameLocation": "9056:1:12", "nodeType": "VariableDeclaration", "scope": 891, "src": "9048:9:12", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 815, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "9048:7:12", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "src": "9036:22:12"}, "returnParameters": {"id": 820, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 819, "mutability": "mutable", "name": "", "nameLocation": "-1:-1:-1", "nodeType": "VariableDeclaration", "scope": 891, "src": "9082:7:12", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 818, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "9082:7:12", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "src": "9081:9:12"}, "scope": 892, "src": "9020:603:12", "stateMutability": "pure", "virtual": false, "visibility": "internal"}], "scope": 893, "src": "771:8854:12", "usedErrors": []}], "src": "32:9594:12"}}, "/Users/vladimirtrifonov/src/playground/solidity/rare-skills/advanced-solidity-bootcamp/fuzzing-with-echidna/bonding-token/src/IBondingToken.sol": {"AST": {"absolutePath": "src/IBondingToken.sol", "exportedSymbols": {"IBondingToken": [1661]}, "id": 1662, "license": "MIT", "nodeType": "SourceUnit", "nodes": [{"id": 1617, "literals": ["solidity", "0.8", ".15"], "nodeType": "PragmaDirective", "src": "32:23:13"}, {"abstract": false, "baseContracts": [], "canonicalName": "IBondingToken", "contractDependencies": [], "contractKind": "interface", "documentation": {"id": 1618, "nodeType": "StructuredDocumentation", "src": "57:142:13", "text": " @title IBondingToken\n @dev Interface for a bonding token contract that allows buying and selling of tokens at a calculated price."}, "fullyImplemented": false, "id": 1661, "linearizedBaseContracts": [1661], "name": "IBondingToken", "nameLocation": "210:13:13", "nodeType": "ContractDefinition", "nodes": [{"anonymous": false, "documentation": {"id": 1619, "nodeType": "StructuredDocumentation", "src": "230:163:13", "text": " @dev Emitted when tokens are bought.\n @param account The account that bought the tokens.\n @param amount The amount of tokens bought."}, "eventSelector": "e3d4187f6ca4248660cc0ac8b8056515bac4a8132be2eca31d6d0cc170722a7e", "id": 1625, "name": "Buy", "nameLocation": "404:3:13", "nodeType": "EventDefinition", "parameters": {"id": 1624, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 1621, "indexed": true, "mutability": "mutable", "name": "account", "nameLocation": "424:7:13", "nodeType": "VariableDeclaration", "scope": 1625, "src": "408:23:13", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}, "typeName": {"id": 1620, "name": "address", "nodeType": "ElementaryTypeName", "src": "408:7:13", "stateMutability": "nonpayable", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "visibility": "internal"}, {"constant": false, "id": 1623, "indexed": false, "mutability": "mutable", "name": "amount", "nameLocation": "441:6:13", "nodeType": "VariableDeclaration", "scope": 1625, "src": "433:14:13", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 1622, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "433:7:13", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "src": "407:41:13"}, "src": "398:51:13"}, {"anonymous": false, "documentation": {"id": 1626, "nodeType": "StructuredDocumentation", "src": "459:157:13", "text": " @dev Emitted when tokens are sold.\n @param account The account that sold the tokens.\n @param amount The amount of tokens sold."}, "eventSelector": "5e5e995ce3133561afceaa51a9a154d5db228cd7525d34df5185582c18d3df09", "id": 1632, "name": "Sell", "nameLocation": "627:4:13", "nodeType": "EventDefinition", "parameters": {"id": 1631, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 1628, "indexed": true, "mutability": "mutable", "name": "account", "nameLocation": "648:7:13", "nodeType": "VariableDeclaration", "scope": 1632, "src": "632:23:13", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}, "typeName": {"id": 1627, "name": "address", "nodeType": "ElementaryTypeName", "src": "632:7:13", "stateMutability": "nonpayable", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "visibility": "internal"}, {"constant": false, "id": 1630, "indexed": false, "mutability": "mutable", "name": "amount", "nameLocation": "665:6:13", "nodeType": "VariableDeclaration", "scope": 1632, "src": "657:14:13", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 1629, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "657:7:13", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "src": "631:41:13"}, "src": "621:52:13"}, {"documentation": {"id": 1633, "nodeType": "StructuredDocumentation", "src": "679:116:13", "text": " @dev Buy tokens with ETH at a calculated price.\n @param amount The amount of tokens to buy."}, "functionSelector": "d96a094a", "id": 1638, "implemented": false, "kind": "function", "modifiers": [], "name": "buy", "nameLocation": "809:3:13", "nodeType": "FunctionDefinition", "parameters": {"id": 1636, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 1635, "mutability": "mutable", "name": "amount", "nameLocation": "821:6:13", "nodeType": "VariableDeclaration", "scope": 1638, "src": "813:14:13", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 1634, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "813:7:13", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "src": "812:16:13"}, "returnParameters": {"id": 1637, "nodeType": "ParameterList", "parameters": [], "src": "845:0:13"}, "scope": 1661, "src": "800:46:13", "stateMutability": "payable", "virtual": false, "visibility": "external"}, {"documentation": {"id": 1639, "nodeType": "StructuredDocumentation", "src": "856:125:13", "text": " @dev Sell tokens at a calculated price and receive ETH.\n @param amount The amount of tokens to sell."}, "functionSelector": "e4849b32", "id": 1644, "implemented": false, "kind": "function", "modifiers": [], "name": "sell", "nameLocation": "995:4:13", "nodeType": "FunctionDefinition", "parameters": {"id": 1642, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 1641, "mutability": "mutable", "name": "amount", "nameLocation": "1008:6:13", "nodeType": "VariableDeclaration", "scope": 1644, "src": "1000:14:13", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 1640, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "1000:7:13", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "src": "999:16:13"}, "returnParameters": {"id": 1643, "nodeType": "ParameterList", "parameters": [], "src": "1024:0:13"}, "scope": 1661, "src": "986:39:13", "stateMutability": "nonpayable", "virtual": false, "visibility": "external"}, {"documentation": {"id": 1645, "nodeType": "StructuredDocumentation", "src": "1035:213:13", "text": " @dev Calculate the price for a given amount of tokens.\n @param amount The amount of tokens to calculate the price for.\n @return A The calculated price for the given amount of tokens."}, "functionSelector": "465fa408", "id": 1652, "implemented": false, "kind": "function", "modifiers": [], "name": "calculatePriceForTokens", "nameLocation": "1262:23:13", "nodeType": "FunctionDefinition", "parameters": {"id": 1648, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 1647, "mutability": "mutable", "name": "amount", "nameLocation": "1294:6:13", "nodeType": "VariableDeclaration", "scope": 1652, "src": "1286:14:13", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 1646, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "1286:7:13", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "src": "1285:16:13"}, "returnParameters": {"id": 1651, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 1650, "mutability": "mutable", "name": "", "nameLocation": "-1:-1:-1", "nodeType": "VariableDeclaration", "scope": 1652, "src": "1325:7:13", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 1649, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "1325:7:13", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "src": "1324:9:13"}, "scope": 1661, "src": "1253:81:13", "stateMutability": "view", "virtual": false, "visibility": "external"}, {"documentation": {"id": 1653, "nodeType": "StructuredDocumentation", "src": "1344:213:13", "text": " @dev Calculate the amount of tokens for a given price.\n @param amount The price to calculate the amount of tokens for.\n @return A The calculated amount of tokens for the given price."}, "functionSelector": "b9615a6e", "id": 1660, "implemented": false, "kind": "function", "modifiers": [], "name": "calculateTokensForPrice", "nameLocation": "1571:23:13", "nodeType": "FunctionDefinition", "parameters": {"id": 1656, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 1655, "mutability": "mutable", "name": "amount", "nameLocation": "1603:6:13", "nodeType": "VariableDeclaration", "scope": 1660, "src": "1595:14:13", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 1654, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "1595:7:13", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "src": "1594:16:13"}, "returnParameters": {"id": 1659, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 1658, "mutability": "mutable", "name": "", "nameLocation": "-1:-1:-1", "nodeType": "VariableDeclaration", "scope": 1660, "src": "1634:7:13", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 1657, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "1634:7:13", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "src": "1633:9:13"}, "scope": 1661, "src": "1562:81:13", "stateMutability": "view", "virtual": false, "visibility": "external"}], "scope": 1662, "src": "200:1445:13", "usedErrors": []}], "src": "32:1614:13"}}, "/Users/vladimirtrifonov/src/playground/solidity/rare-skills/advanced-solidity-bootcamp/fuzzing-with-echidna/bonding-token/test/TestBondingToken.sol": {"AST": {"absolutePath": "test/TestBondingToken.sol", "exportedSymbols": {"Address": [1615], "BondingToken": [892], "Context": [2505], "ERC1363": [1213], "ERC165": [2368], "ERC20": [2344], "IBondingToken": [1661], "IERC1363": [1741], "IERC1363Receiver": [1231], "IERC1363Spender": [1757], "IERC165": [2458], "IERC20": [2446], "IERC20Metadata": [2483], "ReentrancyGuard": [1285], "TestBondingToken": [321]}, "id": 322, "license": "MIT", "nodeType": "SourceUnit", "nodes": [{"id": 1, "literals": ["solidity", "0.8", ".15"], "nodeType": "PragmaDirective", "src": "32:23:14"}, {"absolutePath": "src/BondingToken.sol", "file": "../src/BondingToken.sol", "id": 2, "nameLocation": "-1:-1:-1", "nodeType": "ImportDirective", "scope": 322, "sourceUnit": 893, "src": "57:33:14", "symbolAliases": [], "unitAlias": ""}, {"abstract": false, "baseContracts": [], "canonicalName": "TestBondingToken", "contractDependencies": [892], "contractKind": "contract", "documentation": {"id": 3, "nodeType": "StructuredDocumentation", "src": "92:185:14", "text": "@dev Run the template with\n      ```\n      solc-select use 0.8.19\n      echidna ./test/TestBondingToken.sol --contract TestBondingToken --config ./config.yaml\n      ```"}, "fullyImplemented": true, "id": 321, "linearizedBaseContracts": [321], "name": "TestBondingToken", "nameLocation": "286:16:14", "nodeType": "ContractDefinition", "nodes": [{"constant": false, "id": 6, "mutability": "mutable", "name": "bondingToken", "nameLocation": "322:12:14", "nodeType": "VariableDeclaration", "scope": 321, "src": "309:25:14", "stateVariable": true, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_contract$_BondingToken_$892", "typeString": "contract BondingToken"}, "typeName": {"id": 5, "nodeType": "UserDefinedTypeName", "pathNode": {"id": 4, "name": "BondingToken", "nodeType": "IdentifierPath", "referencedDeclaration": 892, "src": "309:12:14"}, "referencedDeclaration": 892, "src": "309:12:14", "typeDescriptions": {"typeIdentifier": "t_contract$_BondingToken_$892", "typeString": "contract BondingToken"}}, "visibility": "internal"}, {"anonymous": false, "eventSelector": "ce422aac32fa3a960eff96496b10fd05b1688cfaa1f8d2732407f0c4ac52dbc1", "id": 14, "name": "Balance", "nameLocation": "347:7:14", "nodeType": "EventDefinition", "parameters": {"id": 13, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 8, "indexed": false, "mutability": "mutable", "name": "amount", "nameLocation": "363:6:14", "nodeType": "VariableDeclaration", "scope": 14, "src": "355:14:14", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 7, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "355:7:14", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}, {"constant": false, "id": 10, "indexed": false, "mutability": "mutable", "name": "price", "nameLocation": "379:5:14", "nodeType": "VariableDeclaration", "scope": 14, "src": "371:13:14", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 9, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "371:7:14", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}, {"constant": false, "id": 12, "indexed": false, "mutability": "mutable", "name": "balance", "nameLocation": "394:7:14", "nodeType": "VariableDeclaration", "scope": 14, "src": "386:15:14", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 11, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "386:7:14", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "src": "354:48:14"}, "src": "341:62:14"}, {"body": {"id": 26, "nodeType": "Block", "src": "431:75:14", "statements": [{"expression": {"id": 24, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"id": 17, "name": "bondingToken", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 6, "src": "441:12:14", "typeDescriptions": {"typeIdentifier": "t_contract$_BondingToken_$892", "typeString": "contract BondingToken"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"arguments": [{"hexValue": "54657374426f6e64696e67546f6b656e", "id": 21, "isConstant": false, "isLValue": false, "isPure": true, "kind": "string", "lValueRequested": false, "nodeType": "Literal", "src": "473:18:14", "typeDescriptions": {"typeIdentifier": "t_stringliteral_867c31f18520bc4b4fb66d485db9294313e4921c781b8b8758c5db1683693dcd", "typeString": "literal_string \"TestBondingToken\""}, "value": "TestBondingToken"}, {"hexValue": "544254", "id": 22, "isConstant": false, "isLValue": false, "isPure": true, "kind": "string", "lValueRequested": false, "nodeType": "Literal", "src": "493:5:14", "typeDescriptions": {"typeIdentifier": "t_stringliteral_74f9fb06bee41b7173ae90e93067dc03e5c1f7be266d2bbb0e68a6e2988f49b5", "typeString": "literal_string \"TBT\""}, "value": "TBT"}], "expression": {"argumentTypes": [{"typeIdentifier": "t_stringliteral_867c31f18520bc4b4fb66d485db9294313e4921c781b8b8758c5db1683693dcd", "typeString": "literal_string \"TestBondingToken\""}, {"typeIdentifier": "t_stringliteral_74f9fb06bee41b7173ae90e93067dc03e5c1f7be266d2bbb0e68a6e2988f49b5", "typeString": "literal_string \"TBT\""}], "id": 20, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "nodeType": "NewExpression", "src": "456:16:14", "typeDescriptions": {"typeIdentifier": "t_function_creation_nonpayable$_t_string_memory_ptr_$_t_string_memory_ptr_$returns$_t_contract$_BondingToken_$892_$", "typeString": "function (string memory,string memory) returns (contract BondingToken)"}, "typeName": {"id": 19, "nodeType": "UserDefinedTypeName", "pathNode": {"id": 18, "name": "BondingToken", "nodeType": "IdentifierPath", "referencedDeclaration": 892, "src": "460:12:14"}, "referencedDeclaration": 892, "src": "460:12:14", "typeDescriptions": {"typeIdentifier": "t_contract$_BondingToken_$892", "typeString": "contract BondingToken"}}}, "id": 23, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "456:43:14", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_contract$_BondingToken_$892", "typeString": "contract BondingToken"}}, "src": "441:58:14", "typeDescriptions": {"typeIdentifier": "t_contract$_BondingToken_$892", "typeString": "contract BondingToken"}}, "id": 25, "nodeType": "ExpressionStatement", "src": "441:58:14"}]}, "id": 27, "implemented": true, "kind": "constructor", "modifiers": [], "name": "", "nameLocation": "-1:-1:-1", "nodeType": "FunctionDefinition", "parameters": {"id": 15, "nodeType": "ParameterList", "parameters": [], "src": "420:2:14"}, "returnParameters": {"id": 16, "nodeType": "ParameterList", "parameters": [], "src": "431:0:14"}, "scope": 321, "src": "409:97:14", "stateMutability": "payable", "virtual": false, "visibility": "public"}, {"body": {"id": 93, "nodeType": "Block", "src": "553:411:14", "statements": [{"expression": {"id": 41, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"id": 32, "name": "amount", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 29, "src": "563:6:14", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"condition": {"commonType": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "id": 35, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"id": 33, "name": "amount", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 29, "src": "572:6:14", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "BinaryOperation", "operator": ">", "rightExpression": {"hexValue": "30", "id": 34, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "581:1:14", "typeDescriptions": {"typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0"}, "value": "0"}, "src": "572:10:14", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "falseExpression": {"arguments": [], "expression": {"argumentTypes": [], "expression": {"id": 37, "name": "bondingToken", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 6, "src": "594:12:14", "typeDescriptions": {"typeIdentifier": "t_contract$_BondingToken_$892", "typeString": "contract BondingToken"}}, "id": 38, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "MAX_BUY_AMOUNT_PER_TX", "nodeType": "MemberAccess", "referencedDeclaration": 345, "src": "594:34:14", "typeDescriptions": {"typeIdentifier": "t_function_external_view$__$returns$_t_uint256_$", "typeString": "function () view external returns (uint256)"}}, "id": 39, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "594:36:14", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 40, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "nodeType": "Conditional", "src": "572:58:14", "trueExpression": {"id": 36, "name": "amount", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 29, "src": "585:6:14", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "563:67:14", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 42, "nodeType": "ExpressionStatement", "src": "563:67:14"}, {"expression": {"id": 52, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"id": 43, "name": "amount", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 29, "src": "640:6:14", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"commonType": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "id": 51, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"hexValue": "31", "id": 44, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "649:1:14", "typeDescriptions": {"typeIdentifier": "t_rational_1_by_1", "typeString": "int_const 1"}, "value": "1"}, "nodeType": "BinaryOperation", "operator": "+", "rightExpression": {"components": [{"commonType": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "id": 49, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"id": 45, "name": "amount", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 29, "src": "654:6:14", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "BinaryOperation", "operator": "%", "rightExpression": {"arguments": [], "expression": {"argumentTypes": [], "expression": {"id": 46, "name": "bondingToken", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 6, "src": "663:12:14", "typeDescriptions": {"typeIdentifier": "t_contract$_BondingToken_$892", "typeString": "contract BondingToken"}}, "id": 47, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "MAX_BUY_AMOUNT_PER_TX", "nodeType": "MemberAccess", "referencedDeclaration": 345, "src": "663:34:14", "typeDescriptions": {"typeIdentifier": "t_function_external_view$__$returns$_t_uint256_$", "typeString": "function () view external returns (uint256)"}}, "id": 48, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "663:36:14", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "654:45:14", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "id": 50, "isConstant": false, "isInlineArray": false, "isLValue": false, "isPure": false, "lValueRequested": false, "nodeType": "TupleExpression", "src": "653:47:14", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "649:51:14", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "640:60:14", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 53, "nodeType": "ExpressionStatement", "src": "640:60:14"}, {"assignments": [55], "declarations": [{"constant": false, "id": 55, "mutability": "mutable", "name": "balance", "nameLocation": "718:7:14", "nodeType": "VariableDeclaration", "scope": 93, "src": "710:15:14", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 54, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "710:7:14", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "id": 63, "initialValue": {"arguments": [{"arguments": [{"id": 60, "name": "this", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": -28, "src": "759:4:14", "typeDescriptions": {"typeIdentifier": "t_contract$_TestBondingToken_$321", "typeString": "contract TestBondingToken"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_contract$_TestBondingToken_$321", "typeString": "contract TestBondingToken"}], "id": 59, "isConstant": false, "isLValue": false, "isPure": true, "lValueRequested": false, "nodeType": "ElementaryTypeNameExpression", "src": "751:7:14", "typeDescriptions": {"typeIdentifier": "t_type$_t_address_$", "typeString": "type(address)"}, "typeName": {"id": 58, "name": "address", "nodeType": "ElementaryTypeName", "src": "751:7:14", "typeDescriptions": {}}}, "id": 61, "isConstant": false, "isLValue": false, "isPure": false, "kind": "typeConversion", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "751:13:14", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_address", "typeString": "address"}], "expression": {"id": 56, "name": "bondingToken", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 6, "src": "728:12:14", "typeDescriptions": {"typeIdentifier": "t_contract$_BondingToken_$892", "typeString": "contract BondingToken"}}, "id": 57, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "balanceOf", "nodeType": "MemberAccess", "referencedDeclaration": 1856, "src": "728:22:14", "typeDescriptions": {"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$", "typeString": "function (address) view external returns (uint256)"}}, "id": 62, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "728:37:14", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "VariableDeclarationStatement", "src": "710:55:14"}, {"assignments": [65], "declarations": [{"constant": false, "id": 65, "mutability": "mutable", "name": "cost", "nameLocation": "783:4:14", "nodeType": "VariableDeclaration", "scope": 93, "src": "775:12:14", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 64, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "775:7:14", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "id": 70, "initialValue": {"arguments": [{"id": 68, "name": "amount", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 29, "src": "827:6:14", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_uint256", "typeString": "uint256"}], "expression": {"id": 66, "name": "bondingToken", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 6, "src": "790:12:14", "typeDescriptions": {"typeIdentifier": "t_contract$_BondingToken_$892", "typeString": "contract BondingToken"}}, "id": 67, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "calculatePriceForTokens", "nodeType": "MemberAccess", "referencedDeclaration": 619, "src": "790:36:14", "typeDescriptions": {"typeIdentifier": "t_function_external_view$_t_uint256_$returns$_t_uint256_$", "typeString": "function (uint256) view external returns (uint256)"}}, "id": 69, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "790:44:14", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "VariableDeclarationStatement", "src": "775:59:14"}, {"expression": {"arguments": [{"id": 76, "name": "amount", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 29, "src": "874:6:14", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_uint256", "typeString": "uint256"}], "expression": {"argumentTypes": [{"typeIdentifier": "t_uint256", "typeString": "uint256"}], "expression": {"id": 71, "name": "bondingToken", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 6, "src": "844:12:14", "typeDescriptions": {"typeIdentifier": "t_contract$_BondingToken_$892", "typeString": "contract BondingToken"}}, "id": 73, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "buy", "nodeType": "MemberAccess", "referencedDeclaration": 437, "src": "844:16:14", "typeDescriptions": {"typeIdentifier": "t_function_external_payable$_t_uint256_$returns$__$", "typeString": "function (uint256) payable external"}}, "id": 75, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "names": ["value"], "nodeType": "FunctionCallOptions", "options": [{"id": 74, "name": "cost", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 65, "src": "868:4:14", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "src": "844:29:14", "typeDescriptions": {"typeIdentifier": "t_function_external_payable$_t_uint256_$returns$__$value", "typeString": "function (uint256) payable external"}}, "id": 77, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "844:37:14", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 78, "nodeType": "ExpressionStatement", "src": "844:37:14"}, {"expression": {"arguments": [{"commonType": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "id": 90, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"arguments": [{"arguments": [{"id": 84, "name": "this", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": -28, "src": "930:4:14", "typeDescriptions": {"typeIdentifier": "t_contract$_TestBondingToken_$321", "typeString": "contract TestBondingToken"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_contract$_TestBondingToken_$321", "typeString": "contract TestBondingToken"}], "id": 83, "isConstant": false, "isLValue": false, "isPure": true, "lValueRequested": false, "nodeType": "ElementaryTypeNameExpression", "src": "922:7:14", "typeDescriptions": {"typeIdentifier": "t_type$_t_address_$", "typeString": "type(address)"}, "typeName": {"id": 82, "name": "address", "nodeType": "ElementaryTypeName", "src": "922:7:14", "typeDescriptions": {}}}, "id": 85, "isConstant": false, "isLValue": false, "isPure": false, "kind": "typeConversion", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "922:13:14", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_address", "typeString": "address"}], "expression": {"id": 80, "name": "bondingToken", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 6, "src": "899:12:14", "typeDescriptions": {"typeIdentifier": "t_contract$_BondingToken_$892", "typeString": "contract BondingToken"}}, "id": 81, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "balanceOf", "nodeType": "MemberAccess", "referencedDeclaration": 1856, "src": "899:22:14", "typeDescriptions": {"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$", "typeString": "function (address) view external returns (uint256)"}}, "id": 86, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "899:37:14", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "BinaryOperation", "operator": "==", "rightExpression": {"commonType": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "id": 89, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"id": 87, "name": "balance", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 55, "src": "940:7:14", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "BinaryOperation", "operator": "+", "rightExpression": {"id": 88, "name": "amount", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 29, "src": "950:6:14", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "940:16:14", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "899:57:14", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_bool", "typeString": "bool"}], "id": 79, "name": "assert", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": -3, "src": "892:6:14", "typeDescriptions": {"typeIdentifier": "t_function_assert_pure$_t_bool_$returns$__$", "typeString": "function (bool) pure"}}, "id": 91, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "892:65:14", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 92, "nodeType": "ExpressionStatement", "src": "892:65:14"}]}, "functionSelector": "03625507", "id": 94, "implemented": true, "kind": "function", "modifiers": [], "name": "test_buy", "nameLocation": "521:8:14", "nodeType": "FunctionDefinition", "parameters": {"id": 30, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 29, "mutability": "mutable", "name": "amount", "nameLocation": "538:6:14", "nodeType": "VariableDeclaration", "scope": 94, "src": "530:14:14", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 28, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "530:7:14", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "src": "529:16:14"}, "returnParameters": {"id": 31, "nodeType": "ParameterList", "parameters": [], "src": "553:0:14"}, "scope": 321, "src": "512:452:14", "stateMutability": "nonpayable", "virtual": false, "visibility": "public"}, {"body": {"id": 215, "nodeType": "Block", "src": "1026:1029:14", "statements": [{"expression": {"id": 110, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"id": 101, "name": "amount", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 96, "src": "1036:6:14", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"condition": {"commonType": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "id": 104, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"id": 102, "name": "amount", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 96, "src": "1045:6:14", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "BinaryOperation", "operator": ">", "rightExpression": {"hexValue": "30", "id": 103, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "1054:1:14", "typeDescriptions": {"typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0"}, "value": "0"}, "src": "1045:10:14", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "falseExpression": {"arguments": [], "expression": {"argumentTypes": [], "expression": {"id": 106, "name": "bondingToken", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 6, "src": "1067:12:14", "typeDescriptions": {"typeIdentifier": "t_contract$_BondingToken_$892", "typeString": "contract BondingToken"}}, "id": 107, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "MAX_BUY_AMOUNT_PER_TX", "nodeType": "MemberAccess", "referencedDeclaration": 345, "src": "1067:34:14", "typeDescriptions": {"typeIdentifier": "t_function_external_view$__$returns$_t_uint256_$", "typeString": "function () view external returns (uint256)"}}, "id": 108, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "1067:36:14", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 109, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "nodeType": "Conditional", "src": "1045:58:14", "trueExpression": {"id": 105, "name": "amount", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 96, "src": "1058:6:14", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "1036:67:14", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 111, "nodeType": "ExpressionStatement", "src": "1036:67:14"}, {"condition": {"id": 112, "name": "isBuy", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 98, "src": "1117:5:14", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "falseBody": {"id": 203, "nodeType": "Block", "src": "1339:604:14", "statements": [{"assignments": [141], "declarations": [{"constant": false, "id": 141, "mutability": "mutable", "name": "balance", "nameLocation": "1361:7:14", "nodeType": "VariableDeclaration", "scope": 203, "src": "1353:15:14", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 140, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "1353:7:14", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "id": 149, "initialValue": {"arguments": [{"arguments": [{"id": 146, "name": "this", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": -28, "src": "1402:4:14", "typeDescriptions": {"typeIdentifier": "t_contract$_TestBondingToken_$321", "typeString": "contract TestBondingToken"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_contract$_TestBondingToken_$321", "typeString": "contract TestBondingToken"}], "id": 145, "isConstant": false, "isLValue": false, "isPure": true, "lValueRequested": false, "nodeType": "ElementaryTypeNameExpression", "src": "1394:7:14", "typeDescriptions": {"typeIdentifier": "t_type$_t_address_$", "typeString": "type(address)"}, "typeName": {"id": 144, "name": "address", "nodeType": "ElementaryTypeName", "src": "1394:7:14", "typeDescriptions": {}}}, "id": 147, "isConstant": false, "isLValue": false, "isPure": false, "kind": "typeConversion", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "1394:13:14", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_address", "typeString": "address"}], "expression": {"id": 142, "name": "bondingToken", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 6, "src": "1371:12:14", "typeDescriptions": {"typeIdentifier": "t_contract$_BondingToken_$892", "typeString": "contract BondingToken"}}, "id": 143, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "balanceOf", "nodeType": "MemberAccess", "referencedDeclaration": 1856, "src": "1371:22:14", "typeDescriptions": {"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$", "typeString": "function (address) view external returns (uint256)"}}, "id": 148, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "1371:37:14", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "VariableDeclarationStatement", "src": "1353:55:14"}, {"condition": {"commonType": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "id": 152, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"id": 150, "name": "balance", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 141, "src": "1426:7:14", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "BinaryOperation", "operator": ">", "rightExpression": {"hexValue": "30", "id": 151, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "1436:1:14", "typeDescriptions": {"typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0"}, "value": "0"}, "src": "1426:11:14", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "id": 202, "nodeType": "IfStatement", "src": "1422:511:14", "trueBody": {"id": 201, "nodeType": "Block", "src": "1439:494:14", "statements": [{"expression": {"id": 160, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"id": 153, "name": "amount", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 96, "src": "1457:6:14", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"commonType": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "id": 159, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"hexValue": "31", "id": 154, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "1466:1:14", "typeDescriptions": {"typeIdentifier": "t_rational_1_by_1", "typeString": "int_const 1"}, "value": "1"}, "nodeType": "BinaryOperation", "operator": "+", "rightExpression": {"components": [{"commonType": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "id": 157, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"id": 155, "name": "amount", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 96, "src": "1471:6:14", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "BinaryOperation", "operator": "%", "rightExpression": {"id": 156, "name": "balance", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 141, "src": "1480:7:14", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "1471:16:14", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "id": 158, "isConstant": false, "isInlineArray": false, "isLValue": false, "isPure": false, "lValueRequested": false, "nodeType": "TupleExpression", "src": "1470:18:14", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "1466:22:14", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "1457:31:14", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 161, "nodeType": "ExpressionStatement", "src": "1457:31:14"}, {"expression": {"id": 169, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"id": 162, "name": "amount", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 96, "src": "1506:6:14", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"condition": {"commonType": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "id": 165, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"id": 163, "name": "amount", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 96, "src": "1515:6:14", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "BinaryOperation", "operator": ">", "rightExpression": {"hexValue": "30", "id": 164, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "1524:1:14", "typeDescriptions": {"typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0"}, "value": "0"}, "src": "1515:10:14", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "falseExpression": {"id": 167, "name": "balance", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 141, "src": "1537:7:14", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 168, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "nodeType": "Conditional", "src": "1515:29:14", "trueExpression": {"id": 166, "name": "amount", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 96, "src": "1528:6:14", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "1506:38:14", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 170, "nodeType": "ExpressionStatement", "src": "1506:38:14"}, {"clauses": [{"block": {"id": 179, "nodeType": "Block", "src": "1592:53:14", "statements": [{"expression": {"arguments": [{"hexValue": "74727565", "id": 176, "isConstant": false, "isLValue": false, "isPure": true, "kind": "bool", "lValueRequested": false, "nodeType": "Literal", "src": "1621:4:14", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}, "value": "true"}], "expression": {"argumentTypes": [{"typeIdentifier": "t_bool", "typeString": "bool"}], "id": 175, "name": "assert", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": -3, "src": "1614:6:14", "typeDescriptions": {"typeIdentifier": "t_function_assert_pure$_t_bool_$returns$__$", "typeString": "function (bool) pure"}}, "id": 177, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "1614:12:14", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 178, "nodeType": "ExpressionStatement", "src": "1614:12:14"}]}, "errorName": "", "id": 180, "nodeType": "TryCatchClause", "src": "1592:53:14"}, {"block": {"id": 198, "nodeType": "Block", "src": "1652:267:14", "statements": [{"eventCall": {"arguments": [{"id": 182, "name": "amount", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 96, "src": "1712:6:14", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, {"arguments": [{"id": 185, "name": "amount", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 96, "src": "1781:6:14", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_uint256", "typeString": "uint256"}], "expression": {"id": 183, "name": "bondingToken", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 6, "src": "1744:12:14", "typeDescriptions": {"typeIdentifier": "t_contract$_BondingToken_$892", "typeString": "contract BondingToken"}}, "id": 184, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "calculatePriceForTokens", "nodeType": "MemberAccess", "referencedDeclaration": 619, "src": "1744:36:14", "typeDescriptions": {"typeIdentifier": "t_function_external_view$_t_uint256_$returns$_t_uint256_$", "typeString": "function (uint256) view external returns (uint256)"}}, "id": 186, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "1744:44:14", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, {"expression": {"arguments": [{"id": 189, "name": "bondingToken", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 6, "src": "1822:12:14", "typeDescriptions": {"typeIdentifier": "t_contract$_BondingToken_$892", "typeString": "contract BondingToken"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_contract$_BondingToken_$892", "typeString": "contract BondingToken"}], "id": 188, "isConstant": false, "isLValue": false, "isPure": true, "lValueRequested": false, "nodeType": "ElementaryTypeNameExpression", "src": "1814:7:14", "typeDescriptions": {"typeIdentifier": "t_type$_t_address_$", "typeString": "type(address)"}, "typeName": {"id": 187, "name": "address", "nodeType": "ElementaryTypeName", "src": "1814:7:14", "typeDescriptions": {}}}, "id": 190, "isConstant": false, "isLValue": false, "isPure": false, "kind": "typeConversion", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "1814:21:14", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "id": 191, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "balance", "nodeType": "MemberAccess", "src": "1814:29:14", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_uint256", "typeString": "uint256"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}], "id": 181, "name": "Balance", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 14, "src": "1679:7:14", "typeDescriptions": {"typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_uint256_$_t_uint256_$returns$__$", "typeString": "function (uint256,uint256,uint256)"}}, "id": 192, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "1679:186:14", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 193, "nodeType": "EmitStatement", "src": "1674:191:14"}, {"expression": {"arguments": [{"hexValue": "66616c7365", "id": 195, "isConstant": false, "isLValue": false, "isPure": true, "kind": "bool", "lValueRequested": false, "nodeType": "Literal", "src": "1894:5:14", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}, "value": "false"}], "expression": {"argumentTypes": [{"typeIdentifier": "t_bool", "typeString": "bool"}], "id": 194, "name": "assert", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": -3, "src": "1887:6:14", "typeDescriptions": {"typeIdentifier": "t_function_assert_pure$_t_bool_$returns$__$", "typeString": "function (bool) pure"}}, "id": 196, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "1887:13:14", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 197, "nodeType": "ExpressionStatement", "src": "1887:13:14"}]}, "errorName": "", "id": 199, "nodeType": "TryCatchClause", "src": "1646:273:14"}], "externalCall": {"arguments": [{"id": 173, "name": "amount", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 96, "src": "1584:6:14", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_uint256", "typeString": "uint256"}], "expression": {"id": 171, "name": "bondingToken", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 6, "src": "1566:12:14", "typeDescriptions": {"typeIdentifier": "t_contract$_BondingToken_$892", "typeString": "contract BondingToken"}}, "id": 172, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "sell", "nodeType": "MemberAccess", "referencedDeclaration": 534, "src": "1566:17:14", "typeDescriptions": {"typeIdentifier": "t_function_external_nonpayable$_t_uint256_$returns$__$", "typeString": "function (uint256) external"}}, "id": 174, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "1566:25:14", "tryCall": true, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 200, "nodeType": "TryStatement", "src": "1562:357:14"}]}}]}, "id": 204, "nodeType": "IfStatement", "src": "1113:830:14", "trueBody": {"id": 139, "nodeType": "Block", "src": "1124:209:14", "statements": [{"expression": {"id": 122, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"id": 113, "name": "amount", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 96, "src": "1138:6:14", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"commonType": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "id": 121, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"hexValue": "31", "id": 114, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "1147:1:14", "typeDescriptions": {"typeIdentifier": "t_rational_1_by_1", "typeString": "int_const 1"}, "value": "1"}, "nodeType": "BinaryOperation", "operator": "+", "rightExpression": {"components": [{"commonType": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "id": 119, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"id": 115, "name": "amount", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 96, "src": "1152:6:14", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "BinaryOperation", "operator": "%", "rightExpression": {"arguments": [], "expression": {"argumentTypes": [], "expression": {"id": 116, "name": "bondingToken", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 6, "src": "1161:12:14", "typeDescriptions": {"typeIdentifier": "t_contract$_BondingToken_$892", "typeString": "contract BondingToken"}}, "id": 117, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "MAX_BUY_AMOUNT_PER_TX", "nodeType": "MemberAccess", "referencedDeclaration": 345, "src": "1161:34:14", "typeDescriptions": {"typeIdentifier": "t_function_external_view$__$returns$_t_uint256_$", "typeString": "function () view external returns (uint256)"}}, "id": 118, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "1161:36:14", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "1152:45:14", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "id": 120, "isConstant": false, "isInlineArray": false, "isLValue": false, "isPure": false, "lValueRequested": false, "nodeType": "TupleExpression", "src": "1151:47:14", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "1147:51:14", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "1138:60:14", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 123, "nodeType": "ExpressionStatement", "src": "1138:60:14"}, {"assignments": [125], "declarations": [{"constant": false, "id": 125, "mutability": "mutable", "name": "cost", "nameLocation": "1220:4:14", "nodeType": "VariableDeclaration", "scope": 139, "src": "1212:12:14", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 124, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "1212:7:14", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "id": 130, "initialValue": {"arguments": [{"id": 128, "name": "amount", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 96, "src": "1264:6:14", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_uint256", "typeString": "uint256"}], "expression": {"id": 126, "name": "bondingToken", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 6, "src": "1227:12:14", "typeDescriptions": {"typeIdentifier": "t_contract$_BondingToken_$892", "typeString": "contract BondingToken"}}, "id": 127, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "calculatePriceForTokens", "nodeType": "MemberAccess", "referencedDeclaration": 619, "src": "1227:36:14", "typeDescriptions": {"typeIdentifier": "t_function_external_view$_t_uint256_$returns$_t_uint256_$", "typeString": "function (uint256) view external returns (uint256)"}}, "id": 129, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "1227:44:14", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "VariableDeclarationStatement", "src": "1212:59:14"}, {"expression": {"arguments": [{"id": 136, "name": "amount", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 96, "src": "1315:6:14", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_uint256", "typeString": "uint256"}], "expression": {"argumentTypes": [{"typeIdentifier": "t_uint256", "typeString": "uint256"}], "expression": {"id": 131, "name": "bondingToken", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 6, "src": "1285:12:14", "typeDescriptions": {"typeIdentifier": "t_contract$_BondingToken_$892", "typeString": "contract BondingToken"}}, "id": 133, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "buy", "nodeType": "MemberAccess", "referencedDeclaration": 437, "src": "1285:16:14", "typeDescriptions": {"typeIdentifier": "t_function_external_payable$_t_uint256_$returns$__$", "typeString": "function (uint256) payable external"}}, "id": 135, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "names": ["value"], "nodeType": "FunctionCallOptions", "options": [{"id": 134, "name": "cost", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 125, "src": "1309:4:14", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "src": "1285:29:14", "typeDescriptions": {"typeIdentifier": "t_function_external_payable$_t_uint256_$returns$__$value", "typeString": "function (uint256) payable external"}}, "id": 137, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "1285:37:14", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 138, "nodeType": "ExpressionStatement", "src": "1285:37:14"}]}}, {"expression": {"arguments": [{"commonType": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "id": 212, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"arguments": [], "expression": {"argumentTypes": [], "expression": {"id": 206, "name": "bondingToken", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 6, "src": "1973:12:14", "typeDescriptions": {"typeIdentifier": "t_contract$_BondingToken_$892", "typeString": "contract BondingToken"}}, "id": 207, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "totalSupply", "nodeType": "MemberAccess", "referencedDeclaration": 1842, "src": "1973:24:14", "typeDescriptions": {"typeIdentifier": "t_function_external_view$__$returns$_t_uint256_$", "typeString": "function () view external returns (uint256)"}}, "id": 208, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "1973:26:14", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "BinaryOperation", "operator": "<=", "rightExpression": {"arguments": [], "expression": {"argumentTypes": [], "expression": {"id": 209, "name": "bondingToken", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 6, "src": "2003:12:14", "typeDescriptions": {"typeIdentifier": "t_contract$_BondingToken_$892", "typeString": "contract BondingToken"}}, "id": 210, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "MAX_SUPPLY_THRESHOLD", "nodeType": "MemberAccess", "referencedDeclaration": 348, "src": "2003:33:14", "typeDescriptions": {"typeIdentifier": "t_function_external_view$__$returns$_t_uint256_$", "typeString": "function () view external returns (uint256)"}}, "id": 211, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "2003:35:14", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "1973:65:14", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_bool", "typeString": "bool"}], "id": 205, "name": "assert", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": -3, "src": "1953:6:14", "typeDescriptions": {"typeIdentifier": "t_function_assert_pure$_t_bool_$returns$__$", "typeString": "function (bool) pure"}}, "id": 213, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "1953:95:14", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 214, "nodeType": "ExpressionStatement", "src": "1953:95:14"}]}, "functionSelector": "b236c6c2", "id": 216, "implemented": true, "kind": "function", "modifiers": [], "name": "test_supply", "nameLocation": "979:11:14", "nodeType": "FunctionDefinition", "parameters": {"id": 99, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 96, "mutability": "mutable", "name": "amount", "nameLocation": "999:6:14", "nodeType": "VariableDeclaration", "scope": 216, "src": "991:14:14", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 95, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "991:7:14", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}, {"constant": false, "id": 98, "mutability": "mutable", "name": "isBuy", "nameLocation": "1012:5:14", "nodeType": "VariableDeclaration", "scope": 216, "src": "1007:10:14", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}, "typeName": {"id": 97, "name": "bool", "nodeType": "ElementaryTypeName", "src": "1007:4:14", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "visibility": "internal"}], "src": "990:28:14"}, "returnParameters": {"id": 100, "nodeType": "ParameterList", "parameters": [], "src": "1026:0:14"}, "scope": 321, "src": "970:1085:14", "stateMutability": "nonpayable", "virtual": false, "visibility": "public"}, {"body": {"id": 315, "nodeType": "Block", "src": "2106:642:14", "statements": [{"expression": {"id": 230, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"id": 221, "name": "amount", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 218, "src": "2116:6:14", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"condition": {"commonType": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "id": 224, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"id": 222, "name": "amount", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 218, "src": "2125:6:14", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "BinaryOperation", "operator": ">", "rightExpression": {"hexValue": "30", "id": 223, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "2134:1:14", "typeDescriptions": {"typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0"}, "value": "0"}, "src": "2125:10:14", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "falseExpression": {"arguments": [], "expression": {"argumentTypes": [], "expression": {"id": 226, "name": "bondingToken", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 6, "src": "2147:12:14", "typeDescriptions": {"typeIdentifier": "t_contract$_BondingToken_$892", "typeString": "contract BondingToken"}}, "id": 227, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "MAX_BUY_AMOUNT_PER_TX", "nodeType": "MemberAccess", "referencedDeclaration": 345, "src": "2147:34:14", "typeDescriptions": {"typeIdentifier": "t_function_external_view$__$returns$_t_uint256_$", "typeString": "function () view external returns (uint256)"}}, "id": 228, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "2147:36:14", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 229, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "nodeType": "Conditional", "src": "2125:58:14", "trueExpression": {"id": 225, "name": "amount", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 218, "src": "2138:6:14", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "2116:67:14", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 231, "nodeType": "ExpressionStatement", "src": "2116:67:14"}, {"assignments": [233], "declarations": [{"constant": false, "id": 233, "mutability": "mutable", "name": "initialBalance", "nameLocation": "2201:14:14", "nodeType": "VariableDeclaration", "scope": 315, "src": "2193:22:14", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 232, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "2193:7:14", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "id": 241, "initialValue": {"arguments": [{"arguments": [{"id": 238, "name": "this", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": -28, "src": "2249:4:14", "typeDescriptions": {"typeIdentifier": "t_contract$_TestBondingToken_$321", "typeString": "contract TestBondingToken"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_contract$_TestBondingToken_$321", "typeString": "contract TestBondingToken"}], "id": 237, "isConstant": false, "isLValue": false, "isPure": true, "lValueRequested": false, "nodeType": "ElementaryTypeNameExpression", "src": "2241:7:14", "typeDescriptions": {"typeIdentifier": "t_type$_t_address_$", "typeString": "type(address)"}, "typeName": {"id": 236, "name": "address", "nodeType": "ElementaryTypeName", "src": "2241:7:14", "typeDescriptions": {}}}, "id": 239, "isConstant": false, "isLValue": false, "isPure": false, "kind": "typeConversion", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "2241:13:14", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_address", "typeString": "address"}], "expression": {"id": 234, "name": "bondingToken", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 6, "src": "2218:12:14", "typeDescriptions": {"typeIdentifier": "t_contract$_BondingToken_$892", "typeString": "contract BondingToken"}}, "id": 235, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "balanceOf", "nodeType": "MemberAccess", "referencedDeclaration": 1856, "src": "2218:22:14", "typeDescriptions": {"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$", "typeString": "function (address) view external returns (uint256)"}}, "id": 240, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "2218:37:14", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "VariableDeclarationStatement", "src": "2193:62:14"}, {"assignments": [243], "declarations": [{"constant": false, "id": 243, "mutability": "mutable", "name": "initialEth", "nameLocation": "2273:10:14", "nodeType": "VariableDeclaration", "scope": 315, "src": "2265:18:14", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 242, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "2265:7:14", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "id": 249, "initialValue": {"expression": {"arguments": [{"id": 246, "name": "this", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": -28, "src": "2294:4:14", "typeDescriptions": {"typeIdentifier": "t_contract$_TestBondingToken_$321", "typeString": "contract TestBondingToken"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_contract$_TestBondingToken_$321", "typeString": "contract TestBondingToken"}], "id": 245, "isConstant": false, "isLValue": false, "isPure": true, "lValueRequested": false, "nodeType": "ElementaryTypeNameExpression", "src": "2286:7:14", "typeDescriptions": {"typeIdentifier": "t_type$_t_address_$", "typeString": "type(address)"}, "typeName": {"id": 244, "name": "address", "nodeType": "ElementaryTypeName", "src": "2286:7:14", "typeDescriptions": {}}}, "id": 247, "isConstant": false, "isLValue": false, "isPure": false, "kind": "typeConversion", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "2286:13:14", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "id": 248, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "balance", "nodeType": "MemberAccess", "src": "2286:21:14", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "VariableDeclarationStatement", "src": "2265:42:14"}, {"expression": {"id": 259, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"id": 250, "name": "amount", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 218, "src": "2317:6:14", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"commonType": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "id": 258, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"hexValue": "31", "id": 251, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "2326:1:14", "typeDescriptions": {"typeIdentifier": "t_rational_1_by_1", "typeString": "int_const 1"}, "value": "1"}, "nodeType": "BinaryOperation", "operator": "+", "rightExpression": {"components": [{"commonType": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "id": 256, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"id": 252, "name": "amount", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 218, "src": "2331:6:14", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "BinaryOperation", "operator": "%", "rightExpression": {"arguments": [], "expression": {"argumentTypes": [], "expression": {"id": 253, "name": "bondingToken", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 6, "src": "2340:12:14", "typeDescriptions": {"typeIdentifier": "t_contract$_BondingToken_$892", "typeString": "contract BondingToken"}}, "id": 254, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "MAX_BUY_AMOUNT_PER_TX", "nodeType": "MemberAccess", "referencedDeclaration": 345, "src": "2340:34:14", "typeDescriptions": {"typeIdentifier": "t_function_external_view$__$returns$_t_uint256_$", "typeString": "function () view external returns (uint256)"}}, "id": 255, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "2340:36:14", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "2331:45:14", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "id": 257, "isConstant": false, "isInlineArray": false, "isLValue": false, "isPure": false, "lValueRequested": false, "nodeType": "TupleExpression", "src": "2330:47:14", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "2326:51:14", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "2317:60:14", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 260, "nodeType": "ExpressionStatement", "src": "2317:60:14"}, {"assignments": [262], "declarations": [{"constant": false, "id": 262, "mutability": "mutable", "name": "cost", "nameLocation": "2395:4:14", "nodeType": "VariableDeclaration", "scope": 315, "src": "2387:12:14", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 261, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "2387:7:14", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "id": 267, "initialValue": {"arguments": [{"id": 265, "name": "amount", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 218, "src": "2439:6:14", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_uint256", "typeString": "uint256"}], "expression": {"id": 263, "name": "bondingToken", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 6, "src": "2402:12:14", "typeDescriptions": {"typeIdentifier": "t_contract$_BondingToken_$892", "typeString": "contract BondingToken"}}, "id": 264, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "calculatePriceForTokens", "nodeType": "MemberAccess", "referencedDeclaration": 619, "src": "2402:36:14", "typeDescriptions": {"typeIdentifier": "t_function_external_view$_t_uint256_$returns$_t_uint256_$", "typeString": "function (uint256) view external returns (uint256)"}}, "id": 266, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "2402:44:14", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "VariableDeclarationStatement", "src": "2387:59:14"}, {"expression": {"arguments": [{"id": 273, "name": "amount", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 218, "src": "2486:6:14", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_uint256", "typeString": "uint256"}], "expression": {"argumentTypes": [{"typeIdentifier": "t_uint256", "typeString": "uint256"}], "expression": {"id": 268, "name": "bondingToken", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 6, "src": "2456:12:14", "typeDescriptions": {"typeIdentifier": "t_contract$_BondingToken_$892", "typeString": "contract BondingToken"}}, "id": 270, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "buy", "nodeType": "MemberAccess", "referencedDeclaration": 437, "src": "2456:16:14", "typeDescriptions": {"typeIdentifier": "t_function_external_payable$_t_uint256_$returns$__$", "typeString": "function (uint256) payable external"}}, "id": 272, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "names": ["value"], "nodeType": "FunctionCallOptions", "options": [{"id": 271, "name": "cost", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 262, "src": "2480:4:14", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "src": "2456:29:14", "typeDescriptions": {"typeIdentifier": "t_function_external_payable$_t_uint256_$returns$__$value", "typeString": "function (uint256) payable external"}}, "id": 274, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "2456:37:14", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 275, "nodeType": "ExpressionStatement", "src": "2456:37:14"}, {"clauses": [{"block": {"id": 284, "nodeType": "Block", "src": "2533:37:14", "statements": [{"expression": {"arguments": [{"hexValue": "74727565", "id": 281, "isConstant": false, "isLValue": false, "isPure": true, "kind": "bool", "lValueRequested": false, "nodeType": "Literal", "src": "2554:4:14", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}, "value": "true"}], "expression": {"argumentTypes": [{"typeIdentifier": "t_bool", "typeString": "bool"}], "id": 280, "name": "assert", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": -3, "src": "2547:6:14", "typeDescriptions": {"typeIdentifier": "t_function_assert_pure$_t_bool_$returns$__$", "typeString": "function (bool) pure"}}, "id": 282, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "2547:12:14", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 283, "nodeType": "ExpressionStatement", "src": "2547:12:14"}]}, "errorName": "", "id": 285, "nodeType": "TryCatchClause", "src": "2533:37:14"}, {"block": {"id": 290, "nodeType": "Block", "src": "2577:38:14", "statements": [{"expression": {"arguments": [{"hexValue": "66616c7365", "id": 287, "isConstant": false, "isLValue": false, "isPure": true, "kind": "bool", "lValueRequested": false, "nodeType": "Literal", "src": "2598:5:14", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}, "value": "false"}], "expression": {"argumentTypes": [{"typeIdentifier": "t_bool", "typeString": "bool"}], "id": 286, "name": "assert", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": -3, "src": "2591:6:14", "typeDescriptions": {"typeIdentifier": "t_function_assert_pure$_t_bool_$returns$__$", "typeString": "function (bool) pure"}}, "id": 288, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "2591:13:14", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 289, "nodeType": "ExpressionStatement", "src": "2591:13:14"}]}, "errorName": "", "id": 291, "nodeType": "TryCatchClause", "src": "2571:44:14"}], "externalCall": {"arguments": [{"id": 278, "name": "amount", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 218, "src": "2525:6:14", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_uint256", "typeString": "uint256"}], "expression": {"id": 276, "name": "bondingToken", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 6, "src": "2507:12:14", "typeDescriptions": {"typeIdentifier": "t_contract$_BondingToken_$892", "typeString": "contract BondingToken"}}, "id": 277, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "sell", "nodeType": "MemberAccess", "referencedDeclaration": 534, "src": "2507:17:14", "typeDescriptions": {"typeIdentifier": "t_function_external_nonpayable$_t_uint256_$returns$__$", "typeString": "function (uint256) external"}}, "id": 279, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "2507:25:14", "tryCall": true, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 292, "nodeType": "TryStatement", "src": "2503:112:14"}, {"expression": {"arguments": [{"commonType": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "id": 302, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"arguments": [{"arguments": [{"id": 298, "name": "this", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": -28, "src": "2663:4:14", "typeDescriptions": {"typeIdentifier": "t_contract$_TestBondingToken_$321", "typeString": "contract TestBondingToken"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_contract$_TestBondingToken_$321", "typeString": "contract TestBondingToken"}], "id": 297, "isConstant": false, "isLValue": false, "isPure": true, "lValueRequested": false, "nodeType": "ElementaryTypeNameExpression", "src": "2655:7:14", "typeDescriptions": {"typeIdentifier": "t_type$_t_address_$", "typeString": "type(address)"}, "typeName": {"id": 296, "name": "address", "nodeType": "ElementaryTypeName", "src": "2655:7:14", "typeDescriptions": {}}}, "id": 299, "isConstant": false, "isLValue": false, "isPure": false, "kind": "typeConversion", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "2655:13:14", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_address", "typeString": "address"}], "expression": {"id": 294, "name": "bondingToken", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 6, "src": "2632:12:14", "typeDescriptions": {"typeIdentifier": "t_contract$_BondingToken_$892", "typeString": "contract BondingToken"}}, "id": 295, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "balanceOf", "nodeType": "MemberAccess", "referencedDeclaration": 1856, "src": "2632:22:14", "typeDescriptions": {"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$", "typeString": "function (address) view external returns (uint256)"}}, "id": 300, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "2632:37:14", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "BinaryOperation", "operator": "==", "rightExpression": {"id": 301, "name": "initialBalance", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 233, "src": "2673:14:14", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "2632:55:14", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_bool", "typeString": "bool"}], "id": 293, "name": "assert", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": -3, "src": "2625:6:14", "typeDescriptions": {"typeIdentifier": "t_function_assert_pure$_t_bool_$returns$__$", "typeString": "function (bool) pure"}}, "id": 303, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "2625:63:14", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 304, "nodeType": "ExpressionStatement", "src": "2625:63:14"}, {"expression": {"arguments": [{"commonType": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "id": 312, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"id": 306, "name": "initialEth", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 243, "src": "2705:10:14", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "BinaryOperation", "operator": "==", "rightExpression": {"expression": {"arguments": [{"id": 309, "name": "this", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": -28, "src": "2727:4:14", "typeDescriptions": {"typeIdentifier": "t_contract$_TestBondingToken_$321", "typeString": "contract TestBondingToken"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_contract$_TestBondingToken_$321", "typeString": "contract TestBondingToken"}], "id": 308, "isConstant": false, "isLValue": false, "isPure": true, "lValueRequested": false, "nodeType": "ElementaryTypeNameExpression", "src": "2719:7:14", "typeDescriptions": {"typeIdentifier": "t_type$_t_address_$", "typeString": "type(address)"}, "typeName": {"id": 307, "name": "address", "nodeType": "ElementaryTypeName", "src": "2719:7:14", "typeDescriptions": {}}}, "id": 310, "isConstant": false, "isLValue": false, "isPure": false, "kind": "typeConversion", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "2719:13:14", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "id": 311, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "balance", "nodeType": "MemberAccess", "src": "2719:21:14", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "2705:35:14", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_bool", "typeString": "bool"}], "id": 305, "name": "assert", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": -3, "src": "2698:6:14", "typeDescriptions": {"typeIdentifier": "t_function_assert_pure$_t_bool_$returns$__$", "typeString": "function (bool) pure"}}, "id": 313, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "2698:43:14", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 314, "nodeType": "ExpressionStatement", "src": "2698:43:14"}]}, "functionSelector": "ae584796", "id": 316, "implemented": true, "kind": "function", "modifiers": [], "name": "test_balance", "nameLocation": "2070:12:14", "nodeType": "FunctionDefinition", "parameters": {"id": 219, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 218, "mutability": "mutable", "name": "amount", "nameLocation": "2091:6:14", "nodeType": "VariableDeclaration", "scope": 316, "src": "2083:14:14", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 217, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "2083:7:14", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "src": "2082:16:14"}, "returnParameters": {"id": 220, "nodeType": "ParameterList", "parameters": [], "src": "2106:0:14"}, "scope": 321, "src": "2061:687:14", "stateMutability": "nonpayable", "virtual": false, "visibility": "public"}, {"body": {"id": 319, "nodeType": "Block", "src": "2781:2:14", "statements": []}, "id": 320, "implemented": true, "kind": "receive", "modifiers": [], "name": "", "nameLocation": "-1:-1:-1", "nodeType": "FunctionDefinition", "parameters": {"id": 317, "nodeType": "ParameterList", "parameters": [], "src": "2761:2:14"}, "returnParameters": {"id": 318, "nodeType": "ParameterList", "parameters": [], "src": "2781:0:14"}, "scope": 321, "src": "2754:29:14", "stateMutability": "payable", "virtual": false, "visibility": "external"}], "scope": 322, "src": "277:2508:14", "usedErrors": []}], "src": "32:2754:14"}}}, "sourceList": ["/Users/vladimirtrifonov/src/playground/solidity/rare-skills/advanced-solidity-bootcamp/fuzzing-with-echidna/bonding-token/lib/erc1363-payable-token/contracts/token/ERC1363/ERC1363.sol", "/Users/vladimirtrifonov/src/playground/solidity/rare-skills/advanced-solidity-bootcamp/fuzzing-with-echidna/bonding-token/lib/erc1363-payable-token/contracts/token/ERC1363/IERC1363.sol", "/Users/vladimirtrifonov/src/playground/solidity/rare-skills/advanced-solidity-bootcamp/fuzzing-with-echidna/bonding-token/lib/erc1363-payable-token/contracts/token/ERC1363/IERC1363Receiver.sol", "/Users/vladimirtrifonov/src/playground/solidity/rare-skills/advanced-solidity-bootcamp/fuzzing-with-echidna/bonding-token/lib/erc1363-payable-token/contracts/token/ERC1363/IERC1363Spender.sol", "/Users/vladimirtrifonov/src/playground/solidity/rare-skills/advanced-solidity-bootcamp/fuzzing-with-echidna/bonding-token/lib/openzeppelin-contracts/contracts/security/ReentrancyGuard.sol", "/Users/vladimirtrifonov/src/playground/solidity/rare-skills/advanced-solidity-bootcamp/fuzzing-with-echidna/bonding-token/lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol", "/Users/vladimirtrifonov/src/playground/solidity/rare-skills/advanced-solidity-bootcamp/fuzzing-with-echidna/bonding-token/lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol", "/Users/vladimirtrifonov/src/playground/solidity/rare-skills/advanced-solidity-bootcamp/fuzzing-with-echidna/bonding-token/lib/openzeppelin-contracts/contracts/token/ERC20/extensions/IERC20Metadata.sol", "/Users/vladimirtrifonov/src/playground/solidity/rare-skills/advanced-solidity-bootcamp/fuzzing-with-echidna/bonding-token/lib/openzeppelin-contracts/contracts/utils/Address.sol", "/Users/vladimirtrifonov/src/playground/solidity/rare-skills/advanced-solidity-bootcamp/fuzzing-with-echidna/bonding-token/lib/openzeppelin-contracts/contracts/utils/Context.sol", "/Users/vladimirtrifonov/src/playground/solidity/rare-skills/advanced-solidity-bootcamp/fuzzing-with-echidna/bonding-token/lib/openzeppelin-contracts/contracts/utils/introspection/ERC165.sol", "/Users/vladimirtrifonov/src/playground/solidity/rare-skills/advanced-solidity-bootcamp/fuzzing-with-echidna/bonding-token/lib/openzeppelin-contracts/contracts/utils/introspection/IERC165.sol", "/Users/vladimirtrifonov/src/playground/solidity/rare-skills/advanced-solidity-bootcamp/fuzzing-with-echidna/bonding-token/src/BondingToken.sol", "/Users/vladimirtrifonov/src/playground/solidity/rare-skills/advanced-solidity-bootcamp/fuzzing-with-echidna/bonding-token/src/IBondingToken.sol", "/Users/vladimirtrifonov/src/playground/solidity/rare-skills/advanced-solidity-bootcamp/fuzzing-with-echidna/bonding-token/test/TestBondingToken.sol"], "contracts": {"/Users/vladimirtrifonov/src/playground/solidity/rare-skills/advanced-solidity-bootcamp/fuzzing-with-echidna/bonding-token/lib/erc1363-payable-token/contracts/token/ERC1363/ERC1363.sol:ERC1363": {"srcmap": "", "srcmap-runtime": "", "abi": "[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approveAndCall\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"approveAndCall\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"subtractedValue\",\"type\":\"uint256\"}],\"name\":\"decreaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"addedValue\",\"type\":\"uint256\"}],\"name\":\"increaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferAndCall\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"transferAndCall\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"transferFromAndCall\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFromAndCall\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}]", "bin": "", "bin-runtime": "", "userdoc": {"methods": {}, "notice": null}, "devdoc": {"methods": {"allowance(address,address)": {"author": null, "details": "See {IERC20-allowance}.", "params": {}, "return": null}, "approve(address,uint256)": {"author": null, "details": "See {IERC20-approve}. NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.", "params": {}, "return": null}, "approveAndCall(address,uint256)": {"author": null, "details": "Approve spender to transfer tokens and then execute a callback on `spender`.", "params": {"amount": "The amount allowed to be transferred", "spender": "The address allowed to transfer to"}, "return": null}, "approveAndCall(address,uint256,bytes)": {"author": null, "details": "Approve spender to transfer tokens and then execute a callback on `spender`.", "params": {"amount": "The amount allowed to be transferred.", "data": "Additional data with no specified format.", "spender": "The address allowed to transfer to."}, "return": null}, "balanceOf(address)": {"author": null, "details": "See {IERC20-balanceOf}.", "params": {}, "return": null}, "decimals()": {"author": null, "details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {ERC20} uses, unless this function is overridden; NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.", "params": {}, "return": null}, "decreaseAllowance(address,uint256)": {"author": null, "details": "Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`.", "params": {}, "return": null}, "increaseAllowance(address,uint256)": {"author": null, "details": "Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address.", "params": {}, "return": null}, "name()": {"author": null, "details": "Returns the name of the token.", "params": {}, "return": null}, "supportsInterface(bytes4)": {"author": null, "details": "See {IERC165-supportsInterface}.", "params": {}, "return": null}, "symbol()": {"author": null, "details": "Returns the symbol of the token, usually a shorter version of the name.", "params": {}, "return": null}, "totalSupply()": {"author": null, "details": "See {IERC20-totalSupply}.", "params": {}, "return": null}, "transfer(address,uint256)": {"author": null, "details": "See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `amount`.", "params": {}, "return": null}, "transferAndCall(address,uint256)": {"author": null, "details": "Transfer tokens to a specified address and then execute a callback on `to`.", "params": {"amount": "The amount to be transferred.", "to": "The address to transfer to."}, "return": null}, "transferAndCall(address,uint256,bytes)": {"author": null, "details": "Transfer tokens to a specified address and then execute a callback on `to`.", "params": {"amount": "The amount to be transferred", "data": "Additional data with no specified format", "to": "The address to transfer to"}, "return": null}, "transferFrom(address,address,uint256)": {"author": null, "details": "See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `amount`. - the caller must have allowance for ``from``'s tokens of at least `amount`.", "params": {}, "return": null}, "transferFromAndCall(address,address,uint256)": {"author": null, "details": "Transfer tokens from one address to another and then execute a callback on `to`.", "params": {"amount": "The amount of tokens to be transferred", "from": "The address which you want to send tokens from", "to": "The address which you want to transfer to"}, "return": null}, "transferFromAndCall(address,address,uint256,bytes)": {"author": null, "details": "Transfer tokens from one address to another and then execute a callback on `to`.", "params": {"amount": "The amount of tokens to be transferred", "data": "Additional data with no specified format", "from": "The address which you want to send tokens from", "to": "The address which you want to transfer to"}, "return": null}}, "author": null, "details": "Implementation of an ERC1363 interface.", "title": "ERC1363"}}, "/Users/vladimirtrifonov/src/playground/solidity/rare-skills/advanced-solidity-bootcamp/fuzzing-with-echidna/bonding-token/lib/erc1363-payable-token/contracts/token/ERC1363/IERC1363.sol:IERC1363": {"srcmap": "", "srcmap-runtime": "", "abi": "[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approveAndCall\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"approveAndCall\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferAndCall\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"transferAndCall\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"transferFromAndCall\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFromAndCall\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}]", "bin": "", "bin-runtime": "", "userdoc": {"methods": {"approveAndCall(address,uint256)": {"notice": "Approve the passed address to spend the specified amount of tokens on behalf of msg.sender and then call `onApprovalReceived` on spender. Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729"}, "approveAndCall(address,uint256,bytes)": {"notice": "Approve the passed address to spend the specified amount of tokens on behalf of msg.sender and then call `onApprovalReceived` on spender. Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729"}, "transferAndCall(address,uint256)": {"notice": "Transfer tokens from `msg.sender` to another address and then call `onTransferReceived` on receiver."}, "transferAndCall(address,uint256,bytes)": {"notice": "Transfer tokens from `msg.sender` to another address and then call `onTransferReceived` on receiver."}, "transferFromAndCall(address,address,uint256)": {"notice": "Transfer tokens from one address to another and then call `onTransferReceived` on receiver."}, "transferFromAndCall(address,address,uint256,bytes)": {"notice": "Transfer tokens from one address to another and then call `onTransferReceived` on receiver."}}, "notice": null}, "devdoc": {"methods": {"allowance(address,address)": {"author": null, "details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.", "params": {}, "return": null}, "approve(address,uint256)": {"author": null, "details": "Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.", "params": {}, "return": null}, "approveAndCall(address,uint256)": {"author": null, "details": null, "params": {"amount": "uint256 The amount of tokens to be spent", "spender": "address The address which will spend the funds"}, "return": null}, "approveAndCall(address,uint256,bytes)": {"author": null, "details": null, "params": {"amount": "uint256 The amount of tokens to be spent", "data": "bytes Additional data with no specified format, sent in call to `spender`", "spender": "address The address which will spend the funds"}, "return": null}, "balanceOf(address)": {"author": null, "details": "Returns the amount of tokens owned by `account`.", "params": {}, "return": null}, "supportsInterface(bytes4)": {"author": null, "details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.", "params": {}, "return": null}, "totalSupply()": {"author": null, "details": "Returns the amount of tokens in existence.", "params": {}, "return": null}, "transfer(address,uint256)": {"author": null, "details": "Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.", "params": {}, "return": null}, "transferAndCall(address,uint256)": {"author": null, "details": null, "params": {"amount": "uint256 The amount of tokens to be transferred", "to": "address The address which you want to transfer to"}, "return": null}, "transferAndCall(address,uint256,bytes)": {"author": null, "details": null, "params": {"amount": "uint256 The amount of tokens to be transferred", "data": "bytes Additional data with no specified format, sent in call to `to`", "to": "address The address which you want to transfer to"}, "return": null}, "transferFrom(address,address,uint256)": {"author": null, "details": "Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.", "params": {}, "return": null}, "transferFromAndCall(address,address,uint256)": {"author": null, "details": null, "params": {"amount": "uint256 The amount of tokens to be transferred", "from": "address The address which you want to send tokens from", "to": "address The address which you want to transfer to"}, "return": null}, "transferFromAndCall(address,address,uint256,bytes)": {"author": null, "details": null, "params": {"amount": "uint256 The amount of tokens to be transferred", "data": "bytes Additional data with no specified format, sent in call to `to`", "from": "address The address which you want to send tokens from", "to": "address The address which you want to transfer to"}, "return": null}}, "author": null, "details": "Interface of an ERC1363 compliant contract, as defined in the https://eips.ethereum.org/EIPS/eip-1363[EIP].", "title": "IERC1363 Interface"}}, "/Users/vladimirtrifonov/src/playground/solidity/rare-skills/advanced-solidity-bootcamp/fuzzing-with-echidna/bonding-token/lib/erc1363-payable-token/contracts/token/ERC1363/IERC1363Receiver.sol:IERC1363Receiver": {"srcmap": "", "srcmap-runtime": "", "abi": "[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"onTransferReceived\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}]", "bin": "", "bin-runtime": "", "userdoc": {"methods": {"onTransferReceived(address,address,uint256,bytes)": {"notice": "Handle the receipt of ERC1363 tokens."}}, "notice": null}, "devdoc": {"methods": {"onTransferReceived(address,address,uint256,bytes)": {"author": null, "details": "Any ERC1363 smart contract calls this function on the recipient after a `transfer` or a `transferFrom`. This function MAY throw to revert and reject the transfer. Return of other than the magic value MUST result in the transaction being reverted. Note: the token contract address is always the message sender.", "params": {"amount": "uint256 The amount of tokens transferred", "data": "bytes Additional data with no specified format", "sender": "address The address which are token transferred from", "spender": "address The address which called `transferAndCall` or `transferFromAndCall` function"}, "return": null}}, "author": null, "details": "Interface for any contract that wants to support `transferAndCall` or `transferFromAndCall`  from ERC1363 token contracts.", "title": "IERC1363Receiver interface"}}, "/Users/vladimirtrifonov/src/playground/solidity/rare-skills/advanced-solidity-bootcamp/fuzzing-with-echidna/bonding-token/lib/erc1363-payable-token/contracts/token/ERC1363/IERC1363Spender.sol:IERC1363Spender": {"srcmap": "", "srcmap-runtime": "", "abi": "[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"onApprovalReceived\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}]", "bin": "", "bin-runtime": "", "userdoc": {"methods": {"onApprovalReceived(address,uint256,bytes)": {"notice": "Handle the approval of ERC1363 tokens."}}, "notice": null}, "devdoc": {"methods": {"onApprovalReceived(address,uint256,bytes)": {"author": null, "details": "Any ERC1363 smart contract calls this function on the recipient after an `approve`. This function MAY throw to revert and reject the approval. Return of other than the magic value MUST result in the transaction being reverted. Note: the token contract address is always the message sender.", "params": {"amount": "uint256 The amount of tokens to be spent", "data": "bytes Additional data with no specified format", "sender": "address The address which called `approveAndCall` function"}, "return": null}}, "author": null, "details": "Interface for any contract that wants to support `approveAndCall`  from ERC1363 token contracts.", "title": "ERC1363Spender interface"}}, "/Users/vladimirtrifonov/src/playground/solidity/rare-skills/advanced-solidity-bootcamp/fuzzing-with-echidna/bonding-token/lib/openzeppelin-contracts/contracts/security/ReentrancyGuard.sol:ReentrancyGuard": {"srcmap": "", "srcmap-runtime": "", "abi": "[]", "bin": "", "bin-runtime": "", "userdoc": {"methods": {}, "notice": null}, "devdoc": {"methods": {}, "author": null, "details": "Contract module that helps prevent reentrant calls to a function. Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier available, which can be applied to functions to make sure there are no nested (reentrant) calls to them. Note that because there is a single `nonReentrant` guard, functions marked as `nonReentrant` may not call one another. This can be worked around by making those functions `private`, and then adding `external` `nonReentrant` entry points to them. TIP: If you would like to learn more about reentrancy and alternative ways to protect against it, check out our blog post https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].", "title": null}}, "/Users/vladimirtrifonov/src/playground/solidity/rare-skills/advanced-solidity-bootcamp/fuzzing-with-echidna/bonding-token/lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol:ERC20": {"srcmap": "1401:11610:5:-:0;;;1976:113;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2050:5;2042;:13;;;;;;:::i;:::-;;2075:7;2065;:17;;;;;;:::i;:::-;;1976:113;;1401:11610;;7:75:15;40:6;73:2;67:9;57:19;;7:75;:::o;88:117::-;197:1;194;187:12;211:117;320:1;317;310:12;334:117;443:1;440;433:12;457:117;566:1;563;556:12;580:102;621:6;672:2;668:7;663:2;656:5;652:14;648:28;638:38;;580:102;;;:::o;688:180::-;736:77;733:1;726:88;833:4;830:1;823:15;857:4;854:1;847:15;874:281;957:27;979:4;957:27;:::i;:::-;949:6;945:40;1087:6;1075:10;1072:22;1051:18;1039:10;1036:34;1033:62;1030:88;;;1098:18;;:::i;:::-;1030:88;1138:10;1134:2;1127:22;917:238;874:281;;:::o;1161:129::-;1195:6;1222:20;;:::i;:::-;1212:30;;1251:33;1279:4;1271:6;1251:33;:::i;:::-;1161:129;;;:::o;1296:308::-;1358:4;1448:18;1440:6;1437:30;1434:56;;;1470:18;;:::i;:::-;1434:56;1508:29;1530:6;1508:29;:::i;:::-;1500:37;;1592:4;1586;1582:15;1574:23;;1296:308;;;:::o;1610:307::-;1678:1;1688:113;1702:6;1699:1;1696:13;1688:113;;;1787:1;1782:3;1778:11;1772:18;1768:1;1763:3;1759:11;1752:39;1724:2;1721:1;1717:10;1712:15;;1688:113;;;1819:6;1816:1;1813:13;1810:101;;;1899:1;1890:6;1885:3;1881:16;1874:27;1810:101;1659:258;1610:307;;;:::o;1923:421::-;2012:5;2037:66;2053:49;2095:6;2053:49;:::i;:::-;2037:66;:::i;:::-;2028:75;;2126:6;2119:5;2112:21;2164:4;2157:5;2153:16;2202:3;2193:6;2188:3;2184:16;2181:25;2178:112;;;2209:79;;:::i;:::-;2178:112;2299:39;2331:6;2326:3;2321;2299:39;:::i;:::-;2018:326;1923:421;;;;;:::o;2364:355::-;2431:5;2480:3;2473:4;2465:6;2461:17;2457:27;2447:122;;2488:79;;:::i;:::-;2447:122;2598:6;2592:13;2623:90;2709:3;2701:6;2694:4;2686:6;2682:17;2623:90;:::i;:::-;2614:99;;2437:282;2364:355;;;;:::o;2725:853::-;2824:6;2832;2881:2;2869:9;2860:7;2856:23;2852:32;2849:119;;;2887:79;;:::i;:::-;2849:119;3028:1;3017:9;3013:17;3007:24;3058:18;3050:6;3047:30;3044:117;;;3080:79;;:::i;:::-;3044:117;3185:74;3251:7;3242:6;3231:9;3227:22;3185:74;:::i;:::-;3175:84;;2978:291;3329:2;3318:9;3314:18;3308:25;3360:18;3352:6;3349:30;3346:117;;;3382:79;;:::i;:::-;3346:117;3487:74;3553:7;3544:6;3533:9;3529:22;3487:74;:::i;:::-;3477:84;;3279:292;2725:853;;;;;:::o;3584:99::-;3636:6;3670:5;3664:12;3654:22;;3584:99;;;:::o;3689:180::-;3737:77;3734:1;3727:88;3834:4;3831:1;3824:15;3858:4;3855:1;3848:15;3875:320;3919:6;3956:1;3950:4;3946:12;3936:22;;4003:1;3997:4;3993:12;4024:18;4014:81;;4080:4;4072:6;4068:17;4058:27;;4014:81;4142:2;4134:6;4131:14;4111:18;4108:38;4105:84;;4161:18;;:::i;:::-;4105:84;3926:269;3875:320;;;:::o;4201:141::-;4250:4;4273:3;4265:11;;4296:3;4293:1;4286:14;4330:4;4327:1;4317:18;4309:26;;4201:141;;;:::o;4348:93::-;4385:6;4432:2;4427;4420:5;4416:14;4412:23;4402:33;;4348:93;;;:::o;4447:107::-;4491:8;4541:5;4535:4;4531:16;4510:37;;4447:107;;;;:::o;4560:393::-;4629:6;4679:1;4667:10;4663:18;4702:97;4732:66;4721:9;4702:97;:::i;:::-;4820:39;4850:8;4839:9;4820:39;:::i;:::-;4808:51;;4892:4;4888:9;4881:5;4877:21;4868:30;;4941:4;4931:8;4927:19;4920:5;4917:30;4907:40;;4636:317;;4560:393;;;;;:::o;4959:77::-;4996:7;5025:5;5014:16;;4959:77;;;:::o;5042:60::-;5070:3;5091:5;5084:12;;5042:60;;;:::o;5108:142::-;5158:9;5191:53;5209:34;5218:24;5236:5;5218:24;:::i;:::-;5209:34;:::i;:::-;5191:53;:::i;:::-;5178:66;;5108:142;;;:::o;5256:75::-;5299:3;5320:5;5313:12;;5256:75;;;:::o;5337:269::-;5447:39;5478:7;5447:39;:::i;:::-;5508:91;5557:41;5581:16;5557:41;:::i;:::-;5549:6;5542:4;5536:11;5508:91;:::i;:::-;5502:4;5495:105;5413:193;5337:269;;;:::o;5612:73::-;5657:3;5612:73;:::o;5691:189::-;5768:32;;:::i;:::-;5809:65;5867:6;5859;5853:4;5809:65;:::i;:::-;5744:136;5691:189;;:::o;5886:186::-;5946:120;5963:3;5956:5;5953:14;5946:120;;;6017:39;6054:1;6047:5;6017:39;:::i;:::-;5990:1;5983:5;5979:13;5970:22;;5946:120;;;5886:186;;:::o;6078:543::-;6179:2;6174:3;6171:11;6168:446;;;6213:38;6245:5;6213:38;:::i;:::-;6297:29;6315:10;6297:29;:::i;:::-;6287:8;6283:44;6480:2;6468:10;6465:18;6462:49;;;6501:8;6486:23;;6462:49;6524:80;6580:22;6598:3;6580:22;:::i;:::-;6570:8;6566:37;6553:11;6524:80;:::i;:::-;6183:431;;6168:446;6078:543;;;:::o;6627:117::-;6681:8;6731:5;6725:4;6721:16;6700:37;;6627:117;;;;:::o;6750:169::-;6794:6;6827:51;6875:1;6871:6;6863:5;6860:1;6856:13;6827:51;:::i;:::-;6823:56;6908:4;6902;6898:15;6888:25;;6801:118;6750:169;;;;:::o;6924:295::-;7000:4;7146:29;7171:3;7165:4;7146:29;:::i;:::-;7138:37;;7208:3;7205:1;7201:11;7195:4;7192:21;7184:29;;6924:295;;;;:::o;7224:1395::-;7341:37;7374:3;7341:37;:::i;:::-;7443:18;7435:6;7432:30;7429:56;;;7465:18;;:::i;:::-;7429:56;7509:38;7541:4;7535:11;7509:38;:::i;:::-;7594:67;7654:6;7646;7640:4;7594:67;:::i;:::-;7688:1;7712:4;7699:17;;7744:2;7736:6;7733:14;7761:1;7756:618;;;;8418:1;8435:6;8432:77;;;8484:9;8479:3;8475:19;8469:26;8460:35;;8432:77;8535:67;8595:6;8588:5;8535:67;:::i;:::-;8529:4;8522:81;8391:222;7726:887;;7756:618;7808:4;7804:9;7796:6;7792:22;7842:37;7874:4;7842:37;:::i;:::-;7901:1;7915:208;7929:7;7926:1;7923:14;7915:208;;;8008:9;8003:3;7999:19;7993:26;7985:6;7978:42;8059:1;8051:6;8047:14;8037:24;;8106:2;8095:9;8091:18;8078:31;;7952:4;7949:1;7945:12;7940:17;;7915:208;;;8151:6;8142:7;8139:19;8136:179;;;8209:9;8204:3;8200:19;8194:26;8252:48;8294:4;8286:6;8282:17;8271:9;8252:48;:::i;:::-;8244:6;8237:64;8159:156;8136:179;8361:1;8357;8349:6;8345:14;8341:22;8335:4;8328:36;7763:611;;;7726:887;;7316:1303;;;7224:1395;;:::o;1401:11610:5:-;;;;;;;", "srcmap-runtime": "1401:11610:5:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2154:98;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4431:197;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3242:106;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;5190:286;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3091:91;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;5871:234;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3406:125;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2365:102;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;6592:427;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3727:189;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3974:149;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2154:98;2208:13;2240:5;2233:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2154:98;:::o;4431:197::-;4514:4;4530:13;4546:12;:10;:12::i;:::-;4530:28;;4568:32;4577:5;4584:7;4593:6;4568:8;:32::i;:::-;4617:4;4610:11;;;4431:197;;;;:::o;3242:106::-;3303:7;3329:12;;3322:19;;3242:106;:::o;5190:286::-;5317:4;5333:15;5351:12;:10;:12::i;:::-;5333:30;;5373:38;5389:4;5395:7;5404:6;5373:15;:38::i;:::-;5421:27;5431:4;5437:2;5441:6;5421:9;:27::i;:::-;5465:4;5458:11;;;5190:286;;;;;:::o;3091:91::-;3149:5;3173:2;3166:9;;3091:91;:::o;5871:234::-;5959:4;5975:13;5991:12;:10;:12::i;:::-;5975:28;;6013:64;6022:5;6029:7;6066:10;6038:25;6048:5;6055:7;6038:9;:25::i;:::-;:38;;;;:::i;:::-;6013:8;:64::i;:::-;6094:4;6087:11;;;5871:234;;;;:::o;3406:125::-;3480:7;3506:9;:18;3516:7;3506:18;;;;;;;;;;;;;;;;3499:25;;3406:125;;;:::o;2365:102::-;2421:13;2453:7;2446:14;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2365:102;:::o;6592:427::-;6685:4;6701:13;6717:12;:10;:12::i;:::-;6701:28;;6739:24;6766:25;6776:5;6783:7;6766:9;:25::i;:::-;6739:52;;6829:15;6809:16;:35;;6801:85;;;;;;;;;;;;:::i;:::-;;;;;;;;;6920:60;6929:5;6936:7;6964:15;6945:16;:34;6920:8;:60::i;:::-;7008:4;7001:11;;;;6592:427;;;;:::o;3727:189::-;3806:4;3822:13;3838:12;:10;:12::i;:::-;3822:28;;3860;3870:5;3877:2;3881:6;3860:9;:28::i;:::-;3905:4;3898:11;;;3727:189;;;;:::o;3974:149::-;4063:7;4089:11;:18;4101:5;4089:18;;;;;;;;;;;;;;;:27;4108:7;4089:27;;;;;;;;;;;;;;;;4082:34;;3974:149;;;;:::o;640:96:9:-;693:7;719:10;712:17;;640:96;:::o;10504:370:5:-;10652:1;10635:19;;:5;:19;;;10627:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;10732:1;10713:21;;:7;:21;;;10705:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;10814:6;10784:11;:18;10796:5;10784:18;;;;;;;;;;;;;;;:27;10803:7;10784:27;;;;;;;;;;;;;;;:36;;;;10851:7;10835:32;;10844:5;10835:32;;;10860:6;10835:32;;;;;;:::i;:::-;;;;;;;;10504:370;;;:::o;11155:441::-;11285:24;11312:25;11322:5;11329:7;11312:9;:25::i;:::-;11285:52;;11371:17;11351:16;:37;11347:243;;11432:6;11412:16;:26;;11404:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;11514:51;11523:5;11530:7;11558:6;11539:16;:25;11514:8;:51::i;:::-;11347:243;11275:321;11155:441;;;:::o;7473:818::-;7615:1;7599:18;;:4;:18;;;7591:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;7691:1;7677:16;;:2;:16;;;7669:64;;;;;;;;;;;;:::i;:::-;;;;;;;;;7744:38;7765:4;7771:2;7775:6;7744:20;:38::i;:::-;7793:19;7815:9;:15;7825:4;7815:15;;;;;;;;;;;;;;;;7793:37;;7863:6;7848:11;:21;;7840:72;;;;;;;;;;;;:::i;:::-;;;;;;;;;7978:6;7964:11;:20;7946:9;:15;7956:4;7946:15;;;;;;;;;;;;;;;:38;;;;8178:6;8161:9;:13;8171:2;8161:13;;;;;;;;;;;;;;;;:23;;;;;;;;;;;8225:2;8210:26;;8219:4;8210:26;;;8229:6;8210:26;;;;;;:::i;:::-;;;;;;;;8247:37;8267:4;8273:2;8277:6;8247:19;:37::i;:::-;7581:710;7473:818;;;:::o;12180:121::-;;;;:::o;12889:120::-;;;;:::o;7:99:15:-;59:6;93:5;87:12;77:22;;7:99;;;:::o;112:169::-;196:11;230:6;225:3;218:19;270:4;265:3;261:14;246:29;;112:169;;;;:::o;287:307::-;355:1;365:113;379:6;376:1;373:13;365:113;;;464:1;459:3;455:11;449:18;445:1;440:3;436:11;429:39;401:2;398:1;394:10;389:15;;365:113;;;496:6;493:1;490:13;487:101;;;576:1;567:6;562:3;558:16;551:27;487:101;336:258;287:307;;;:::o;600:102::-;641:6;692:2;688:7;683:2;676:5;672:14;668:28;658:38;;600:102;;;:::o;708:364::-;796:3;824:39;857:5;824:39;:::i;:::-;879:71;943:6;938:3;879:71;:::i;:::-;872:78;;959:52;1004:6;999:3;992:4;985:5;981:16;959:52;:::i;:::-;1036:29;1058:6;1036:29;:::i;:::-;1031:3;1027:39;1020:46;;800:272;708:364;;;;:::o;1078:313::-;1191:4;1229:2;1218:9;1214:18;1206:26;;1278:9;1272:4;1268:20;1264:1;1253:9;1249:17;1242:47;1306:78;1379:4;1370:6;1306:78;:::i;:::-;1298:86;;1078:313;;;;:::o;1478:117::-;1587:1;1584;1577:12;1724:126;1761:7;1801:42;1794:5;1790:54;1779:65;;1724:126;;;:::o;1856:96::-;1893:7;1922:24;1940:5;1922:24;:::i;:::-;1911:35;;1856:96;;;:::o;1958:122::-;2031:24;2049:5;2031:24;:::i;:::-;2024:5;2021:35;2011:63;;2070:1;2067;2060:12;2011:63;1958:122;:::o;2086:139::-;2132:5;2170:6;2157:20;2148:29;;2186:33;2213:5;2186:33;:::i;:::-;2086:139;;;;:::o;2231:77::-;2268:7;2297:5;2286:16;;2231:77;;;:::o;2314:122::-;2387:24;2405:5;2387:24;:::i;:::-;2380:5;2377:35;2367:63;;2426:1;2423;2416:12;2367:63;2314:122;:::o;2442:139::-;2488:5;2526:6;2513:20;2504:29;;2542:33;2569:5;2542:33;:::i;:::-;2442:139;;;;:::o;2587:474::-;2655:6;2663;2712:2;2700:9;2691:7;2687:23;2683:32;2680:119;;;2718:79;;:::i;:::-;2680:119;2838:1;2863:53;2908:7;2899:6;2888:9;2884:22;2863:53;:::i;:::-;2853:63;;2809:117;2965:2;2991:53;3036:7;3027:6;3016:9;3012:22;2991:53;:::i;:::-;2981:63;;2936:118;2587:474;;;;;:::o;3067:90::-;3101:7;3144:5;3137:13;3130:21;3119:32;;3067:90;;;:::o;3163:109::-;3244:21;3259:5;3244:21;:::i;:::-;3239:3;3232:34;3163:109;;:::o;3278:210::-;3365:4;3403:2;3392:9;3388:18;3380:26;;3416:65;3478:1;3467:9;3463:17;3454:6;3416:65;:::i;:::-;3278:210;;;;:::o;3494:118::-;3581:24;3599:5;3581:24;:::i;:::-;3576:3;3569:37;3494:118;;:::o;3618:222::-;3711:4;3749:2;3738:9;3734:18;3726:26;;3762:71;3830:1;3819:9;3815:17;3806:6;3762:71;:::i;:::-;3618:222;;;;:::o;3846:619::-;3923:6;3931;3939;3988:2;3976:9;3967:7;3963:23;3959:32;3956:119;;;3994:79;;:::i;:::-;3956:119;4114:1;4139:53;4184:7;4175:6;4164:9;4160:22;4139:53;:::i;:::-;4129:63;;4085:117;4241:2;4267:53;4312:7;4303:6;4292:9;4288:22;4267:53;:::i;:::-;4257:63;;4212:118;4369:2;4395:53;4440:7;4431:6;4420:9;4416:22;4395:53;:::i;:::-;4385:63;;4340:118;3846:619;;;;;:::o;4471:86::-;4506:7;4546:4;4539:5;4535:16;4524:27;;4471:86;;;:::o;4563:112::-;4646:22;4662:5;4646:22;:::i;:::-;4641:3;4634:35;4563:112;;:::o;4681:214::-;4770:4;4808:2;4797:9;4793:18;4785:26;;4821:67;4885:1;4874:9;4870:17;4861:6;4821:67;:::i;:::-;4681:214;;;;:::o;4901:329::-;4960:6;5009:2;4997:9;4988:7;4984:23;4980:32;4977:119;;;5015:79;;:::i;:::-;4977:119;5135:1;5160:53;5205:7;5196:6;5185:9;5181:22;5160:53;:::i;:::-;5150:63;;5106:117;4901:329;;;;:::o;5236:474::-;5304:6;5312;5361:2;5349:9;5340:7;5336:23;5332:32;5329:119;;;5367:79;;:::i;:::-;5329:119;5487:1;5512:53;5557:7;5548:6;5537:9;5533:22;5512:53;:::i;:::-;5502:63;;5458:117;5614:2;5640:53;5685:7;5676:6;5665:9;5661:22;5640:53;:::i;:::-;5630:63;;5585:118;5236:474;;;;;:::o;5716:180::-;5764:77;5761:1;5754:88;5861:4;5858:1;5851:15;5885:4;5882:1;5875:15;5902:320;5946:6;5983:1;5977:4;5973:12;5963:22;;6030:1;6024:4;6020:12;6051:18;6041:81;;6107:4;6099:6;6095:17;6085:27;;6041:81;6169:2;6161:6;6158:14;6138:18;6135:38;6132:84;;6188:18;;:::i;:::-;6132:84;5953:269;5902:320;;;:::o;6228:180::-;6276:77;6273:1;6266:88;6373:4;6370:1;6363:15;6397:4;6394:1;6387:15;6414:305;6454:3;6473:20;6491:1;6473:20;:::i;:::-;6468:25;;6507:20;6525:1;6507:20;:::i;:::-;6502:25;;6661:1;6593:66;6589:74;6586:1;6583:81;6580:107;;;6667:18;;:::i;:::-;6580:107;6711:1;6708;6704:9;6697:16;;6414:305;;;;:::o;6725:224::-;6865:34;6861:1;6853:6;6849:14;6842:58;6934:7;6929:2;6921:6;6917:15;6910:32;6725:224;:::o;6955:366::-;7097:3;7118:67;7182:2;7177:3;7118:67;:::i;:::-;7111:74;;7194:93;7283:3;7194:93;:::i;:::-;7312:2;7307:3;7303:12;7296:19;;6955:366;;;:::o;7327:419::-;7493:4;7531:2;7520:9;7516:18;7508:26;;7580:9;7574:4;7570:20;7566:1;7555:9;7551:17;7544:47;7608:131;7734:4;7608:131;:::i;:::-;7600:139;;7327:419;;;:::o;7752:223::-;7892:34;7888:1;7880:6;7876:14;7869:58;7961:6;7956:2;7948:6;7944:15;7937:31;7752:223;:::o;7981:366::-;8123:3;8144:67;8208:2;8203:3;8144:67;:::i;:::-;8137:74;;8220:93;8309:3;8220:93;:::i;:::-;8338:2;8333:3;8329:12;8322:19;;7981:366;;;:::o;8353:419::-;8519:4;8557:2;8546:9;8542:18;8534:26;;8606:9;8600:4;8596:20;8592:1;8581:9;8577:17;8570:47;8634:131;8760:4;8634:131;:::i;:::-;8626:139;;8353:419;;;:::o;8778:221::-;8918:34;8914:1;8906:6;8902:14;8895:58;8987:4;8982:2;8974:6;8970:15;8963:29;8778:221;:::o;9005:366::-;9147:3;9168:67;9232:2;9227:3;9168:67;:::i;:::-;9161:74;;9244:93;9333:3;9244:93;:::i;:::-;9362:2;9357:3;9353:12;9346:19;;9005:366;;;:::o;9377:419::-;9543:4;9581:2;9570:9;9566:18;9558:26;;9630:9;9624:4;9620:20;9616:1;9605:9;9601:17;9594:47;9658:131;9784:4;9658:131;:::i;:::-;9650:139;;9377:419;;;:::o;9802:179::-;9942:31;9938:1;9930:6;9926:14;9919:55;9802:179;:::o;9987:366::-;10129:3;10150:67;10214:2;10209:3;10150:67;:::i;:::-;10143:74;;10226:93;10315:3;10226:93;:::i;:::-;10344:2;10339:3;10335:12;10328:19;;9987:366;;;:::o;10359:419::-;10525:4;10563:2;10552:9;10548:18;10540:26;;10612:9;10606:4;10602:20;10598:1;10587:9;10583:17;10576:47;10640:131;10766:4;10640:131;:::i;:::-;10632:139;;10359:419;;;:::o;10784:224::-;10924:34;10920:1;10912:6;10908:14;10901:58;10993:7;10988:2;10980:6;10976:15;10969:32;10784:224;:::o;11014:366::-;11156:3;11177:67;11241:2;11236:3;11177:67;:::i;:::-;11170:74;;11253:93;11342:3;11253:93;:::i;:::-;11371:2;11366:3;11362:12;11355:19;;11014:366;;;:::o;11386:419::-;11552:4;11590:2;11579:9;11575:18;11567:26;;11639:9;11633:4;11629:20;11625:1;11614:9;11610:17;11603:47;11667:131;11793:4;11667:131;:::i;:::-;11659:139;;11386:419;;;:::o;11811:222::-;11951:34;11947:1;11939:6;11935:14;11928:58;12020:5;12015:2;12007:6;12003:15;11996:30;11811:222;:::o;12039:366::-;12181:3;12202:67;12266:2;12261:3;12202:67;:::i;:::-;12195:74;;12278:93;12367:3;12278:93;:::i;:::-;12396:2;12391:3;12387:12;12380:19;;12039:366;;;:::o;12411:419::-;12577:4;12615:2;12604:9;12600:18;12592:26;;12664:9;12658:4;12654:20;12650:1;12639:9;12635:17;12628:47;12692:131;12818:4;12692:131;:::i;:::-;12684:139;;12411:419;;;:::o;12836:225::-;12976:34;12972:1;12964:6;12960:14;12953:58;13045:8;13040:2;13032:6;13028:15;13021:33;12836:225;:::o;13067:366::-;13209:3;13230:67;13294:2;13289:3;13230:67;:::i;:::-;13223:74;;13306:93;13395:3;13306:93;:::i;:::-;13424:2;13419:3;13415:12;13408:19;;13067:366;;;:::o;13439:419::-;13605:4;13643:2;13632:9;13628:18;13620:26;;13692:9;13686:4;13682:20;13678:1;13667:9;13663:17;13656:47;13720:131;13846:4;13720:131;:::i;:::-;13712:139;;13439:419;;;:::o", "abi": "[{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name_\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"symbol_\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"subtractedValue\",\"type\":\"uint256\"}],\"name\":\"decreaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"addedValue\",\"type\":\"uint256\"}],\"name\":\"increaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}]", "bin": "60806040523480156200001157600080fd5b506040516200182138038062001821833981810160405281019062000037919062000200565b8160039081620000489190620004d0565b5080600490816200005a9190620004d0565b505050620005b7565b6000604051905090565b600080fd5b600080fd5b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b620000cc8262000081565b810181811067ffffffffffffffff82111715620000ee57620000ed62000092565b5b80604052505050565b60006200010362000063565b9050620001118282620000c1565b919050565b600067ffffffffffffffff82111562000134576200013362000092565b5b6200013f8262000081565b9050602081019050919050565b60005b838110156200016c5780820151818401526020810190506200014f565b838111156200017c576000848401525b50505050565b600062000199620001938462000116565b620000f7565b905082815260208101848484011115620001b857620001b76200007c565b5b620001c58482856200014c565b509392505050565b600082601f830112620001e557620001e462000077565b5b8151620001f784826020860162000182565b91505092915050565b600080604083850312156200021a57620002196200006d565b5b600083015167ffffffffffffffff8111156200023b576200023a62000072565b5b6200024985828601620001cd565b925050602083015167ffffffffffffffff8111156200026d576200026c62000072565b5b6200027b85828601620001cd565b9150509250929050565b600081519050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b60006002820490506001821680620002d857607f821691505b602082108103620002ee57620002ed62000290565b5b50919050565b60008190508160005260206000209050919050565b60006020601f8301049050919050565b600082821b905092915050565b600060088302620003587fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8262000319565b62000364868362000319565b95508019841693508086168417925050509392505050565b6000819050919050565b6000819050919050565b6000620003b1620003ab620003a5846200037c565b62000386565b6200037c565b9050919050565b6000819050919050565b620003cd8362000390565b620003e5620003dc82620003b8565b84845462000326565b825550505050565b600090565b620003fc620003ed565b62000409818484620003c2565b505050565b5b81811015620004315762000425600082620003f2565b6001810190506200040f565b5050565b601f82111562000480576200044a81620002f4565b620004558462000309565b8101602085101562000465578190505b6200047d620004748562000309565b8301826200040e565b50505b505050565b600082821c905092915050565b6000620004a56000198460080262000485565b1980831691505092915050565b6000620004c0838362000492565b9150826002028217905092915050565b620004db8262000285565b67ffffffffffffffff811115620004f757620004f662000092565b5b620005038254620002bf565b6200051082828562000435565b600060209050601f83116001811462000548576000841562000533578287015190505b6200053f8582620004b2565b865550620005af565b601f1984166200055886620002f4565b60005b8281101562000582578489015182556001820191506020850194506020810190506200055b565b86831015620005a257848901516200059e601f89168262000492565b8355505b6001600288020188555050505b505050505050565b61125a80620005c76000396000f3fe608060405234801561001057600080fd5b50600436106100a95760003560e01c80633950935111610071578063395093511461016857806370a082311461019857806395d89b41146101c8578063a457c2d7146101e6578063a9059cbb14610216578063dd62ed3e14610246576100a9565b806306fdde03146100ae578063095ea7b3146100cc57806318160ddd146100fc57806323b872dd1461011a578063313ce5671461014a575b600080fd5b6100b6610276565b6040516100c39190610b15565b60405180910390f35b6100e660048036038101906100e19190610bd0565b610308565b6040516100f39190610c2b565b60405180910390f35b61010461032b565b6040516101119190610c55565b60405180910390f35b610134600480360381019061012f9190610c70565b610335565b6040516101419190610c2b565b60405180910390f35b610152610364565b60405161015f9190610cdf565b60405180910390f35b610182600480360381019061017d9190610bd0565b61036d565b60405161018f9190610c2b565b60405180910390f35b6101b260048036038101906101ad9190610cfa565b6103a4565b6040516101bf9190610c55565b60405180910390f35b6101d06103ec565b6040516101dd9190610b15565b60405180910390f35b61020060048036038101906101fb9190610bd0565b61047e565b60405161020d9190610c2b565b60405180910390f35b610230600480360381019061022b9190610bd0565b6104f5565b60405161023d9190610c2b565b60405180910390f35b610260600480360381019061025b9190610d27565b610518565b60405161026d9190610c55565b60405180910390f35b60606003805461028590610d96565b80601f01602080910402602001604051908101604052809291908181526020018280546102b190610d96565b80156102fe5780601f106102d3576101008083540402835291602001916102fe565b820191906000526020600020905b8154815290600101906020018083116102e157829003601f168201915b5050505050905090565b60008061031361059f565b90506103208185856105a7565b600191505092915050565b6000600254905090565b60008061034061059f565b905061034d858285610770565b6103588585856107fc565b60019150509392505050565b60006012905090565b60008061037861059f565b905061039981858561038a8589610518565b6103949190610df6565b6105a7565b600191505092915050565b60008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b6060600480546103fb90610d96565b80601f016020809104026020016040519081016040528092919081815260200182805461042790610d96565b80156104745780601f1061044957610100808354040283529160200191610474565b820191906000526020600020905b81548152906001019060200180831161045757829003601f168201915b5050505050905090565b60008061048961059f565b905060006104978286610518565b9050838110156104dc576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104d390610ebe565b60405180910390fd5b6104e982868684036105a7565b60019250505092915050565b60008061050061059f565b905061050d8185856107fc565b600191505092915050565b6000600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905092915050565b600033905090565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603610616576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161060d90610f50565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610685576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161067c90610fe2565b60405180910390fd5b80600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925836040516107639190610c55565b60405180910390a3505050565b600061077c8484610518565b90507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff81146107f657818110156107e8576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107df9061104e565b60405180910390fd5b6107f584848484036105a7565b5b50505050565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff160361086b576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610862906110e0565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16036108da576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016108d190611172565b60405180910390fd5b6108e5838383610a72565b60008060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205490508181101561096b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161096290611204565b60405180910390fd5b8181036000808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550816000808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825401925050819055508273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef84604051610a599190610c55565b60405180910390a3610a6c848484610a77565b50505050565b505050565b505050565b600081519050919050565b600082825260208201905092915050565b60005b83811015610ab6578082015181840152602081019050610a9b565b83811115610ac5576000848401525b50505050565b6000601f19601f8301169050919050565b6000610ae782610a7c565b610af18185610a87565b9350610b01818560208601610a98565b610b0a81610acb565b840191505092915050565b60006020820190508181036000830152610b2f8184610adc565b905092915050565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610b6782610b3c565b9050919050565b610b7781610b5c565b8114610b8257600080fd5b50565b600081359050610b9481610b6e565b92915050565b6000819050919050565b610bad81610b9a565b8114610bb857600080fd5b50565b600081359050610bca81610ba4565b92915050565b60008060408385031215610be757610be6610b37565b5b6000610bf585828601610b85565b9250506020610c0685828601610bbb565b9150509250929050565b60008115159050919050565b610c2581610c10565b82525050565b6000602082019050610c406000830184610c1c565b92915050565b610c4f81610b9a565b82525050565b6000602082019050610c6a6000830184610c46565b92915050565b600080600060608486031215610c8957610c88610b37565b5b6000610c9786828701610b85565b9350506020610ca886828701610b85565b9250506040610cb986828701610bbb565b9150509250925092565b600060ff82169050919050565b610cd981610cc3565b82525050565b6000602082019050610cf46000830184610cd0565b92915050565b600060208284031215610d1057610d0f610b37565b5b6000610d1e84828501610b85565b91505092915050565b60008060408385031215610d3e57610d3d610b37565b5b6000610d4c85828601610b85565b9250506020610d5d85828601610b85565b9150509250929050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b60006002820490506001821680610dae57607f821691505b602082108103610dc157610dc0610d67565b5b50919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000610e0182610b9a565b9150610e0c83610b9a565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03821115610e4157610e40610dc7565b5b828201905092915050565b7f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f7760008201527f207a65726f000000000000000000000000000000000000000000000000000000602082015250565b6000610ea8602583610a87565b9150610eb382610e4c565b604082019050919050565b60006020820190508181036000830152610ed781610e9b565b9050919050565b7f45524332303a20617070726f76652066726f6d20746865207a65726f2061646460008201527f7265737300000000000000000000000000000000000000000000000000000000602082015250565b6000610f3a602483610a87565b9150610f4582610ede565b604082019050919050565b60006020820190508181036000830152610f6981610f2d565b9050919050565b7f45524332303a20617070726f766520746f20746865207a65726f20616464726560008201527f7373000000000000000000000000000000000000000000000000000000000000602082015250565b6000610fcc602283610a87565b9150610fd782610f70565b604082019050919050565b60006020820190508181036000830152610ffb81610fbf565b9050919050565b7f45524332303a20696e73756666696369656e7420616c6c6f77616e6365000000600082015250565b6000611038601d83610a87565b915061104382611002565b602082019050919050565b600060208201905081810360008301526110678161102b565b9050919050565b7f45524332303a207472616e736665722066726f6d20746865207a65726f20616460008201527f6472657373000000000000000000000000000000000000000000000000000000602082015250565b60006110ca602583610a87565b91506110d58261106e565b604082019050919050565b600060208201905081810360008301526110f9816110bd565b9050919050565b7f45524332303a207472616e7366657220746f20746865207a65726f206164647260008201527f6573730000000000000000000000000000000000000000000000000000000000602082015250565b600061115c602383610a87565b915061116782611100565b604082019050919050565b6000602082019050818103600083015261118b8161114f565b9050919050565b7f45524332303a207472616e7366657220616d6f756e742065786365656473206260008201527f616c616e63650000000000000000000000000000000000000000000000000000602082015250565b60006111ee602683610a87565b91506111f982611192565b604082019050919050565b6000602082019050818103600083015261121d816111e1565b905091905056fea264697066735822122072c3736f74bba249d26394f7ac8604d27b379307eb46eec56658795e56e237e664736f6c634300080f0033", "bin-runtime": "608060405234801561001057600080fd5b50600436106100a95760003560e01c80633950935111610071578063395093511461016857806370a082311461019857806395d89b41146101c8578063a457c2d7146101e6578063a9059cbb14610216578063dd62ed3e14610246576100a9565b806306fdde03146100ae578063095ea7b3146100cc57806318160ddd146100fc57806323b872dd1461011a578063313ce5671461014a575b600080fd5b6100b6610276565b6040516100c39190610b15565b60405180910390f35b6100e660048036038101906100e19190610bd0565b610308565b6040516100f39190610c2b565b60405180910390f35b61010461032b565b6040516101119190610c55565b60405180910390f35b610134600480360381019061012f9190610c70565b610335565b6040516101419190610c2b565b60405180910390f35b610152610364565b60405161015f9190610cdf565b60405180910390f35b610182600480360381019061017d9190610bd0565b61036d565b60405161018f9190610c2b565b60405180910390f35b6101b260048036038101906101ad9190610cfa565b6103a4565b6040516101bf9190610c55565b60405180910390f35b6101d06103ec565b6040516101dd9190610b15565b60405180910390f35b61020060048036038101906101fb9190610bd0565b61047e565b60405161020d9190610c2b565b60405180910390f35b610230600480360381019061022b9190610bd0565b6104f5565b60405161023d9190610c2b565b60405180910390f35b610260600480360381019061025b9190610d27565b610518565b60405161026d9190610c55565b60405180910390f35b60606003805461028590610d96565b80601f01602080910402602001604051908101604052809291908181526020018280546102b190610d96565b80156102fe5780601f106102d3576101008083540402835291602001916102fe565b820191906000526020600020905b8154815290600101906020018083116102e157829003601f168201915b5050505050905090565b60008061031361059f565b90506103208185856105a7565b600191505092915050565b6000600254905090565b60008061034061059f565b905061034d858285610770565b6103588585856107fc565b60019150509392505050565b60006012905090565b60008061037861059f565b905061039981858561038a8589610518565b6103949190610df6565b6105a7565b600191505092915050565b60008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b6060600480546103fb90610d96565b80601f016020809104026020016040519081016040528092919081815260200182805461042790610d96565b80156104745780601f1061044957610100808354040283529160200191610474565b820191906000526020600020905b81548152906001019060200180831161045757829003601f168201915b5050505050905090565b60008061048961059f565b905060006104978286610518565b9050838110156104dc576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104d390610ebe565b60405180910390fd5b6104e982868684036105a7565b60019250505092915050565b60008061050061059f565b905061050d8185856107fc565b600191505092915050565b6000600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905092915050565b600033905090565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603610616576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161060d90610f50565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610685576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161067c90610fe2565b60405180910390fd5b80600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925836040516107639190610c55565b60405180910390a3505050565b600061077c8484610518565b90507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff81146107f657818110156107e8576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107df9061104e565b60405180910390fd5b6107f584848484036105a7565b5b50505050565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff160361086b576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610862906110e0565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16036108da576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016108d190611172565b60405180910390fd5b6108e5838383610a72565b60008060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205490508181101561096b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161096290611204565b60405180910390fd5b8181036000808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550816000808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825401925050819055508273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef84604051610a599190610c55565b60405180910390a3610a6c848484610a77565b50505050565b505050565b505050565b600081519050919050565b600082825260208201905092915050565b60005b83811015610ab6578082015181840152602081019050610a9b565b83811115610ac5576000848401525b50505050565b6000601f19601f8301169050919050565b6000610ae782610a7c565b610af18185610a87565b9350610b01818560208601610a98565b610b0a81610acb565b840191505092915050565b60006020820190508181036000830152610b2f8184610adc565b905092915050565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610b6782610b3c565b9050919050565b610b7781610b5c565b8114610b8257600080fd5b50565b600081359050610b9481610b6e565b92915050565b6000819050919050565b610bad81610b9a565b8114610bb857600080fd5b50565b600081359050610bca81610ba4565b92915050565b60008060408385031215610be757610be6610b37565b5b6000610bf585828601610b85565b9250506020610c0685828601610bbb565b9150509250929050565b60008115159050919050565b610c2581610c10565b82525050565b6000602082019050610c406000830184610c1c565b92915050565b610c4f81610b9a565b82525050565b6000602082019050610c6a6000830184610c46565b92915050565b600080600060608486031215610c8957610c88610b37565b5b6000610c9786828701610b85565b9350506020610ca886828701610b85565b9250506040610cb986828701610bbb565b9150509250925092565b600060ff82169050919050565b610cd981610cc3565b82525050565b6000602082019050610cf46000830184610cd0565b92915050565b600060208284031215610d1057610d0f610b37565b5b6000610d1e84828501610b85565b91505092915050565b60008060408385031215610d3e57610d3d610b37565b5b6000610d4c85828601610b85565b9250506020610d5d85828601610b85565b9150509250929050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b60006002820490506001821680610dae57607f821691505b602082108103610dc157610dc0610d67565b5b50919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000610e0182610b9a565b9150610e0c83610b9a565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03821115610e4157610e40610dc7565b5b828201905092915050565b7f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f7760008201527f207a65726f000000000000000000000000000000000000000000000000000000602082015250565b6000610ea8602583610a87565b9150610eb382610e4c565b604082019050919050565b60006020820190508181036000830152610ed781610e9b565b9050919050565b7f45524332303a20617070726f76652066726f6d20746865207a65726f2061646460008201527f7265737300000000000000000000000000000000000000000000000000000000602082015250565b6000610f3a602483610a87565b9150610f4582610ede565b604082019050919050565b60006020820190508181036000830152610f6981610f2d565b9050919050565b7f45524332303a20617070726f766520746f20746865207a65726f20616464726560008201527f7373000000000000000000000000000000000000000000000000000000000000602082015250565b6000610fcc602283610a87565b9150610fd782610f70565b604082019050919050565b60006020820190508181036000830152610ffb81610fbf565b9050919050565b7f45524332303a20696e73756666696369656e7420616c6c6f77616e6365000000600082015250565b6000611038601d83610a87565b915061104382611002565b602082019050919050565b600060208201905081810360008301526110678161102b565b9050919050565b7f45524332303a207472616e736665722066726f6d20746865207a65726f20616460008201527f6472657373000000000000000000000000000000000000000000000000000000602082015250565b60006110ca602583610a87565b91506110d58261106e565b604082019050919050565b600060208201905081810360008301526110f9816110bd565b9050919050565b7f45524332303a207472616e7366657220746f20746865207a65726f206164647260008201527f6573730000000000000000000000000000000000000000000000000000000000602082015250565b600061115c602383610a87565b915061116782611100565b604082019050919050565b6000602082019050818103600083015261118b8161114f565b9050919050565b7f45524332303a207472616e7366657220616d6f756e742065786365656473206260008201527f616c616e63650000000000000000000000000000000000000000000000000000602082015250565b60006111ee602683610a87565b91506111f982611192565b604082019050919050565b6000602082019050818103600083015261121d816111e1565b905091905056fea264697066735822122072c3736f74bba249d26394f7ac8604d27b379307eb46eec56658795e56e237e664736f6c634300080f0033", "userdoc": {"methods": {}, "notice": null}, "devdoc": {"methods": {"allowance(address,address)": {"author": null, "details": "See {IERC20-allowance}.", "params": {}, "return": null}, "approve(address,uint256)": {"author": null, "details": "See {IERC20-approve}. NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.", "params": {}, "return": null}, "balanceOf(address)": {"author": null, "details": "See {IERC20-balanceOf}.", "params": {}, "return": null}, "constructor": {"author": null, "details": "Sets the values for {name} and {symbol}. The default value of {decimals} is 18. To select a different value for {decimals} you should overload it. All two of these values are immutable: they can only be set once during construction.", "params": {}, "return": null}, "decimals()": {"author": null, "details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {ERC20} uses, unless this function is overridden; NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.", "params": {}, "return": null}, "decreaseAllowance(address,uint256)": {"author": null, "details": "Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`.", "params": {}, "return": null}, "increaseAllowance(address,uint256)": {"author": null, "details": "Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address.", "params": {}, "return": null}, "name()": {"author": null, "details": "Returns the name of the token.", "params": {}, "return": null}, "symbol()": {"author": null, "details": "Returns the symbol of the token, usually a shorter version of the name.", "params": {}, "return": null}, "totalSupply()": {"author": null, "details": "See {IERC20-totalSupply}.", "params": {}, "return": null}, "transfer(address,uint256)": {"author": null, "details": "See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `amount`.", "params": {}, "return": null}, "transferFrom(address,address,uint256)": {"author": null, "details": "See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `amount`. - the caller must have allowance for ``from``'s tokens of at least `amount`.", "params": {}, "return": null}}, "author": null, "details": "Implementation of the {IERC20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. For a generic mechanism see {ERC20PresetMinterPauser}. TIP: For a detailed writeup see our guide https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. We have followed general OpenZeppelin Contracts guidelines: functions revert instead returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC20 applications. Additionally, an {Approval} event is emitted on calls to {transferFrom}. This allows applications to reconstruct the allowance for all accounts just by listening to said events. Other implementations of the EIP may not emit these events, as it isn't required by the specification. Finally, the non-standard {decreaseAllowance} and {increaseAllowance} functions have been added to mitigate the well-known issues around setting allowances. See {IERC20-approve}.", "title": null}}, "/Users/vladimirtrifonov/src/playground/solidity/rare-skills/advanced-solidity-bootcamp/fuzzing-with-echidna/bonding-token/lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol:IERC20": {"srcmap": "", "srcmap-runtime": "", "abi": "[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}]", "bin": "", "bin-runtime": "", "userdoc": {"methods": {}, "notice": null}, "devdoc": {"methods": {"allowance(address,address)": {"author": null, "details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.", "params": {}, "return": null}, "approve(address,uint256)": {"author": null, "details": "Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.", "params": {}, "return": null}, "balanceOf(address)": {"author": null, "details": "Returns the amount of tokens owned by `account`.", "params": {}, "return": null}, "totalSupply()": {"author": null, "details": "Returns the amount of tokens in existence.", "params": {}, "return": null}, "transfer(address,uint256)": {"author": null, "details": "Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.", "params": {}, "return": null}, "transferFrom(address,address,uint256)": {"author": null, "details": "Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.", "params": {}, "return": null}}, "author": null, "details": "Interface of the ERC20 standard as defined in the EIP.", "title": null}}, "/Users/vladimirtrifonov/src/playground/solidity/rare-skills/advanced-solidity-bootcamp/fuzzing-with-echidna/bonding-token/lib/openzeppelin-contracts/contracts/token/ERC20/extensions/IERC20Metadata.sol:IERC20Metadata": {"srcmap": "", "srcmap-runtime": "", "abi": "[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}]", "bin": "", "bin-runtime": "", "userdoc": {"methods": {}, "notice": null}, "devdoc": {"methods": {"allowance(address,address)": {"author": null, "details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.", "params": {}, "return": null}, "approve(address,uint256)": {"author": null, "details": "Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.", "params": {}, "return": null}, "balanceOf(address)": {"author": null, "details": "Returns the amount of tokens owned by `account`.", "params": {}, "return": null}, "decimals()": {"author": null, "details": "Returns the decimals places of the token.", "params": {}, "return": null}, "name()": {"author": null, "details": "Returns the name of the token.", "params": {}, "return": null}, "symbol()": {"author": null, "details": "Returns the symbol of the token.", "params": {}, "return": null}, "totalSupply()": {"author": null, "details": "Returns the amount of tokens in existence.", "params": {}, "return": null}, "transfer(address,uint256)": {"author": null, "details": "Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.", "params": {}, "return": null}, "transferFrom(address,address,uint256)": {"author": null, "details": "Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.", "params": {}, "return": null}}, "author": null, "details": "Interface for the optional metadata functions from the ERC20 standard. _Available since v4.1._", "title": null}}, "/Users/vladimirtrifonov/src/playground/solidity/rare-skills/advanced-solidity-bootcamp/fuzzing-with-echidna/bonding-token/lib/openzeppelin-contracts/contracts/utils/Address.sol:Address": {"srcmap": "194:8964:8:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;", "srcmap-runtime": "194:8964:8:-:0;;;;;;;;", "abi": "[]", "bin": "60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220b57ccc2e3fc5207e079d081dc5496c028895df2b3ace74e0400524e7e134e70664736f6c634300080f0033", "bin-runtime": "73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220b57ccc2e3fc5207e079d081dc5496c028895df2b3ace74e0400524e7e134e70664736f6c634300080f0033", "userdoc": {"methods": {}, "notice": null}, "devdoc": {"methods": {}, "author": null, "details": "Collection of functions related to the address type", "title": null}}, "/Users/vladimirtrifonov/src/playground/solidity/rare-skills/advanced-solidity-bootcamp/fuzzing-with-echidna/bonding-token/lib/openzeppelin-contracts/contracts/utils/Context.sol:Context": {"srcmap": "", "srcmap-runtime": "", "abi": "[]", "bin": "", "bin-runtime": "", "userdoc": {"methods": {}, "notice": null}, "devdoc": {"methods": {}, "author": null, "details": "Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.", "title": null}}, "/Users/vladimirtrifonov/src/playground/solidity/rare-skills/advanced-solidity-bootcamp/fuzzing-with-echidna/bonding-token/lib/openzeppelin-contracts/contracts/utils/introspection/ERC165.sol:ERC165": {"srcmap": "", "srcmap-runtime": "", "abi": "[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}]", "bin": "", "bin-runtime": "", "userdoc": {"methods": {}, "notice": null}, "devdoc": {"methods": {"supportsInterface(bytes4)": {"author": null, "details": "See {IERC165-supportsInterface}.", "params": {}, "return": null}}, "author": null, "details": "Implementation of the {IERC165} interface. Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check for the additional interface id that will be supported. For example: ```solidity function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId); } ``` Alternatively, {ERC165Storage} provides an easier to use but more expensive implementation.", "title": null}}, "/Users/vladimirtrifonov/src/playground/solidity/rare-skills/advanced-solidity-bootcamp/fuzzing-with-echidna/bonding-token/lib/openzeppelin-contracts/contracts/utils/introspection/IERC165.sol:IERC165": {"srcmap": "", "srcmap-runtime": "", "abi": "[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}]", "bin": "", "bin-runtime": "", "userdoc": {"methods": {}, "notice": null}, "devdoc": {"methods": {"supportsInterface(bytes4)": {"author": null, "details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.", "params": {}, "return": null}}, "author": null, "details": "Interface of the ERC165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[EIP]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.", "title": null}}, "/Users/vladimirtrifonov/src/playground/solidity/rare-skills/advanced-solidity-bootcamp/fuzzing-with-echidna/bonding-token/src/BondingToken.sol:BondingToken": {"srcmap": "771:8854:12:-:0;;;1441:102;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1525:5;1532:7;2050:5:5;2042;:13;;;;;;:::i;:::-;;2075:7;2065;:17;;;;;;:::i;:::-;;1976:113;;1716:1:4;1821:7;:22;;;;1441:102:12;;771:8854;;7:75:15;40:6;73:2;67:9;57:19;;7:75;:::o;88:117::-;197:1;194;187:12;211:117;320:1;317;310:12;334:117;443:1;440;433:12;457:117;566:1;563;556:12;580:102;621:6;672:2;668:7;663:2;656:5;652:14;648:28;638:38;;580:102;;;:::o;688:180::-;736:77;733:1;726:88;833:4;830:1;823:15;857:4;854:1;847:15;874:281;957:27;979:4;957:27;:::i;:::-;949:6;945:40;1087:6;1075:10;1072:22;1051:18;1039:10;1036:34;1033:62;1030:88;;;1098:18;;:::i;:::-;1030:88;1138:10;1134:2;1127:22;917:238;874:281;;:::o;1161:129::-;1195:6;1222:20;;:::i;:::-;1212:30;;1251:33;1279:4;1271:6;1251:33;:::i;:::-;1161:129;;;:::o;1296:308::-;1358:4;1448:18;1440:6;1437:30;1434:56;;;1470:18;;:::i;:::-;1434:56;1508:29;1530:6;1508:29;:::i;:::-;1500:37;;1592:4;1586;1582:15;1574:23;;1296:308;;;:::o;1610:307::-;1678:1;1688:113;1702:6;1699:1;1696:13;1688:113;;;1787:1;1782:3;1778:11;1772:18;1768:1;1763:3;1759:11;1752:39;1724:2;1721:1;1717:10;1712:15;;1688:113;;;1819:6;1816:1;1813:13;1810:101;;;1899:1;1890:6;1885:3;1881:16;1874:27;1810:101;1659:258;1610:307;;;:::o;1923:421::-;2012:5;2037:66;2053:49;2095:6;2053:49;:::i;:::-;2037:66;:::i;:::-;2028:75;;2126:6;2119:5;2112:21;2164:4;2157:5;2153:16;2202:3;2193:6;2188:3;2184:16;2181:25;2178:112;;;2209:79;;:::i;:::-;2178:112;2299:39;2331:6;2326:3;2321;2299:39;:::i;:::-;2018:326;1923:421;;;;;:::o;2364:355::-;2431:5;2480:3;2473:4;2465:6;2461:17;2457:27;2447:122;;2488:79;;:::i;:::-;2447:122;2598:6;2592:13;2623:90;2709:3;2701:6;2694:4;2686:6;2682:17;2623:90;:::i;:::-;2614:99;;2437:282;2364:355;;;;:::o;2725:853::-;2824:6;2832;2881:2;2869:9;2860:7;2856:23;2852:32;2849:119;;;2887:79;;:::i;:::-;2849:119;3028:1;3017:9;3013:17;3007:24;3058:18;3050:6;3047:30;3044:117;;;3080:79;;:::i;:::-;3044:117;3185:74;3251:7;3242:6;3231:9;3227:22;3185:74;:::i;:::-;3175:84;;2978:291;3329:2;3318:9;3314:18;3308:25;3360:18;3352:6;3349:30;3346:117;;;3382:79;;:::i;:::-;3346:117;3487:74;3553:7;3544:6;3533:9;3529:22;3487:74;:::i;:::-;3477:84;;3279:292;2725:853;;;;;:::o;3584:99::-;3636:6;3670:5;3664:12;3654:22;;3584:99;;;:::o;3689:180::-;3737:77;3734:1;3727:88;3834:4;3831:1;3824:15;3858:4;3855:1;3848:15;3875:320;3919:6;3956:1;3950:4;3946:12;3936:22;;4003:1;3997:4;3993:12;4024:18;4014:81;;4080:4;4072:6;4068:17;4058:27;;4014:81;4142:2;4134:6;4131:14;4111:18;4108:38;4105:84;;4161:18;;:::i;:::-;4105:84;3926:269;3875:320;;;:::o;4201:141::-;4250:4;4273:3;4265:11;;4296:3;4293:1;4286:14;4330:4;4327:1;4317:18;4309:26;;4201:141;;;:::o;4348:93::-;4385:6;4432:2;4427;4420:5;4416:14;4412:23;4402:33;;4348:93;;;:::o;4447:107::-;4491:8;4541:5;4535:4;4531:16;4510:37;;4447:107;;;;:::o;4560:393::-;4629:6;4679:1;4667:10;4663:18;4702:97;4732:66;4721:9;4702:97;:::i;:::-;4820:39;4850:8;4839:9;4820:39;:::i;:::-;4808:51;;4892:4;4888:9;4881:5;4877:21;4868:30;;4941:4;4931:8;4927:19;4920:5;4917:30;4907:40;;4636:317;;4560:393;;;;;:::o;4959:77::-;4996:7;5025:5;5014:16;;4959:77;;;:::o;5042:60::-;5070:3;5091:5;5084:12;;5042:60;;;:::o;5108:142::-;5158:9;5191:53;5209:34;5218:24;5236:5;5218:24;:::i;:::-;5209:34;:::i;:::-;5191:53;:::i;:::-;5178:66;;5108:142;;;:::o;5256:75::-;5299:3;5320:5;5313:12;;5256:75;;;:::o;5337:269::-;5447:39;5478:7;5447:39;:::i;:::-;5508:91;5557:41;5581:16;5557:41;:::i;:::-;5549:6;5542:4;5536:11;5508:91;:::i;:::-;5502:4;5495:105;5413:193;5337:269;;;:::o;5612:73::-;5657:3;5612:73;:::o;5691:189::-;5768:32;;:::i;:::-;5809:65;5867:6;5859;5853:4;5809:65;:::i;:::-;5744:136;5691:189;;:::o;5886:186::-;5946:120;5963:3;5956:5;5953:14;5946:120;;;6017:39;6054:1;6047:5;6017:39;:::i;:::-;5990:1;5983:5;5979:13;5970:22;;5946:120;;;5886:186;;:::o;6078:543::-;6179:2;6174:3;6171:11;6168:446;;;6213:38;6245:5;6213:38;:::i;:::-;6297:29;6315:10;6297:29;:::i;:::-;6287:8;6283:44;6480:2;6468:10;6465:18;6462:49;;;6501:8;6486:23;;6462:49;6524:80;6580:22;6598:3;6580:22;:::i;:::-;6570:8;6566:37;6553:11;6524:80;:::i;:::-;6183:431;;6168:446;6078:543;;;:::o;6627:117::-;6681:8;6731:5;6725:4;6721:16;6700:37;;6627:117;;;;:::o;6750:169::-;6794:6;6827:51;6875:1;6871:6;6863:5;6860:1;6856:13;6827:51;:::i;:::-;6823:56;6908:4;6902;6898:15;6888:25;;6801:118;6750:169;;;;:::o;6924:295::-;7000:4;7146:29;7171:3;7165:4;7146:29;:::i;:::-;7138:37;;7208:3;7205:1;7201:11;7195:4;7192:21;7184:29;;6924:295;;;;:::o;7224:1395::-;7341:37;7374:3;7341:37;:::i;:::-;7443:18;7435:6;7432:30;7429:56;;;7465:18;;:::i;:::-;7429:56;7509:38;7541:4;7535:11;7509:38;:::i;:::-;7594:67;7654:6;7646;7640:4;7594:67;:::i;:::-;7688:1;7712:4;7699:17;;7744:2;7736:6;7733:14;7761:1;7756:618;;;;8418:1;8435:6;8432:77;;;8484:9;8479:3;8475:19;8469:26;8460:35;;8432:77;8535:67;8595:6;8588:5;8535:67;:::i;:::-;8529:4;8522:81;8391:222;7726:887;;7756:618;7808:4;7804:9;7796:6;7792:22;7842:37;7874:4;7842:37;:::i;:::-;7901:1;7915:208;7929:7;7926:1;7923:14;7915:208;;;8008:9;8003:3;7999:19;7993:26;7985:6;7978:42;8059:1;8051:6;8047:14;8037:24;;8106:2;8095:9;8091:18;8078:31;;7952:4;7949:1;7945:12;7940:17;;7915:208;;;8151:6;8142:7;8139:19;8136:179;;;8209:9;8204:3;8200:19;8194:26;8252:48;8294:4;8286:6;8282:17;8271:9;8252:48;:::i;:::-;8244:6;8237:64;8159:156;8136:179;8361:1;8357;8349:6;8345:14;8341:22;8335:4;8328:36;7763:611;;;7726:887;;7316:1303;;;7224:1395;;:::o;771:8854:12:-;;;;;;;", "srcmap-runtime": "771:8854:12:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6319:23;;;;;;;;;;:::i;:::-;;;;;;;;771:8854;;;5958:20;6010:1;5998:9;:13;5990:44;;;;;;;;;;;;:::i;:::-;;;;;;;;;6044:14;6061:34;6085:9;6061:23;:34::i;:::-;6044:51;;6105:15;6134:6;;6123:29;;;;;;;:::i;:::-;6105:47;;6180:7;6170:6;:17;;6162:51;;;;;;;;;;;;:::i;:::-;;;;;;;;;6223:11;6227:6;6223:3;:11::i;:::-;6262:6;6251:18;;;;;;;;:::i;:::-;;;;;;;;;;;;;6244:25;;;;5886:390;;;771:8854;;;;;;1788:240;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2154:98:5;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4431:197;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1104:147:0;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3242:106:5;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;7179:296:12;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;5190:286:5;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3091:91;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3496:155:0;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;5871:234:5;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1588:285:0;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4757:163:12;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;932:61;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3406:125:5;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;5476:234:12;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2365:102:5;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;6592:427;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3727:189;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;999:64:12;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;5198:163;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2854:343:0;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4013:283;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2246:175;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2174:272:12;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;6701:253;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3974:149:5;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3268:262:12;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;5198:163;5282:7;5308:46;5332:6;5340:13;:11;:13::i;:::-;5308:23;:46::i;:::-;5301:53;;5198:163;;;:::o;2174:272::-;2261:21:4;:19;:21::i;:::-;:1:12::1;2249:9;:13;2241:44;;;;;;;;;;;;:::i;:::-;;;;;;;;;2312:1;2303:6;:10;2295:37;;;;;;;;;;;;:::i;:::-;;;;;;;;;980:13;2350:6;:31;;2342:62;;;;;;;;;;;;:::i;:::-;;;;;;;;;2415:24;2420:10;2432:6;2415:4;:24::i;:::-;2303:20:4::0;:18;:20::i;:::-;2174:272:12;:::o;1788:240::-;1888:4;1938:31;1923:46;;;:11;:46;;;;:98;;;;1985:36;2009:11;1985:23;:36::i;:::-;1923:98;1904:117;;1788:240;;;:::o;2154:98:5:-;2208:13;2240:5;2233:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2154:98;:::o;4431:197::-;4514:4;4530:13;4546:12;:10;:12::i;:::-;4530:28;;4568:32;4577:5;4584:7;4593:6;4568:8;:32::i;:::-;4617:4;4610:11;;;4431:197;;;;:::o;1104:147:0:-;1190:4;1213:31;1229:2;1233:6;1213:31;;;;;;;;;;;;:15;:31::i;:::-;1206:38;;1104:147;;;;:::o;3242:106:5:-;3303:7;3329:12;;3322:19;;3242:106;:::o;7179:296:12:-;7287:7;7306:12;7321:55;7374:1;7368;7359:6;:10;;;;:::i;:::-;7358:17;;;;:::i;:::-;7354:1;906:7;7331:6;:19;;;;:::i;:::-;7330:25;;;;:::i;:::-;:45;;;;:::i;:::-;7321:8;:55::i;:::-;7306:70;;7411:1;7402:6;:10;;;;:::i;:::-;7394:4;:18;;7386:48;;;;;;;;;;;;:::i;:::-;;;;;;;;;7467:1;7458:6;7451:4;:13;;;;:::i;:::-;:17;;;;:::i;:::-;7444:24;;;7179:296;;;;:::o;5190:286:5:-;5317:4;5333:15;5351:12;:10;:12::i;:::-;5333:30;;5373:38;5389:4;5395:7;5404:6;5373:15;:38::i;:::-;5421:27;5431:4;5437:2;5441:6;5421:9;:27::i;:::-;5465:4;5458:11;;;5190:286;;;;;:::o;3091:91::-;3149:5;3173:2;3166:9;;3091:91;:::o;3496:155:0:-;3586:4;3609:35;3624:7;3633:6;3609:35;;;;;;;;;;;;:14;:35::i;:::-;3602:42;;3496:155;;;;:::o;5871:234:5:-;5959:4;5975:13;5991:12;:10;:12::i;:::-;5975:28;;6013:64;6022:5;6029:7;6066:10;6038:25;6048:5;6055:7;6038:9;:25::i;:::-;:38;;;;:::i;:::-;6013:8;:64::i;:::-;6094:4;6087:11;;;5871:234;;;;:::o;1588:285:0:-;1693:4;1709:20;1718:2;1722:6;1709:8;:20::i;:::-;;1747:56;1772:12;:10;:12::i;:::-;1786:2;1790:6;1798:4;1747:24;:56::i;:::-;1739:106;;;;;;;;;;;;:::i;:::-;;;;;;;;;1862:4;1855:11;;1588:285;;;;;:::o;4757:163:12:-;4841:7;4867:46;4891:6;4899:13;:11;:13::i;:::-;4867:23;:46::i;:::-;4860:53;;4757:163;;;:::o;932:61::-;980:13;932:61;:::o;3406:125:5:-;3480:7;3506:9;:18;3516:7;3506:18;;;;;;;;;;;;;;;;3499:25;;3406:125;;;:::o;5476:234:12:-;5634:6;1214:4;1192:27;;:10;:27;;;1184:58;;;;;;;;;;;;:::i;:::-;;;;;;;;;5659:44:::1;;;5652:51;;5476:234:::0;;;;;;;:::o;2365:102:5:-;2421:13;2453:7;2446:14;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2365:102;:::o;6592:427::-;6685:4;6701:13;6717:12;:10;:12::i;:::-;6701:28;;6739:24;6766:25;6776:5;6783:7;6766:9;:25::i;:::-;6739:52;;6829:15;6809:16;:35;;6801:85;;;;;;;;;;;;:::i;:::-;;;;;;;;;6920:60;6929:5;6936:7;6964:15;6945:16;:34;6920:8;:60::i;:::-;7008:4;7001:11;;;;6592:427;;;;:::o;3727:189::-;3806:4;3822:13;3838:12;:10;:12::i;:::-;3822:28;;3860;3870:5;3877:2;3881:6;3860:9;:28::i;:::-;3905:4;3898:11;;;3727:189;;;;:::o;999:64:12:-;1046:17;999:64;:::o;2854:343:0:-;3015:4;3031:30;3044:4;3050:2;3054:6;3031:12;:30::i;:::-;;3079:48;3104:4;3110:2;3114:6;3122:4;3079:24;:48::i;:::-;3071:98;;;;;;;;;;;;:::i;:::-;;;;;;;;;3186:4;3179:11;;2854:343;;;;;;:::o;4013:283::-;4122:4;4138:24;4146:7;4155:6;4138:7;:24::i;:::-;;4180:47;4205:7;4214:6;4222:4;4180:24;:47::i;:::-;4172:96;;;;;;;;;;;;:::i;:::-;;;;;;;;;4285:4;4278:11;;4013:283;;;;;:::o;2246:175::-;2350:4;2373:41;2393:4;2399:2;2403:6;2373:41;;;;;;;;;;;;:19;:41::i;:::-;2366:48;;2246:175;;;;;:::o;6701:253:12:-;6809:7;6945:1;6936:6;:10;;;;:::i;:::-;6930:1;906:7;6895:1;6889;6880:6;:10;;;;:::i;:::-;6879:17;;;;:::i;:::-;6875:1;6869;6860:6;6851;:15;;;;:::i;:::-;:19;;;;:::i;:::-;6850:26;;;;:::i;:::-;:46;;;;:::i;:::-;6849:61;;;;:::i;:::-;6848:83;;;;:::i;:::-;6847:100;;;;:::i;:::-;6828:119;;6701:253;;;;:::o;3974:149:5:-;4063:7;4089:11;:18;4101:5;4089:18;;;;;;;;;;;;;;;:27;4108:7;4089:27;;;;;;;;;;;;;;;;4082:34;;3974:149;;;;:::o;3268:262:12:-;2261:21:4;:19;:21::i;:::-;3363:6:12::1;3338:21;3348:10;3338:9;:21::i;:::-;:31;;3330:63;;;;;;;;;;;;:::i;:::-;;;;;;;;;3404:12;3419:31;3436:4;3443:6;3419:8;:31::i;:::-;3404:46;;3465:7;3460:64;;3488:25;;;;;;;;;;:::i;:::-;;;;;;;;3460:64;3320:210;2303:20:4::0;:18;:20::i;:::-;3268:262:12;:::o;2336:287:4:-;1759:1;2468:7;;:19;2460:63;;;;;;;;;;;;:::i;:::-;;;;;;;;;1759:1;2598:7;:18;;;;2336:287::o;2635:475:12:-;2700:12;2715:31;2739:6;2715:23;:31::i;:::-;2700:46;;2777:4;2764:9;:17;;2756:48;;;;;;;;;;;;:::i;:::-;;;;;;;;;2814:22;2820:7;2829:6;2814:5;:22::i;:::-;1046:17;2867:13;:11;:13::i;:::-;:37;;2846:112;;;;;;;;;;;;:::i;:::-;;;;;;;;;2984:4;2972:9;:16;2968:100;;;3004:53;3030:7;3052:4;3040:9;:16;;;;:::i;:::-;3004:17;:53::i;:::-;2968:100;3087:7;3083:20;;;3096:6;3083:20;;;;;;:::i;:::-;;;;;;;;2690:420;2635:475;;:::o;2629:209:4:-;1716:1;2809:7;:22;;;;2629:209::o;612:213:0:-;714:4;752:26;737:41;;;:11;:41;;;;:81;;;;782:36;806:11;782:23;:36::i;:::-;737:81;730:88;;612:213;;;:::o;640:96:9:-;693:7;719:10;712:17;;640:96;:::o;10504:370:5:-;10652:1;10635:19;;:5;:19;;;10627:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;10732:1;10713:21;;:7;:21;;;10705:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;10814:6;10784:11;:18;10796:5;10784:18;;;;;;;;;;;;;;;:27;10803:7;10784:27;;;;;;;;;;;;;;;:36;;;;10851:7;10835:32;;10844:5;10835:32;;;10860:6;10835:32;;;;;;:::i;:::-;;;;;;;;10504:370;;;:::o;7665:98:12:-;7717:7;7743:13;7751:1;7754;7743:7;:13::i;:::-;7736:20;;7665:98;;;:::o;11155:441:5:-;11285:24;11312:25;11322:5;11329:7;11312:9;:25::i;:::-;11285:52;;11371:17;11351:16;:37;11347:243;;11432:6;11412:16;:26;;11404:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;11514:51;11523:5;11530:7;11558:6;11539:16;:25;11514:8;:51::i;:::-;11347:243;11275:321;11155:441;;;:::o;7473:818::-;7615:1;7599:18;;:4;:18;;;7591:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;7691:1;7677:16;;:2;:16;;;7669:64;;;;;;;;;;;;:::i;:::-;;;;;;;;;7744:38;7765:4;7771:2;7775:6;7744:20;:38::i;:::-;7793:19;7815:9;:15;7825:4;7815:15;;;;;;;;;;;;;;;;7793:37;;7863:6;7848:11;:21;;7840:72;;;;;;;;;;;;:::i;:::-;;;;;;;;;7978:6;7964:11;:20;7946:9;:15;7956:4;7946:15;;;;;;;;;;;;;;;:38;;;;8178:6;8161:9;:13;8171:2;8161:13;;;;;;;;;;;;;;;;:23;;;;;;;;;;;8225:2;8210:26;;8219:4;8210:26;;;8229:6;8210:26;;;;;;:::i;:::-;;;;;;;;8247:37;8267:4;8273:2;8277:6;8247:19;:37::i;:::-;7581:710;7473:818;;;:::o;4871:850:0:-;5039:4;5060:22;:9;:20;;;:22::i;:::-;5055:105;;5098:51;;;;;;;;;;:::i;:::-;;;;;;;;5055:105;5191:9;5174:46;;;5221:12;:10;:12::i;:::-;5235:6;5243;5251:4;5174:82;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;5170:545;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5431:1;5414:6;:13;:18;5410:295;;5452:62;;;;;;;;;;:::i;:::-;;;;;;;;5410:295;5665:6;5659:13;5650:6;5646:2;5642:15;5635:38;5170:545;5312:44;;;5302:54;;;:6;:54;;;;5295:61;;;4871:850;;;;;;:::o;6190:805::-;6332:4;6353:20;:7;:18;;;:20::i;:::-;6348:101;;6389:49;;;;;;;;;;:::i;:::-;;;;;;;;6348:101;6479:7;6463:43;;;6507:12;:10;:12::i;:::-;6521:6;6529:4;6463:71;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;6459:530;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6708:1;6691:6;:13;:18;6687:292;;6729:59;;;;;;;;;;:::i;:::-;;;;;;;;6687:292;6939:6;6933:13;6924:6;6920:2;6916:15;6909:38;6459:530;6590:43;;;6580:53;;;:6;:53;;;;6573:60;;;6190:805;;;;;:::o;8567:535:5:-;8669:1;8650:21;;:7;:21;;;8642:65;;;;;;;;;;;;:::i;:::-;;;;;;;;;8718:49;8747:1;8751:7;8760:6;8718:20;:49::i;:::-;8794:6;8778:12;;:22;;;;;;;:::i;:::-;;;;;;;;8968:6;8946:9;:18;8956:7;8946:18;;;;;;;;;;;;;;;;:28;;;;;;;;;;;9020:7;8999:37;;9016:1;8999:37;;;9029:6;8999:37;;;;;;:::i;:::-;;;;;;;;9047:48;9075:1;9079:7;9088:6;9047:19;:48::i;:::-;8567:535;;:::o;2412:312:8:-;2526:6;2501:21;:31;;2493:73;;;;;;;;;;;;:::i;:::-;;;;;;;;;2578:12;2596:9;:14;;2618:6;2596:33;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2577:52;;;2647:7;2639:78;;;;;;;;;;;;:::i;:::-;;;;;;;;;2483:241;2412:312;;:::o;829:155:10:-;914:4;952:25;937:40;;;:11;:40;;;;930:47;;829:155;;;:::o;9020:603:12:-;9082:7;9113:1;9109;:5;9101:39;;;;;;;;;;;;:::i;:::-;;;;;;;;;9160:1;9155;:6;9151:45;;9184:1;9177:8;;;;9151:45;9206:12;9232:13;9248:1;9232:17;;9260:331;9274:5;9267:4;:12;9260:331;;;9295:11;9326:1;9317:5;9310:4;:12;;;;:::i;:::-;9309:18;;;;:::i;:::-;9295:32;;9341:21;9372:1;9365:3;:8;;;;:::i;:::-;9341:32;;9409:1;9392:13;:18;9388:193;;9437:3;9430:10;;;;;;;;9388:193;9481:1;9465:13;:17;9461:120;;;9515:1;9509:3;:7;;;;:::i;:::-;9502:14;;9461:120;;;9563:3;9555:11;;9461:120;9281:310;;9260:331;;;9615:1;9608:4;:8;;;;:::i;:::-;9601:15;;;;9020:603;;;;;:::o;12180:121:5:-;;;;:::o;4310:226:12:-;4459:1;4443:18;;:4;:18;;;;:41;;;;;4479:4;4465:19;;:2;:19;;;4443:41;4439:91;;;4500:19;4506:4;4512:6;4500:5;:19::i;:::-;4439:91;4310:226;;;:::o;1175:320:8:-;1235:4;1487:1;1465:7;:19;;;:23;1458:30;;1175:320;;;:::o;3720:249:12:-;3786:28;3800:4;3807:6;3786:5;:28::i;:::-;3824:14;3841:31;3865:6;3841:23;:31::i;:::-;3824:48;;3882:43;3908:7;3918:6;3882:17;:43::i;:::-;3946:7;3941:21;;;3955:6;3941:21;;;;;;:::i;:::-;;;;;;;;3776:193;3720:249;;:::o;9422:659:5:-;9524:1;9505:21;;:7;:21;;;9497:67;;;;;;;;;;;;:::i;:::-;;;;;;;;;9575:49;9596:7;9613:1;9617:6;9575:20;:49::i;:::-;9635:22;9660:9;:18;9670:7;9660:18;;;;;;;;;;;;;;;;9635:43;;9714:6;9696:14;:24;;9688:71;;;;;;;;;;;;:::i;:::-;;;;;;;;;9831:6;9814:14;:23;9793:9;:18;9803:7;9793:18;;;;;;;;;;;;;;;:44;;;;9946:6;9930:12;;:22;;;;;;;;;;;10004:1;9978:37;;9987:7;9978:37;;;10008:6;9978:37;;;;;;:::i;:::-;;;;;;;;10026:48;10046:7;10063:1;10067:6;10026:19;:48::i;:::-;9487:594;9422:659;;:::o;7:169:15:-;91:11;125:6;120:3;113:19;165:4;160:3;156:14;141:29;;7:169;;;;:::o;182:163::-;322:15;318:1;310:6;306:14;299:39;182:163;:::o;351:366::-;493:3;514:67;578:2;573:3;514:67;:::i;:::-;507:74;;590:93;679:3;590:93;:::i;:::-;708:2;703:3;699:12;692:19;;351:366;;;:::o;723:419::-;889:4;927:2;916:9;912:18;904:26;;976:9;970:4;966:20;962:1;951:9;947:17;940:47;1004:131;1130:4;1004:131;:::i;:::-;996:139;;723:419;;;:::o;1148:168::-;1288:20;1284:1;1276:6;1272:14;1265:44;1148:168;:::o;1322:366::-;1464:3;1485:67;1549:2;1544:3;1485:67;:::i;:::-;1478:74;;1561:93;1650:3;1561:93;:::i;:::-;1679:2;1674:3;1670:12;1663:19;;1322:366;;;:::o;1694:419::-;1860:4;1898:2;1887:9;1883:18;1875:26;;1947:9;1941:4;1937:20;1933:1;1922:9;1918:17;1911:47;1975:131;2101:4;1975:131;:::i;:::-;1967:139;;1694:419;;;:::o;2119:75::-;2152:6;2185:2;2179:9;2169:19;;2119:75;:::o;2200:117::-;2309:1;2306;2299:12;2323:117;2432:1;2429;2422:12;2446:77;2483:7;2512:5;2501:16;;2446:77;;;:::o;2529:122::-;2602:24;2620:5;2602:24;:::i;:::-;2595:5;2592:35;2582:63;;2641:1;2638;2631:12;2582:63;2529:122;:::o;2657:139::-;2703:5;2741:6;2728:20;2719:29;;2757:33;2784:5;2757:33;:::i;:::-;2657:139;;;;:::o;2802:329::-;2861:6;2910:2;2898:9;2889:7;2885:23;2881:32;2878:119;;;2916:79;;:::i;:::-;2878:119;3036:1;3061:53;3106:7;3097:6;3086:9;3082:22;3061:53;:::i;:::-;3051:63;;3007:117;2802:329;;;;:::o;3137:171::-;3277:23;3273:1;3265:6;3261:14;3254:47;3137:171;:::o;3314:366::-;3456:3;3477:67;3541:2;3536:3;3477:67;:::i;:::-;3470:74;;3553:93;3642:3;3553:93;:::i;:::-;3671:2;3666:3;3662:12;3655:19;;3314:366;;;:::o;3686:419::-;3852:4;3890:2;3879:9;3875:18;3867:26;;3939:9;3933:4;3929:20;3925:1;3914:9;3910:17;3903:47;3967:131;4093:4;3967:131;:::i;:::-;3959:139;;3686:419;;;:::o;4111:118::-;4198:24;4216:5;4198:24;:::i;:::-;4193:3;4186:37;4111:118;;:::o;4235:222::-;4328:4;4366:2;4355:9;4351:18;4343:26;;4379:71;4447:1;4436:9;4432:17;4423:6;4379:71;:::i;:::-;4235:222;;;;:::o;4463:149::-;4499:7;4539:66;4532:5;4528:78;4517:89;;4463:149;;;:::o;4618:120::-;4690:23;4707:5;4690:23;:::i;:::-;4683:5;4680:34;4670:62;;4728:1;4725;4718:12;4670:62;4618:120;:::o;4744:137::-;4789:5;4827:6;4814:20;4805:29;;4843:32;4869:5;4843:32;:::i;:::-;4744:137;;;;:::o;4887:327::-;4945:6;4994:2;4982:9;4973:7;4969:23;4965:32;4962:119;;;5000:79;;:::i;:::-;4962:119;5120:1;5145:52;5189:7;5180:6;5169:9;5165:22;5145:52;:::i;:::-;5135:62;;5091:116;4887:327;;;;:::o;5220:90::-;5254:7;5297:5;5290:13;5283:21;5272:32;;5220:90;;;:::o;5316:109::-;5397:21;5412:5;5397:21;:::i;:::-;5392:3;5385:34;5316:109;;:::o;5431:210::-;5518:4;5556:2;5545:9;5541:18;5533:26;;5569:65;5631:1;5620:9;5616:17;5607:6;5569:65;:::i;:::-;5431:210;;;;:::o;5647:99::-;5699:6;5733:5;5727:12;5717:22;;5647:99;;;:::o;5752:307::-;5820:1;5830:113;5844:6;5841:1;5838:13;5830:113;;;5929:1;5924:3;5920:11;5914:18;5910:1;5905:3;5901:11;5894:39;5866:2;5863:1;5859:10;5854:15;;5830:113;;;5961:6;5958:1;5955:13;5952:101;;;6041:1;6032:6;6027:3;6023:16;6016:27;5952:101;5801:258;5752:307;;;:::o;6065:102::-;6106:6;6157:2;6153:7;6148:2;6141:5;6137:14;6133:28;6123:38;;6065:102;;;:::o;6173:364::-;6261:3;6289:39;6322:5;6289:39;:::i;:::-;6344:71;6408:6;6403:3;6344:71;:::i;:::-;6337:78;;6424:52;6469:6;6464:3;6457:4;6450:5;6446:16;6424:52;:::i;:::-;6501:29;6523:6;6501:29;:::i;:::-;6496:3;6492:39;6485:46;;6265:272;6173:364;;;;:::o;6543:313::-;6656:4;6694:2;6683:9;6679:18;6671:26;;6743:9;6737:4;6733:20;6729:1;6718:9;6714:17;6707:47;6771:78;6844:4;6835:6;6771:78;:::i;:::-;6763:86;;6543:313;;;;:::o;6862:126::-;6899:7;6939:42;6932:5;6928:54;6917:65;;6862:126;;;:::o;6994:96::-;7031:7;7060:24;7078:5;7060:24;:::i;:::-;7049:35;;6994:96;;;:::o;7096:122::-;7169:24;7187:5;7169:24;:::i;:::-;7162:5;7159:35;7149:63;;7208:1;7205;7198:12;7149:63;7096:122;:::o;7224:139::-;7270:5;7308:6;7295:20;7286:29;;7324:33;7351:5;7324:33;:::i;:::-;7224:139;;;;:::o;7369:474::-;7437:6;7445;7494:2;7482:9;7473:7;7469:23;7465:32;7462:119;;;7500:79;;:::i;:::-;7462:119;7620:1;7645:53;7690:7;7681:6;7670:9;7666:22;7645:53;:::i;:::-;7635:63;;7591:117;7747:2;7773:53;7818:7;7809:6;7798:9;7794:22;7773:53;:::i;:::-;7763:63;;7718:118;7369:474;;;;;:::o;7849:::-;7917:6;7925;7974:2;7962:9;7953:7;7949:23;7945:32;7942:119;;;7980:79;;:::i;:::-;7942:119;8100:1;8125:53;8170:7;8161:6;8150:9;8146:22;8125:53;:::i;:::-;8115:63;;8071:117;8227:2;8253:53;8298:7;8289:6;8278:9;8274:22;8253:53;:::i;:::-;8243:63;;8198:118;7849:474;;;;;:::o;8329:619::-;8406:6;8414;8422;8471:2;8459:9;8450:7;8446:23;8442:32;8439:119;;;8477:79;;:::i;:::-;8439:119;8597:1;8622:53;8667:7;8658:6;8647:9;8643:22;8622:53;:::i;:::-;8612:63;;8568:117;8724:2;8750:53;8795:7;8786:6;8775:9;8771:22;8750:53;:::i;:::-;8740:63;;8695:118;8852:2;8878:53;8923:7;8914:6;8903:9;8899:22;8878:53;:::i;:::-;8868:63;;8823:118;8329:619;;;;;:::o;8954:86::-;8989:7;9029:4;9022:5;9018:16;9007:27;;8954:86;;;:::o;9046:112::-;9129:22;9145:5;9129:22;:::i;:::-;9124:3;9117:35;9046:112;;:::o;9164:214::-;9253:4;9291:2;9280:9;9276:18;9268:26;;9304:67;9368:1;9357:9;9353:17;9344:6;9304:67;:::i;:::-;9164:214;;;;:::o;9384:117::-;9493:1;9490;9483:12;9507:117;9616:1;9613;9606:12;9630:180;9678:77;9675:1;9668:88;9775:4;9772:1;9765:15;9799:4;9796:1;9789:15;9816:281;9899:27;9921:4;9899:27;:::i;:::-;9891:6;9887:40;10029:6;10017:10;10014:22;9993:18;9981:10;9978:34;9975:62;9972:88;;;10040:18;;:::i;:::-;9972:88;10080:10;10076:2;10069:22;9859:238;9816:281;;:::o;10103:129::-;10137:6;10164:20;;:::i;:::-;10154:30;;10193:33;10221:4;10213:6;10193:33;:::i;:::-;10103:129;;;:::o;10238:307::-;10299:4;10389:18;10381:6;10378:30;10375:56;;;10411:18;;:::i;:::-;10375:56;10449:29;10471:6;10449:29;:::i;:::-;10441:37;;10533:4;10527;10523:15;10515:23;;10238:307;;;:::o;10551:154::-;10635:6;10630:3;10625;10612:30;10697:1;10688:6;10683:3;10679:16;10672:27;10551:154;;;:::o;10711:410::-;10788:5;10813:65;10829:48;10870:6;10829:48;:::i;:::-;10813:65;:::i;:::-;10804:74;;10901:6;10894:5;10887:21;10939:4;10932:5;10928:16;10977:3;10968:6;10963:3;10959:16;10956:25;10953:112;;;10984:79;;:::i;:::-;10953:112;11074:41;11108:6;11103:3;11098;11074:41;:::i;:::-;10794:327;10711:410;;;;;:::o;11140:338::-;11195:5;11244:3;11237:4;11229:6;11225:17;11221:27;11211:122;;11252:79;;:::i;:::-;11211:122;11369:6;11356:20;11394:78;11468:3;11460:6;11453:4;11445:6;11441:17;11394:78;:::i;:::-;11385:87;;11201:277;11140:338;;;;:::o;11484:797::-;11570:6;11578;11586;11635:2;11623:9;11614:7;11610:23;11606:32;11603:119;;;11641:79;;:::i;:::-;11603:119;11761:1;11786:53;11831:7;11822:6;11811:9;11807:22;11786:53;:::i;:::-;11776:63;;11732:117;11888:2;11914:53;11959:7;11950:6;11939:9;11935:22;11914:53;:::i;:::-;11904:63;;11859:118;12044:2;12033:9;12029:18;12016:32;12075:18;12067:6;12064:30;12061:117;;;12097:79;;:::i;:::-;12061:117;12202:62;12256:7;12247:6;12236:9;12232:22;12202:62;:::i;:::-;12192:72;;11987:287;11484:797;;;;;:::o;12287:329::-;12346:6;12395:2;12383:9;12374:7;12370:23;12366:32;12363:119;;;12401:79;;:::i;:::-;12363:119;12521:1;12546:53;12591:7;12582:6;12571:9;12567:22;12546:53;:::i;:::-;12536:63;;12492:117;12287:329;;;;:::o;12622:117::-;12731:1;12728;12721:12;12745:117;12854:1;12851;12844:12;12881:552;12938:8;12948:6;12998:3;12991:4;12983:6;12979:17;12975:27;12965:122;;13006:79;;:::i;:::-;12965:122;13119:6;13106:20;13096:30;;13149:18;13141:6;13138:30;13135:117;;;13171:79;;:::i;:::-;13135:117;13285:4;13277:6;13273:17;13261:29;;13339:3;13331:4;13323:6;13319:17;13309:8;13305:32;13302:41;13299:128;;;13346:79;;:::i;:::-;13299:128;12881:552;;;;;:::o;13439:963::-;13536:6;13544;13552;13560;13568;13617:3;13605:9;13596:7;13592:23;13588:33;13585:120;;;13624:79;;:::i;:::-;13585:120;13744:1;13769:53;13814:7;13805:6;13794:9;13790:22;13769:53;:::i;:::-;13759:63;;13715:117;13871:2;13897:53;13942:7;13933:6;13922:9;13918:22;13897:53;:::i;:::-;13887:63;;13842:118;13999:2;14025:53;14070:7;14061:6;14050:9;14046:22;14025:53;:::i;:::-;14015:63;;13970:118;14155:2;14144:9;14140:18;14127:32;14186:18;14178:6;14175:30;14172:117;;;14208:79;;:::i;:::-;14172:117;14321:64;14377:7;14368:6;14357:9;14353:22;14321:64;:::i;:::-;14303:82;;;;14098:297;13439:963;;;;;;;;:::o;14408:115::-;14493:23;14510:5;14493:23;:::i;:::-;14488:3;14481:36;14408:115;;:::o;14529:218::-;14620:4;14658:2;14647:9;14643:18;14635:26;;14671:69;14737:1;14726:9;14722:17;14713:6;14671:69;:::i;:::-;14529:218;;;;:::o;14753:943::-;14848:6;14856;14864;14872;14921:3;14909:9;14900:7;14896:23;14892:33;14889:120;;;14928:79;;:::i;:::-;14889:120;15048:1;15073:53;15118:7;15109:6;15098:9;15094:22;15073:53;:::i;:::-;15063:63;;15019:117;15175:2;15201:53;15246:7;15237:6;15226:9;15222:22;15201:53;:::i;:::-;15191:63;;15146:118;15303:2;15329:53;15374:7;15365:6;15354:9;15350:22;15329:53;:::i;:::-;15319:63;;15274:118;15459:2;15448:9;15444:18;15431:32;15490:18;15482:6;15479:30;15476:117;;;15512:79;;:::i;:::-;15476:117;15617:62;15671:7;15662:6;15651:9;15647:22;15617:62;:::i;:::-;15607:72;;15402:287;14753:943;;;;;;;:::o;15702:474::-;15770:6;15778;15827:2;15815:9;15806:7;15802:23;15798:32;15795:119;;;15833:79;;:::i;:::-;15795:119;15953:1;15978:53;16023:7;16014:6;16003:9;15999:22;15978:53;:::i;:::-;15968:63;;15924:117;16080:2;16106:53;16151:7;16142:6;16131:9;16127:22;16106:53;:::i;:::-;16096:63;;16051:118;15702:474;;;;;:::o;16182:164::-;16322:16;16318:1;16310:6;16306:14;16299:40;16182:164;:::o;16352:366::-;16494:3;16515:67;16579:2;16574:3;16515:67;:::i;:::-;16508:74;;16591:93;16680:3;16591:93;:::i;:::-;16709:2;16704:3;16700:12;16693:19;;16352:366;;;:::o;16724:419::-;16890:4;16928:2;16917:9;16913:18;16905:26;;16977:9;16971:4;16967:20;16963:1;16952:9;16948:17;16941:47;17005:131;17131:4;17005:131;:::i;:::-;16997:139;;16724:419;;;:::o;17149:168::-;17289:20;17285:1;17277:6;17273:14;17266:44;17149:168;:::o;17323:366::-;17465:3;17486:67;17550:2;17545:3;17486:67;:::i;:::-;17479:74;;17562:93;17651:3;17562:93;:::i;:::-;17680:2;17675:3;17671:12;17664:19;;17323:366;;;:::o;17695:419::-;17861:4;17899:2;17888:9;17884:18;17876:26;;17948:9;17942:4;17938:20;17934:1;17923:9;17919:17;17912:47;17976:131;18102:4;17976:131;:::i;:::-;17968:139;;17695:419;;;:::o;18120:180::-;18168:77;18165:1;18158:88;18265:4;18262:1;18255:15;18289:4;18286:1;18279:15;18306:320;18350:6;18387:1;18381:4;18377:12;18367:22;;18434:1;18428:4;18424:12;18455:18;18445:81;;18511:4;18503:6;18499:17;18489:27;;18445:81;18573:2;18565:6;18562:14;18542:18;18539:38;18536:84;;18592:18;;:::i;:::-;18536:84;18357:269;18306:320;;;:::o;18632:180::-;18680:77;18677:1;18670:88;18777:4;18774:1;18767:15;18801:4;18798:1;18791:15;18818:305;18858:3;18877:20;18895:1;18877:20;:::i;:::-;18872:25;;18911:20;18929:1;18911:20;:::i;:::-;18906:25;;19065:1;18997:66;18993:74;18990:1;18987:81;18984:107;;;19071:18;;:::i;:::-;18984:107;19115:1;19112;19108:9;19101:16;;18818:305;;;;:::o;19129:102::-;19171:8;19218:5;19215:1;19211:13;19190:34;;19129:102;;;:::o;19237:848::-;19298:5;19305:4;19329:6;19320:15;;19353:5;19344:14;;19367:712;19388:1;19378:8;19375:15;19367:712;;;19483:4;19478:3;19474:14;19468:4;19465:24;19462:50;;;19492:18;;:::i;:::-;19462:50;19542:1;19532:8;19528:16;19525:451;;;19957:4;19950:5;19946:16;19937:25;;19525:451;20007:4;20001;19997:15;19989:23;;20037:32;20060:8;20037:32;:::i;:::-;20025:44;;19367:712;;;19237:848;;;;;;;:::o;20091:1073::-;20145:5;20336:8;20326:40;;20357:1;20348:10;;20359:5;;20326:40;20385:4;20375:36;;20402:1;20393:10;;20404:5;;20375:36;20471:4;20519:1;20514:27;;;;20555:1;20550:191;;;;20464:277;;20514:27;20532:1;20523:10;;20534:5;;;20550:191;20595:3;20585:8;20582:17;20579:43;;;20602:18;;:::i;:::-;20579:43;20651:8;20648:1;20644:16;20635:25;;20686:3;20679:5;20676:14;20673:40;;;20693:18;;:::i;:::-;20673:40;20726:5;;;20464:277;;20850:2;20840:8;20837:16;20831:3;20825:4;20822:13;20818:36;20800:2;20790:8;20787:16;20782:2;20776:4;20773:12;20769:35;20753:111;20750:246;;;20906:8;20900:4;20896:19;20887:28;;20941:3;20934:5;20931:14;20928:40;;;20948:18;;:::i;:::-;20928:40;20981:5;;20750:246;21021:42;21059:3;21049:8;21043:4;21040:1;21021:42;:::i;:::-;21006:57;;;;21095:4;21090:3;21086:14;21079:5;21076:25;21073:51;;;21104:18;;:::i;:::-;21073:51;21153:4;21146:5;21142:16;21133:25;;20091:1073;;;;;;:::o;21170:281::-;21228:5;21252:23;21270:4;21252:23;:::i;:::-;21244:31;;21296:25;21312:8;21296:25;:::i;:::-;21284:37;;21340:104;21377:66;21367:8;21361:4;21340:104;:::i;:::-;21331:113;;21170:281;;;;:::o;21457:180::-;21505:77;21502:1;21495:88;21602:4;21599:1;21592:15;21626:4;21623:1;21616:15;21643:185;21683:1;21700:20;21718:1;21700:20;:::i;:::-;21695:25;;21734:20;21752:1;21734:20;:::i;:::-;21729:25;;21773:1;21763:35;;21778:18;;:::i;:::-;21763:35;21820:1;21817;21813:9;21808:14;;21643:185;;;;:::o;21834:348::-;21874:7;21897:20;21915:1;21897:20;:::i;:::-;21892:25;;21931:20;21949:1;21931:20;:::i;:::-;21926:25;;22119:1;22051:66;22047:74;22044:1;22041:81;22036:1;22029:9;22022:17;22018:105;22015:131;;;22126:18;;:::i;:::-;22015:131;22174:1;22171;22167:9;22156:20;;21834:348;;;;:::o;22188:167::-;22328:19;22324:1;22316:6;22312:14;22305:43;22188:167;:::o;22361:366::-;22503:3;22524:67;22588:2;22583:3;22524:67;:::i;:::-;22517:74;;22600:93;22689:3;22600:93;:::i;:::-;22718:2;22713:3;22709:12;22702:19;;22361:366;;;:::o;22733:419::-;22899:4;22937:2;22926:9;22922:18;22914:26;;22986:9;22980:4;22976:20;22972:1;22961:9;22957:17;22950:47;23014:131;23140:4;23014:131;:::i;:::-;23006:139;;22733:419;;;:::o;23158:191::-;23198:4;23218:20;23236:1;23218:20;:::i;:::-;23213:25;;23252:20;23270:1;23252:20;:::i;:::-;23247:25;;23291:1;23288;23285:8;23282:34;;;23296:18;;:::i;:::-;23282:34;23341:1;23338;23334:9;23326:17;;23158:191;;;;:::o;23355:224::-;23495:34;23491:1;23483:6;23479:14;23472:58;23564:7;23559:2;23551:6;23547:15;23540:32;23355:224;:::o;23585:366::-;23727:3;23748:67;23812:2;23807:3;23748:67;:::i;:::-;23741:74;;23824:93;23913:3;23824:93;:::i;:::-;23942:2;23937:3;23933:12;23926:19;;23585:366;;;:::o;23957:419::-;24123:4;24161:2;24150:9;24146:18;24138:26;;24210:9;24204:4;24200:20;24196:1;24185:9;24181:17;24174:47;24238:131;24364:4;24238:131;:::i;:::-;24230:139;;23957:419;;;:::o;24382:168::-;24522:20;24518:1;24510:6;24506:14;24499:44;24382:168;:::o;24556:366::-;24698:3;24719:67;24783:2;24778:3;24719:67;:::i;:::-;24712:74;;24795:93;24884:3;24795:93;:::i;:::-;24913:2;24908:3;24904:12;24897:19;;24556:366;;;:::o;24928:419::-;25094:4;25132:2;25121:9;25117:18;25109:26;;25181:9;25175:4;25171:20;25167:1;25156:9;25152:17;25145:47;25209:131;25335:4;25209:131;:::i;:::-;25201:139;;24928:419;;;:::o;25353:224::-;25493:34;25489:1;25481:6;25477:14;25470:58;25562:7;25557:2;25549:6;25545:15;25538:32;25353:224;:::o;25583:366::-;25725:3;25746:67;25810:2;25805:3;25746:67;:::i;:::-;25739:74;;25822:93;25911:3;25822:93;:::i;:::-;25940:2;25935:3;25931:12;25924:19;;25583:366;;;:::o;25955:419::-;26121:4;26159:2;26148:9;26144:18;26136:26;;26208:9;26202:4;26198:20;26194:1;26183:9;26179:17;26172:47;26236:131;26362:4;26236:131;:::i;:::-;26228:139;;25955:419;;;:::o;26380:223::-;26520:34;26516:1;26508:6;26504:14;26497:58;26589:6;26584:2;26576:6;26572:15;26565:31;26380:223;:::o;26609:366::-;26751:3;26772:67;26836:2;26831:3;26772:67;:::i;:::-;26765:74;;26848:93;26937:3;26848:93;:::i;:::-;26966:2;26961:3;26957:12;26950:19;;26609:366;;;:::o;26981:419::-;27147:4;27185:2;27174:9;27170:18;27162:26;;27234:9;27228:4;27224:20;27220:1;27209:9;27205:17;27198:47;27262:131;27388:4;27262:131;:::i;:::-;27254:139;;26981:419;;;:::o;27406:169::-;27546:21;27542:1;27534:6;27530:14;27523:45;27406:169;:::o;27581:366::-;27723:3;27744:67;27808:2;27803:3;27744:67;:::i;:::-;27737:74;;27820:93;27909:3;27820:93;:::i;:::-;27938:2;27933:3;27929:12;27922:19;;27581:366;;;:::o;27953:419::-;28119:4;28157:2;28146:9;28142:18;28134:26;;28206:9;28200:4;28196:20;28192:1;28181:9;28177:17;28170:47;28234:131;28360:4;28234:131;:::i;:::-;28226:139;;27953:419;;;:::o;28378:165::-;28518:17;28514:1;28506:6;28502:14;28495:41;28378:165;:::o;28549:366::-;28691:3;28712:67;28776:2;28771:3;28712:67;:::i;:::-;28705:74;;28788:93;28877:3;28788:93;:::i;:::-;28906:2;28901:3;28897:12;28890:19;;28549:366;;;:::o;28921:419::-;29087:4;29125:2;29114:9;29110:18;29102:26;;29174:9;29168:4;29164:20;29160:1;29149:9;29145:17;29138:47;29202:131;29328:4;29202:131;:::i;:::-;29194:139;;28921:419;;;:::o;29346:181::-;29486:33;29482:1;29474:6;29470:14;29463:57;29346:181;:::o;29533:366::-;29675:3;29696:67;29760:2;29755:3;29696:67;:::i;:::-;29689:74;;29772:93;29861:3;29772:93;:::i;:::-;29890:2;29885:3;29881:12;29874:19;;29533:366;;;:::o;29905:419::-;30071:4;30109:2;30098:9;30094:18;30086:26;;30158:9;30152:4;30148:20;30144:1;30133:9;30129:17;30122:47;30186:131;30312:4;30186:131;:::i;:::-;30178:139;;29905:419;;;:::o;30330:178::-;30470:30;30466:1;30458:6;30454:14;30447:54;30330:178;:::o;30514:366::-;30656:3;30677:67;30741:2;30736:3;30677:67;:::i;:::-;30670:74;;30753:93;30842:3;30753:93;:::i;:::-;30871:2;30866:3;30862:12;30855:19;;30514:366;;;:::o;30886:419::-;31052:4;31090:2;31079:9;31075:18;31067:26;;31139:9;31133:4;31129:20;31125:1;31114:9;31110:17;31103:47;31167:131;31293:4;31167:131;:::i;:::-;31159:139;;30886:419;;;:::o;31311:223::-;31451:34;31447:1;31439:6;31435:14;31428:58;31520:6;31515:2;31507:6;31503:15;31496:31;31311:223;:::o;31540:366::-;31682:3;31703:67;31767:2;31762:3;31703:67;:::i;:::-;31696:74;;31779:93;31868:3;31779:93;:::i;:::-;31897:2;31892:3;31888:12;31881:19;;31540:366;;;:::o;31912:419::-;32078:4;32116:2;32105:9;32101:18;32093:26;;32165:9;32159:4;32155:20;32151:1;32140:9;32136:17;32129:47;32193:131;32319:4;32193:131;:::i;:::-;32185:139;;31912:419;;;:::o;32337:221::-;32477:34;32473:1;32465:6;32461:14;32454:58;32546:4;32541:2;32533:6;32529:15;32522:29;32337:221;:::o;32564:366::-;32706:3;32727:67;32791:2;32786:3;32727:67;:::i;:::-;32720:74;;32803:93;32892:3;32803:93;:::i;:::-;32921:2;32916:3;32912:12;32905:19;;32564:366;;;:::o;32936:419::-;33102:4;33140:2;33129:9;33125:18;33117:26;;33189:9;33183:4;33179:20;33175:1;33164:9;33160:17;33153:47;33217:131;33343:4;33217:131;:::i;:::-;33209:139;;32936:419;;;:::o;33361:179::-;33501:31;33497:1;33489:6;33485:14;33478:55;33361:179;:::o;33546:366::-;33688:3;33709:67;33773:2;33768:3;33709:67;:::i;:::-;33702:74;;33785:93;33874:3;33785:93;:::i;:::-;33903:2;33898:3;33894:12;33887:19;;33546:366;;;:::o;33918:419::-;34084:4;34122:2;34111:9;34107:18;34099:26;;34171:9;34165:4;34161:20;34157:1;34146:9;34142:17;34135:47;34199:131;34325:4;34199:131;:::i;:::-;34191:139;;33918:419;;;:::o;34343:224::-;34483:34;34479:1;34471:6;34467:14;34460:58;34552:7;34547:2;34539:6;34535:15;34528:32;34343:224;:::o;34573:366::-;34715:3;34736:67;34800:2;34795:3;34736:67;:::i;:::-;34729:74;;34812:93;34901:3;34812:93;:::i;:::-;34930:2;34925:3;34921:12;34914:19;;34573:366;;;:::o;34945:419::-;35111:4;35149:2;35138:9;35134:18;35126:26;;35198:9;35192:4;35188:20;35184:1;35173:9;35169:17;35162:47;35226:131;35352:4;35226:131;:::i;:::-;35218:139;;34945:419;;;:::o;35370:222::-;35510:34;35506:1;35498:6;35494:14;35487:58;35579:5;35574:2;35566:6;35562:15;35555:30;35370:222;:::o;35598:366::-;35740:3;35761:67;35825:2;35820:3;35761:67;:::i;:::-;35754:74;;35837:93;35926:3;35837:93;:::i;:::-;35955:2;35950:3;35946:12;35939:19;;35598:366;;;:::o;35970:419::-;36136:4;36174:2;36163:9;36159:18;36151:26;;36223:9;36217:4;36213:20;36209:1;36198:9;36194:17;36187:47;36251:131;36377:4;36251:131;:::i;:::-;36243:139;;35970:419;;;:::o;36395:225::-;36535:34;36531:1;36523:6;36519:14;36512:58;36604:8;36599:2;36591:6;36587:15;36580:33;36395:225;:::o;36626:366::-;36768:3;36789:67;36853:2;36848:3;36789:67;:::i;:::-;36782:74;;36865:93;36954:3;36865:93;:::i;:::-;36983:2;36978:3;36974:12;36967:19;;36626:366;;;:::o;36998:419::-;37164:4;37202:2;37191:9;37187:18;37179:26;;37251:9;37245:4;37241:20;37237:1;37226:9;37222:17;37215:47;37279:131;37405:4;37279:131;:::i;:::-;37271:139;;36998:419;;;:::o;37423:228::-;37563:34;37559:1;37551:6;37547:14;37540:58;37632:11;37627:2;37619:6;37615:15;37608:36;37423:228;:::o;37657:366::-;37799:3;37820:67;37884:2;37879:3;37820:67;:::i;:::-;37813:74;;37896:93;37985:3;37896:93;:::i;:::-;38014:2;38009:3;38005:12;37998:19;;37657:366;;;:::o;38029:419::-;38195:4;38233:2;38222:9;38218:18;38210:26;;38282:9;38276:4;38272:20;38268:1;38257:9;38253:17;38246:47;38310:131;38436:4;38310:131;:::i;:::-;38302:139;;38029:419;;;:::o;38454:118::-;38541:24;38559:5;38541:24;:::i;:::-;38536:3;38529:37;38454:118;;:::o;38578:98::-;38629:6;38663:5;38657:12;38647:22;;38578:98;;;:::o;38682:168::-;38765:11;38799:6;38794:3;38787:19;38839:4;38834:3;38830:14;38815:29;;38682:168;;;;:::o;38856:360::-;38942:3;38970:38;39002:5;38970:38;:::i;:::-;39024:70;39087:6;39082:3;39024:70;:::i;:::-;39017:77;;39103:52;39148:6;39143:3;39136:4;39129:5;39125:16;39103:52;:::i;:::-;39180:29;39202:6;39180:29;:::i;:::-;39175:3;39171:39;39164:46;;38946:270;38856:360;;;;:::o;39222:640::-;39417:4;39455:3;39444:9;39440:19;39432:27;;39469:71;39537:1;39526:9;39522:17;39513:6;39469:71;:::i;:::-;39550:72;39618:2;39607:9;39603:18;39594:6;39550:72;:::i;:::-;39632;39700:2;39689:9;39685:18;39676:6;39632:72;:::i;:::-;39751:9;39745:4;39741:20;39736:2;39725:9;39721:18;39714:48;39779:76;39850:4;39841:6;39779:76;:::i;:::-;39771:84;;39222:640;;;;;;;:::o;39868:141::-;39924:5;39955:6;39949:13;39940:22;;39971:32;39997:5;39971:32;:::i;:::-;39868:141;;;;:::o;40015:349::-;40084:6;40133:2;40121:9;40112:7;40108:23;40104:32;40101:119;;;40139:79;;:::i;:::-;40101:119;40259:1;40284:63;40339:7;40330:6;40319:9;40315:22;40284:63;:::i;:::-;40274:73;;40230:127;40015:349;;;;:::o;40370:239::-;40510:34;40506:1;40498:6;40494:14;40487:58;40579:22;40574:2;40566:6;40562:15;40555:47;40370:239;:::o;40615:366::-;40757:3;40778:67;40842:2;40837:3;40778:67;:::i;:::-;40771:74;;40854:93;40943:3;40854:93;:::i;:::-;40972:2;40967:3;40963:12;40956:19;;40615:366;;;:::o;40987:419::-;41153:4;41191:2;41180:9;41176:18;41168:26;;41240:9;41234:4;41230:20;41226:1;41215:9;41211:17;41204:47;41268:131;41394:4;41268:131;:::i;:::-;41260:139;;40987:419;;;:::o;41412:226::-;41552:34;41548:1;41540:6;41536:14;41529:58;41621:9;41616:2;41608:6;41604:15;41597:34;41412:226;:::o;41644:366::-;41786:3;41807:67;41871:2;41866:3;41807:67;:::i;:::-;41800:74;;41883:93;41972:3;41883:93;:::i;:::-;42001:2;41996:3;41992:12;41985:19;;41644:366;;;:::o;42016:419::-;42182:4;42220:2;42209:9;42205:18;42197:26;;42269:9;42263:4;42259:20;42255:1;42244:9;42240:17;42233:47;42297:131;42423:4;42297:131;:::i;:::-;42289:139;;42016:419;;;:::o;42441:529::-;42608:4;42646:2;42635:9;42631:18;42623:26;;42659:71;42727:1;42716:9;42712:17;42703:6;42659:71;:::i;:::-;42740:72;42808:2;42797:9;42793:18;42784:6;42740:72;:::i;:::-;42859:9;42853:4;42849:20;42844:2;42833:9;42829:18;42822:48;42887:76;42958:4;42949:6;42887:76;:::i;:::-;42879:84;;42441:529;;;;;;:::o;42976:236::-;43116:34;43112:1;43104:6;43100:14;43093:58;43185:19;43180:2;43172:6;43168:15;43161:44;42976:236;:::o;43218:366::-;43360:3;43381:67;43445:2;43440:3;43381:67;:::i;:::-;43374:74;;43457:93;43546:3;43457:93;:::i;:::-;43575:2;43570:3;43566:12;43559:19;;43218:366;;;:::o;43590:419::-;43756:4;43794:2;43783:9;43779:18;43771:26;;43843:9;43837:4;43833:20;43829:1;43818:9;43814:17;43807:47;43871:131;43997:4;43871:131;:::i;:::-;43863:139;;43590:419;;;:::o;44015:181::-;44155:33;44151:1;44143:6;44139:14;44132:57;44015:181;:::o;44202:366::-;44344:3;44365:67;44429:2;44424:3;44365:67;:::i;:::-;44358:74;;44441:93;44530:3;44441:93;:::i;:::-;44559:2;44554:3;44550:12;44543:19;;44202:366;;;:::o;44574:419::-;44740:4;44778:2;44767:9;44763:18;44755:26;;44827:9;44821:4;44817:20;44813:1;44802:9;44798:17;44791:47;44855:131;44981:4;44855:131;:::i;:::-;44847:139;;44574:419;;;:::o;44999:179::-;45139:31;45135:1;45127:6;45123:14;45116:55;44999:179;:::o;45184:366::-;45326:3;45347:67;45411:2;45406:3;45347:67;:::i;:::-;45340:74;;45423:93;45512:3;45423:93;:::i;:::-;45541:2;45536:3;45532:12;45525:19;;45184:366;;;:::o;45556:419::-;45722:4;45760:2;45749:9;45745:18;45737:26;;45809:9;45803:4;45799:20;45795:1;45784:9;45780:17;45773:47;45837:131;45963:4;45837:131;:::i;:::-;45829:139;;45556:419;;;:::o;45981:147::-;46082:11;46119:3;46104:18;;45981:147;;;;:::o;46134:114::-;;:::o;46254:398::-;46413:3;46434:83;46515:1;46510:3;46434:83;:::i;:::-;46427:90;;46526:93;46615:3;46526:93;:::i;:::-;46644:1;46639:3;46635:11;46628:18;;46254:398;;;:::o;46658:379::-;46842:3;46864:147;47007:3;46864:147;:::i;:::-;46857:154;;47028:3;47021:10;;46658:379;;;:::o;47043:245::-;47183:34;47179:1;47171:6;47167:14;47160:58;47252:28;47247:2;47239:6;47235:15;47228:53;47043:245;:::o;47294:366::-;47436:3;47457:67;47521:2;47516:3;47457:67;:::i;:::-;47450:74;;47533:93;47622:3;47533:93;:::i;:::-;47651:2;47646:3;47642:12;47635:19;;47294:366;;;:::o;47666:419::-;47832:4;47870:2;47859:9;47855:18;47847:26;;47919:9;47913:4;47909:20;47905:1;47894:9;47890:17;47883:47;47947:131;48073:4;47947:131;:::i;:::-;47939:139;;47666:419;;;:::o;48091:171::-;48231:23;48227:1;48219:6;48215:14;48208:47;48091:171;:::o;48268:366::-;48410:3;48431:67;48495:2;48490:3;48431:67;:::i;:::-;48424:74;;48507:93;48596:3;48507:93;:::i;:::-;48625:2;48620:3;48616:12;48609:19;;48268:366;;;:::o;48640:419::-;48806:4;48844:2;48833:9;48829:18;48821:26;;48893:9;48887:4;48883:20;48879:1;48868:9;48864:17;48857:47;48921:131;49047:4;48921:131;:::i;:::-;48913:139;;48640:419;;;:::o;49065:285::-;49125:5;49149:23;49167:4;49149:23;:::i;:::-;49141:31;;49193:27;49211:8;49193:27;:::i;:::-;49181:39;;49239:104;49276:66;49266:8;49260:4;49239:104;:::i;:::-;49230:113;;49065:285;;;;:::o;49356:220::-;49496:34;49492:1;49484:6;49480:14;49473:58;49565:3;49560:2;49552:6;49548:15;49541:28;49356:220;:::o;49582:366::-;49724:3;49745:67;49809:2;49804:3;49745:67;:::i;:::-;49738:74;;49821:93;49910:3;49821:93;:::i;:::-;49939:2;49934:3;49930:12;49923:19;;49582:366;;;:::o;49954:419::-;50120:4;50158:2;50147:9;50143:18;50135:26;;50207:9;50201:4;50197:20;50193:1;50182:9;50178:17;50171:47;50235:131;50361:4;50235:131;:::i;:::-;50227:139;;49954:419;;;:::o;50379:221::-;50519:34;50515:1;50507:6;50503:14;50496:58;50588:4;50583:2;50575:6;50571:15;50564:29;50379:221;:::o;50606:366::-;50748:3;50769:67;50833:2;50828:3;50769:67;:::i;:::-;50762:74;;50845:93;50934:3;50845:93;:::i;:::-;50963:2;50958:3;50954:12;50947:19;;50606:366;;;:::o;50978:419::-;51144:4;51182:2;51171:9;51167:18;51159:26;;51231:9;51225:4;51221:20;51217:1;51206:9;51202:17;51195:47;51259:131;51385:4;51259:131;:::i;:::-;51251:139;;50978:419;;;:::o", "abi": "[{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_symbol\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Buy\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Sell\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"inputs\":[],\"name\":\"MAX_BUY_AMOUNT_PER_TX\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"MAX_SUPPLY_THRESHOLD\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approveAndCall\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"approveAndCall\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"buy\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"calculatePriceForTokens\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"supply\",\"type\":\"uint256\"}],\"name\":\"calculatePriceForTokens\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"supply\",\"type\":\"uint256\"}],\"name\":\"calculateTokensForPrice\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"calculateTokensForPrice\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"subtractedValue\",\"type\":\"uint256\"}],\"name\":\"decreaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"addedValue\",\"type\":\"uint256\"}],\"name\":\"increaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"onTransferReceived\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"sell\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferAndCall\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"transferAndCall\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"transferFromAndCall\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFromAndCall\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}]", "bin": "60806040523480156200001157600080fd5b506040516200434c3803806200434c83398181016040528101906200003791906200020c565b818181600390816200004a9190620004dc565b5080600490816200005c9190620004dc565b50505060016005819055505050620005c3565b6000604051905090565b600080fd5b600080fd5b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b620000d8826200008d565b810181811067ffffffffffffffff82111715620000fa57620000f96200009e565b5b80604052505050565b60006200010f6200006f565b90506200011d8282620000cd565b919050565b600067ffffffffffffffff82111562000140576200013f6200009e565b5b6200014b826200008d565b9050602081019050919050565b60005b83811015620001785780820151818401526020810190506200015b565b8381111562000188576000848401525b50505050565b6000620001a56200019f8462000122565b62000103565b905082815260208101848484011115620001c457620001c362000088565b5b620001d184828562000158565b509392505050565b600082601f830112620001f157620001f062000083565b5b8151620002038482602086016200018e565b91505092915050565b6000806040838503121562000226576200022562000079565b5b600083015167ffffffffffffffff8111156200024757620002466200007e565b5b6200025585828601620001d9565b925050602083015167ffffffffffffffff8111156200027957620002786200007e565b5b6200028785828601620001d9565b9150509250929050565b600081519050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b60006002820490506001821680620002e457607f821691505b602082108103620002fa57620002f96200029c565b5b50919050565b60008190508160005260206000209050919050565b60006020601f8301049050919050565b600082821b905092915050565b600060088302620003647fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8262000325565b62000370868362000325565b95508019841693508086168417925050509392505050565b6000819050919050565b6000819050919050565b6000620003bd620003b7620003b18462000388565b62000392565b62000388565b9050919050565b6000819050919050565b620003d9836200039c565b620003f1620003e882620003c4565b84845462000332565b825550505050565b600090565b62000408620003f9565b62000415818484620003ce565b505050565b5b818110156200043d5762000431600082620003fe565b6001810190506200041b565b5050565b601f8211156200048c57620004568162000300565b620004618462000315565b8101602085101562000471578190505b62000489620004808562000315565b8301826200041a565b50505b505050565b600082821c905092915050565b6000620004b16000198460080262000491565b1980831691505092915050565b6000620004cc83836200049e565b9150826002028217905092915050565b620004e78262000291565b67ffffffffffffffff8111156200050357620005026200009e565b5b6200050f8254620002cb565b6200051c82828562000441565b600060209050601f8311600181146200055457600084156200053f578287015190505b6200054b8582620004be565b865550620005bb565b601f198416620005648662000300565b60005b828110156200058e5784890151825560018201915060208501945060208101905062000567565b86831015620005ae5784890151620005aa601f8916826200049e565b8355505b6001600288020188555050505b505050505050565b613d7980620005d36000396000f3fe6080604052600436106101a05760003560e01c806370a08231116100ec578063c1d34b891161008a578063d96a094a11610064578063d96a094a146107d2578063dce29da8146107ee578063dd62ed3e1461082b578063e4849b3214610868576101e0565b8063c1d34b891461071b578063cae9ca5114610758578063d8fbe99414610795576101e0565b8063a457c2d7116100c6578063a457c2d714610639578063a9059cbb14610676578063b4a0b8c7146106b3578063b9615a6e146106de576101e0565b806370a082311461059457806388a7ca5c146105d157806395d89b411461060e576101e0565b806323b872dd11610159578063395093511161013357806339509351146104b25780634000aea0146104ef578063465fa4081461052c57806354d0a68514610569576101e0565b806323b872dd1461040d578063313ce5671461044a5780633177029f14610475576101e0565b806301ffc9a7146102c357806306fdde0314610300578063095ea7b31461032b5780631296ee621461036857806318160ddd146103a557806318d8e8e0146103d0576101e0565b366101e0576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016101d790612287565b60405180910390fd5b600036606060003411610228576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161021f906122f3565b60405180910390fd5b600061023334610891565b905060008484810190610246919061235d565b90508082101561028b576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610282906123d6565b60405180910390fd5b610294826108ab565b816040516020016102a59190612405565b60405160208183030381529060405292505050915050805190602001f35b3480156102cf57600080fd5b506102ea60048036038101906102e59190612478565b610995565b6040516102f791906124c0565b60405180910390f35b34801561030c57600080fd5b50610315610a0f565b6040516103229190612563565b60405180910390f35b34801561033757600080fd5b50610352600480360381019061034d91906125e3565b610aa1565b60405161035f91906124c0565b60405180910390f35b34801561037457600080fd5b5061038f600480360381019061038a91906125e3565b610ac4565b60405161039c91906124c0565b60405180910390f35b3480156103b157600080fd5b506103ba610ae8565b6040516103c79190612405565b60405180910390f35b3480156103dc57600080fd5b506103f760048036038101906103f29190612623565b610af2565b6040516104049190612405565b60405180910390f35b34801561041957600080fd5b50610434600480360381019061042f9190612663565b610bad565b60405161044191906124c0565b60405180910390f35b34801561045657600080fd5b5061045f610bdc565b60405161046c91906126d2565b60405180910390f35b34801561048157600080fd5b5061049c600480360381019061049791906125e3565b610be5565b6040516104a991906124c0565b60405180910390f35b3480156104be57600080fd5b506104d960048036038101906104d491906125e3565b610c09565b6040516104e691906124c0565b60405180910390f35b3480156104fb57600080fd5b5061051660048036038101906105119190612822565b610c40565b60405161052391906124c0565b60405180910390f35b34801561053857600080fd5b50610553600480360381019061054e919061235d565b610caa565b6040516105609190612405565b60405180910390f35b34801561057557600080fd5b5061057e610cc4565b60405161058b9190612405565b60405180910390f35b3480156105a057600080fd5b506105bb60048036038101906105b69190612891565b610ccc565b6040516105c89190612405565b60405180910390f35b3480156105dd57600080fd5b506105f860048036038101906105f3919061291e565b610d14565b60405161060591906129b5565b60405180910390f35b34801561061a57600080fd5b50610623610d97565b6040516106309190612563565b60405180910390f35b34801561064557600080fd5b50610660600480360381019061065b91906125e3565b610e29565b60405161066d91906124c0565b60405180910390f35b34801561068257600080fd5b5061069d600480360381019061069891906125e3565b610ea0565b6040516106aa91906124c0565b60405180910390f35b3480156106bf57600080fd5b506106c8610ec3565b6040516106d59190612405565b60405180910390f35b3480156106ea57600080fd5b506107056004803603810190610700919061235d565b610891565b6040516107129190612405565b60405180910390f35b34801561072757600080fd5b50610742600480360381019061073d91906129d0565b610ecc565b60405161074f91906124c0565b60405180910390f35b34801561076457600080fd5b5061077f600480360381019061077a9190612822565b610f31565b60405161078c91906124c0565b60405180910390f35b3480156107a157600080fd5b506107bc60048036038101906107b79190612663565b610f93565b6040516107c991906124c0565b60405180910390f35b6107ec60048036038101906107e7919061235d565b6108ab565b005b3480156107fa57600080fd5b5061081560048036038101906108109190612623565b610fb9565b6040516108229190612405565b60405180910390f35b34801561083757600080fd5b50610852600480360381019061084d9190612a53565b61103b565b60405161085f9190612405565b60405180910390f35b34801561087457600080fd5b5061088f600480360381019061088a919061235d565b6110c2565b005b60006108a48261089f610ae8565b610af2565b9050919050565b6108b361116f565b600034116108f6576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016108ed906122f3565b60405180910390fd5b60008111610939576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161093090612adf565b60405180910390fd5b633b9aca00811115610980576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161097790612b4b565b60405180910390fd5b61098a33826111be565b6109926112d8565b50565b60007fc2d06c1e000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19161480610a085750610a07826112e2565b5b9050919050565b606060038054610a1e90612b9a565b80601f0160208091040260200160405190810160405280929190818152602001828054610a4a90612b9a565b8015610a975780601f10610a6c57610100808354040283529160200191610a97565b820191906000526020600020905b815481529060010190602001808311610a7a57829003601f168201915b5050505050905090565b600080610aac61135c565b9050610ab9818585611364565b600191505092915050565b6000610ae0838360405180602001604052806000815250610c40565b905092915050565b6000600254905090565b600080610b3b6003600185610b079190612bfa565b610b119190612d83565b6003620f424087610b229190612dfd565b610b2c9190612e2e565b610b369190612bfa565b61152d565b9050600183610b4a9190612bfa565b811015610b8c576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610b8390612ed4565b60405180910390fd5b60018382610b9a9190612ef4565b610ba49190612ef4565b91505092915050565b600080610bb861135c565b9050610bc5858285611541565b610bd08585856115cd565b60019150509392505050565b60006012905090565b6000610c01838360405180602001604052806000815250610f31565b905092915050565b600080610c1461135c565b9050610c35818585610c26858961103b565b610c309190612bfa565b611364565b600191505092915050565b6000610c4c8484610ea0565b50610c60610c5861135c565b858585611843565b610c9f576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610c9690612f9a565b60405180910390fd5b600190509392505050565b6000610cbd82610cb8610ae8565b610fb9565b9050919050565b633b9aca0081565b60008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b60003073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610d84576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610d7b90613006565b60405180910390fd5b6388a7ca5c60e01b905095945050505050565b606060048054610da690612b9a565b80601f0160208091040260200160405190810160405280929190818152602001828054610dd290612b9a565b8015610e1f5780601f10610df457610100808354040283529160200191610e1f565b820191906000526020600020905b815481529060010190602001808311610e0257829003601f168201915b5050505050905090565b600080610e3461135c565b90506000610e42828661103b565b905083811015610e87576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610e7e90613098565b60405180910390fd5b610e948286868403611364565b60019250505092915050565b600080610eab61135c565b9050610eb88185856115cd565b600191505092915050565b64e8d4a5100081565b6000610ed9858585610bad565b50610ee685858585611843565b610f25576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610f1c90612f9a565b60405180910390fd5b60019050949350505050565b6000610f3d8484610aa1565b50610f498484846119fa565b610f88576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610f7f9061312a565b60405180910390fd5b600190509392505050565b6000610fb084848460405180602001604052806000815250610ecc565b90509392505050565b6000600383610fc89190612dfd565b6003620f42406003600186610fdd9190612bfa565b610fe79190612d83565b600360018888610ff79190612bfa565b6110019190612bfa565b61100b9190612d83565b6110159190612ef4565b61101f9190612e2e565b6110299190612dfd565b6110339190612ef4565b905092915050565b6000600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905092915050565b6110ca61116f565b806110d433610ccc565b1015611115576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161110c90613196565b60405180910390fd5b60006111213083610ea0565b905080611163576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161115a90613202565b60405180910390fd5b5061116c6112d8565b50565b6002600554036111b4576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016111ab9061326e565b60405180910390fd5b6002600581905550565b60006111c982610caa565b90508034101561120e576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611205906122f3565b60405180910390fd5b6112188383611bae565b64e8d4a51000611226610ae8565b1115611267576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161125e906132da565b60405180910390fd5b803411156112855761128483823461127f9190612ef4565b611d04565b5b8273ffffffffffffffffffffffffffffffffffffffff167fe3d4187f6ca4248660cc0ac8b8056515bac4a8132be2eca31d6d0cc170722a7e836040516112cb9190612405565b60405180910390a2505050565b6001600581905550565b60007fb0202a11000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19161480611355575061135482611df8565b5b9050919050565b600033905090565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16036113d3576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016113ca9061336c565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603611442576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611439906133fe565b60405180910390fd5b80600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925836040516115209190612405565b60405180910390a3505050565b600061153a826003611e62565b9050919050565b600061154d848461103b565b90507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff81146115c757818110156115b9576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016115b09061346a565b60405180910390fd5b6115c68484848403611364565b5b50505050565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff160361163c576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611633906134fc565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16036116ab576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016116a29061358e565b60405180910390fd5b6116b6838383611f44565b60008060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205490508181101561173c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161173390613620565b60405180910390fd5b8181036000808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550816000808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825401925050819055508273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef8460405161182a9190612405565b60405180910390a361183d848484611f49565b50505050565b60006118648473ffffffffffffffffffffffffffffffffffffffff16611fc6565b6118a3576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161189a906136b2565b60405180910390fd5b8373ffffffffffffffffffffffffffffffffffffffff166388a7ca5c6118c761135c565b8786866040518563ffffffff1660e01b81526004016118e99493929190613736565b6020604051808303816000875af192505050801561192557506040513d601f19601f820116820180604052508101906119229190613797565b60015b6119a7573d8060008114611955576040519150601f19603f3d011682016040523d82523d6000602084013e61195a565b606091505b50600081510361199f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161199690613836565b60405180910390fd5b805181602001fd5b6388a7ca5c60e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916817bffffffffffffffffffffffffffffffffffffffffffffffffffffffff191614915050949350505050565b6000611a1b8473ffffffffffffffffffffffffffffffffffffffff16611fc6565b611a5a576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611a51906138c8565b60405180910390fd5b8373ffffffffffffffffffffffffffffffffffffffff16637b04a2d0611a7e61135c565b85856040518463ffffffff1660e01b8152600401611a9e939291906138e8565b6020604051808303816000875af1925050508015611ada57506040513d601f19601f82011682018060405250810190611ad79190613797565b60015b611b5c573d8060008114611b0a576040519150601f19603f3d011682016040523d82523d6000602084013e611b0f565b606091505b506000815103611b54576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611b4b90613998565b60405180910390fd5b805181602001fd5b637b04a2d060e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916817bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916149150509392505050565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603611c1d576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611c1490613a04565b60405180910390fd5b611c2960008383611f44565b8060026000828254611c3b9190612bfa565b92505081905550806000808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825401925050819055508173ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef83604051611cec9190612405565b60405180910390a3611d0060008383611f49565b5050565b80471015611d47576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611d3e90613a70565b60405180910390fd5b60008273ffffffffffffffffffffffffffffffffffffffff1682604051611d6d90613ac1565b60006040518083038185875af1925050503d8060008114611daa576040519150601f19603f3d011682016040523d82523d6000602084013e611daf565b606091505b5050905080611df3576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611dea90613b48565b60405180910390fd5b505050565b60007f01ffc9a7000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916149050919050565b6000808211611ea6576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611e9d90613bb4565b60405180910390fd5b60008303611eb75760009050611f3e565b6000808490505b80821015611f2c57600060028284611ed69190612bfa565b611ee09190612dfd565b905060008582611ef09190613bd4565b9050868103611f055781945050505050611f3e565b86811015611f2157600182611f1a9190612bfa565b9350611f25565b8192505b5050611ebe565b600182611f399190612ef4565b925050505b92915050565b505050565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1614158015611fb157503073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16145b15611fc157611fc08382611fe9565b5b505050565b6000808273ffffffffffffffffffffffffffffffffffffffff163b119050919050565b611ff3308261205d565b6000611ffe82610caa565b905061200a8382611d04565b8273ffffffffffffffffffffffffffffffffffffffff167f5e5e995ce3133561afceaa51a9a154d5db228cd7525d34df5185582c18d3df09836040516120509190612405565b60405180910390a2505050565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16036120cc576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016120c390613c91565b60405180910390fd5b6120d882600083611f44565b60008060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205490508181101561215e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161215590613d23565b60405180910390fd5b8181036000808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555081600260008282540392505081905550600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef846040516122119190612405565b60405180910390a361222583600084611f49565b505050565b600082825260208201905092915050565b7f4e6f7420737570706f7274656400000000000000000000000000000000000000600082015250565b6000612271600d8361222a565b915061227c8261223b565b602082019050919050565b600060208201905081810360008301526122a081612264565b9050919050565b7f496e73756666696369656e742066756e64730000000000000000000000000000600082015250565b60006122dd60128361222a565b91506122e8826122a7565b602082019050919050565b6000602082019050818103600083015261230c816122d0565b9050919050565b6000604051905090565b600080fd5b600080fd5b6000819050919050565b61233a81612327565b811461234557600080fd5b50565b60008135905061235781612331565b92915050565b6000602082840312156123735761237261231d565b5b600061238184828501612348565b91505092915050565b7f416d6f756e74206973206e6f7420636f72726563740000000000000000000000600082015250565b60006123c060158361222a565b91506123cb8261238a565b602082019050919050565b600060208201905081810360008301526123ef816123b3565b9050919050565b6123ff81612327565b82525050565b600060208201905061241a60008301846123f6565b92915050565b60007fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b61245581612420565b811461246057600080fd5b50565b6000813590506124728161244c565b92915050565b60006020828403121561248e5761248d61231d565b5b600061249c84828501612463565b91505092915050565b60008115159050919050565b6124ba816124a5565b82525050565b60006020820190506124d560008301846124b1565b92915050565b600081519050919050565b60005b838110156125045780820151818401526020810190506124e9565b83811115612513576000848401525b50505050565b6000601f19601f8301169050919050565b6000612535826124db565b61253f818561222a565b935061254f8185602086016124e6565b61255881612519565b840191505092915050565b6000602082019050818103600083015261257d818461252a565b905092915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006125b082612585565b9050919050565b6125c0816125a5565b81146125cb57600080fd5b50565b6000813590506125dd816125b7565b92915050565b600080604083850312156125fa576125f961231d565b5b6000612608858286016125ce565b925050602061261985828601612348565b9150509250929050565b6000806040838503121561263a5761263961231d565b5b600061264885828601612348565b925050602061265985828601612348565b9150509250929050565b60008060006060848603121561267c5761267b61231d565b5b600061268a868287016125ce565b935050602061269b868287016125ce565b92505060406126ac86828701612348565b9150509250925092565b600060ff82169050919050565b6126cc816126b6565b82525050565b60006020820190506126e760008301846126c3565b92915050565b600080fd5b600080fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b61272f82612519565b810181811067ffffffffffffffff8211171561274e5761274d6126f7565b5b80604052505050565b6000612761612313565b905061276d8282612726565b919050565b600067ffffffffffffffff82111561278d5761278c6126f7565b5b61279682612519565b9050602081019050919050565b82818337600083830152505050565b60006127c56127c084612772565b612757565b9050828152602081018484840111156127e1576127e06126f2565b5b6127ec8482856127a3565b509392505050565b600082601f830112612809576128086126ed565b5b81356128198482602086016127b2565b91505092915050565b60008060006060848603121561283b5761283a61231d565b5b6000612849868287016125ce565b935050602061285a86828701612348565b925050604084013567ffffffffffffffff81111561287b5761287a612322565b5b612887868287016127f4565b9150509250925092565b6000602082840312156128a7576128a661231d565b5b60006128b5848285016125ce565b91505092915050565b600080fd5b600080fd5b60008083601f8401126128de576128dd6126ed565b5b8235905067ffffffffffffffff8111156128fb576128fa6128be565b5b602083019150836001820283011115612917576129166128c3565b5b9250929050565b60008060008060006080868803121561293a5761293961231d565b5b6000612948888289016125ce565b9550506020612959888289016125ce565b945050604061296a88828901612348565b935050606086013567ffffffffffffffff81111561298b5761298a612322565b5b612997888289016128c8565b92509250509295509295909350565b6129af81612420565b82525050565b60006020820190506129ca60008301846129a6565b92915050565b600080600080608085870312156129ea576129e961231d565b5b60006129f8878288016125ce565b9450506020612a09878288016125ce565b9350506040612a1a87828801612348565b925050606085013567ffffffffffffffff811115612a3b57612a3a612322565b5b612a47878288016127f4565b91505092959194509250565b60008060408385031215612a6a57612a6961231d565b5b6000612a78858286016125ce565b9250506020612a89858286016125ce565b9150509250929050565b7f416d6f756e74206973207a65726f000000000000000000000000000000000000600082015250565b6000612ac9600e8361222a565b9150612ad482612a93565b602082019050919050565b60006020820190508181036000830152612af881612abc565b9050919050565b7f416d6f756e7420697320746f6f20686967680000000000000000000000000000600082015250565b6000612b3560128361222a565b9150612b4082612aff565b602082019050919050565b60006020820190508181036000830152612b6481612b28565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b60006002820490506001821680612bb257607f821691505b602082108103612bc557612bc4612b6b565b5b50919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000612c0582612327565b9150612c1083612327565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03821115612c4557612c44612bcb565b5b828201905092915050565b60008160011c9050919050565b6000808291508390505b6001851115612ca757808604811115612c8357612c82612bcb565b5b6001851615612c925780820291505b8081029050612ca085612c50565b9450612c67565b94509492505050565b600082612cc05760019050612d7c565b81612cce5760009050612d7c565b8160018114612ce45760028114612cee57612d1d565b6001915050612d7c565b60ff841115612d0057612cff612bcb565b5b8360020a915084821115612d1757612d16612bcb565b5b50612d7c565b5060208310610133831016604e8410600b8410161715612d525782820a905083811115612d4d57612d4c612bcb565b5b612d7c565b612d5f8484846001612c5d565b92509050818404811115612d7657612d75612bcb565b5b81810290505b9392505050565b6000612d8e82612327565b9150612d99836126b6565b9250612dc67fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8484612cb0565b905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b6000612e0882612327565b9150612e1383612327565b925082612e2357612e22612dce565b5b828204905092915050565b6000612e3982612327565b9150612e4483612327565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0483118215151615612e7d57612e7c612bcb565b5b828202905092915050565b7f416d6f756e7420697320746f6f206c6f77000000000000000000000000000000600082015250565b6000612ebe60118361222a565b9150612ec982612e88565b602082019050919050565b60006020820190508181036000830152612eed81612eb1565b9050919050565b6000612eff82612327565b9150612f0a83612327565b925082821015612f1d57612f1c612bcb565b5b828203905092915050565b7f455243313336333a2072656365697665722072657475726e65642077726f6e6760008201527f2064617461000000000000000000000000000000000000000000000000000000602082015250565b6000612f8460258361222a565b9150612f8f82612f28565b604082019050919050565b60006020820190508181036000830152612fb381612f77565b9050919050565b7f4f6e6c7920616c6c6f77656420746f6b656e0000000000000000000000000000600082015250565b6000612ff060128361222a565b9150612ffb82612fba565b602082019050919050565b6000602082019050818103600083015261301f81612fe3565b9050919050565b7f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f7760008201527f207a65726f000000000000000000000000000000000000000000000000000000602082015250565b600061308260258361222a565b915061308d82613026565b604082019050919050565b600060208201905081810360008301526130b181613075565b9050919050565b7f455243313336333a207370656e6465722072657475726e65642077726f6e672060008201527f6461746100000000000000000000000000000000000000000000000000000000602082015250565b600061311460248361222a565b915061311f826130b8565b604082019050919050565b6000602082019050818103600083015261314381613107565b9050919050565b7f496e73756666696369656e7420616d6f756e7400000000000000000000000000600082015250565b600061318060138361222a565b915061318b8261314a565b602082019050919050565b600060208201905081810360008301526131af81613173565b9050919050565b7f5472616e73666572206661696c65640000000000000000000000000000000000600082015250565b60006131ec600f8361222a565b91506131f7826131b6565b602082019050919050565b6000602082019050818103600083015261321b816131df565b9050919050565b7f5265656e7472616e637947756172643a207265656e7472616e742063616c6c00600082015250565b6000613258601f8361222a565b915061326382613222565b602082019050919050565b600060208201905081810360008301526132878161324b565b9050919050565b7f4d617820737570706c79207468726573686f6c64207265616368656400000000600082015250565b60006132c4601c8361222a565b91506132cf8261328e565b602082019050919050565b600060208201905081810360008301526132f3816132b7565b9050919050565b7f45524332303a20617070726f76652066726f6d20746865207a65726f2061646460008201527f7265737300000000000000000000000000000000000000000000000000000000602082015250565b600061335660248361222a565b9150613361826132fa565b604082019050919050565b6000602082019050818103600083015261338581613349565b9050919050565b7f45524332303a20617070726f766520746f20746865207a65726f20616464726560008201527f7373000000000000000000000000000000000000000000000000000000000000602082015250565b60006133e860228361222a565b91506133f38261338c565b604082019050919050565b60006020820190508181036000830152613417816133db565b9050919050565b7f45524332303a20696e73756666696369656e7420616c6c6f77616e6365000000600082015250565b6000613454601d8361222a565b915061345f8261341e565b602082019050919050565b6000602082019050818103600083015261348381613447565b9050919050565b7f45524332303a207472616e736665722066726f6d20746865207a65726f20616460008201527f6472657373000000000000000000000000000000000000000000000000000000602082015250565b60006134e660258361222a565b91506134f18261348a565b604082019050919050565b60006020820190508181036000830152613515816134d9565b9050919050565b7f45524332303a207472616e7366657220746f20746865207a65726f206164647260008201527f6573730000000000000000000000000000000000000000000000000000000000602082015250565b600061357860238361222a565b91506135838261351c565b604082019050919050565b600060208201905081810360008301526135a78161356b565b9050919050565b7f45524332303a207472616e7366657220616d6f756e742065786365656473206260008201527f616c616e63650000000000000000000000000000000000000000000000000000602082015250565b600061360a60268361222a565b9150613615826135ae565b604082019050919050565b60006020820190508181036000830152613639816135fd565b9050919050565b7f455243313336333a207472616e7366657220746f206e6f6e20636f6e7472616360008201527f7420616464726573730000000000000000000000000000000000000000000000602082015250565b600061369c60298361222a565b91506136a782613640565b604082019050919050565b600060208201905081810360008301526136cb8161368f565b9050919050565b6136db816125a5565b82525050565b600081519050919050565b600082825260208201905092915050565b6000613708826136e1565b61371281856136ec565b93506137228185602086016124e6565b61372b81612519565b840191505092915050565b600060808201905061374b60008301876136d2565b61375860208301866136d2565b61376560408301856123f6565b818103606083015261377781846136fd565b905095945050505050565b6000815190506137918161244c565b92915050565b6000602082840312156137ad576137ac61231d565b5b60006137bb84828501613782565b91505092915050565b7f455243313336333a207472616e7366657220746f206e6f6e204552433133363360008201527f526563656976657220696d706c656d656e746572000000000000000000000000602082015250565b600061382060348361222a565b915061382b826137c4565b604082019050919050565b6000602082019050818103600083015261384f81613813565b9050919050565b7f455243313336333a20617070726f76652061206e6f6e20636f6e74726163742060008201527f6164647265737300000000000000000000000000000000000000000000000000602082015250565b60006138b260278361222a565b91506138bd82613856565b604082019050919050565b600060208201905081810360008301526138e1816138a5565b9050919050565b60006060820190506138fd60008301866136d2565b61390a60208301856123f6565b818103604083015261391c81846136fd565b9050949350505050565b7f455243313336333a20617070726f76652061206e6f6e2045524331333633537060008201527f656e64657220696d706c656d656e746572000000000000000000000000000000602082015250565b600061398260318361222a565b915061398d82613926565b604082019050919050565b600060208201905081810360008301526139b181613975565b9050919050565b7f45524332303a206d696e7420746f20746865207a65726f206164647265737300600082015250565b60006139ee601f8361222a565b91506139f9826139b8565b602082019050919050565b60006020820190508181036000830152613a1d816139e1565b9050919050565b7f416464726573733a20696e73756666696369656e742062616c616e6365000000600082015250565b6000613a5a601d8361222a565b9150613a6582613a24565b602082019050919050565b60006020820190508181036000830152613a8981613a4d565b9050919050565b600081905092915050565b50565b6000613aab600083613a90565b9150613ab682613a9b565b600082019050919050565b6000613acc82613a9e565b9150819050919050565b7f416464726573733a20756e61626c6520746f2073656e642076616c75652c207260008201527f6563697069656e74206d61792068617665207265766572746564000000000000602082015250565b6000613b32603a8361222a565b9150613b3d82613ad6565b604082019050919050565b60006020820190508181036000830152613b6181613b25565b9050919050565b7f526f6f74206d75737420626520706f7369746976650000000000000000000000600082015250565b6000613b9e60158361222a565b9150613ba982613b68565b602082019050919050565b60006020820190508181036000830152613bcd81613b91565b9050919050565b6000613bdf82612327565b9150613bea83612327565b9250613c177fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8484612cb0565b905092915050565b7f45524332303a206275726e2066726f6d20746865207a65726f2061646472657360008201527f7300000000000000000000000000000000000000000000000000000000000000602082015250565b6000613c7b60218361222a565b9150613c8682613c1f565b604082019050919050565b60006020820190508181036000830152613caa81613c6e565b9050919050565b7f45524332303a206275726e20616d6f756e7420657863656564732062616c616e60008201527f6365000000000000000000000000000000000000000000000000000000000000602082015250565b6000613d0d60228361222a565b9150613d1882613cb1565b604082019050919050565b60006020820190508181036000830152613d3c81613d00565b905091905056fea2646970667358221220a8a32fb57c428b8dfbfcd72ad1667f6bbea8cbd5294ff716c1137ddc14edcaa564736f6c634300080f0033", "bin-runtime": "6080604052600436106101a05760003560e01c806370a08231116100ec578063c1d34b891161008a578063d96a094a11610064578063d96a094a146107d2578063dce29da8146107ee578063dd62ed3e1461082b578063e4849b3214610868576101e0565b8063c1d34b891461071b578063cae9ca5114610758578063d8fbe99414610795576101e0565b8063a457c2d7116100c6578063a457c2d714610639578063a9059cbb14610676578063b4a0b8c7146106b3578063b9615a6e146106de576101e0565b806370a082311461059457806388a7ca5c146105d157806395d89b411461060e576101e0565b806323b872dd11610159578063395093511161013357806339509351146104b25780634000aea0146104ef578063465fa4081461052c57806354d0a68514610569576101e0565b806323b872dd1461040d578063313ce5671461044a5780633177029f14610475576101e0565b806301ffc9a7146102c357806306fdde0314610300578063095ea7b31461032b5780631296ee621461036857806318160ddd146103a557806318d8e8e0146103d0576101e0565b366101e0576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016101d790612287565b60405180910390fd5b600036606060003411610228576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161021f906122f3565b60405180910390fd5b600061023334610891565b905060008484810190610246919061235d565b90508082101561028b576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610282906123d6565b60405180910390fd5b610294826108ab565b816040516020016102a59190612405565b60405160208183030381529060405292505050915050805190602001f35b3480156102cf57600080fd5b506102ea60048036038101906102e59190612478565b610995565b6040516102f791906124c0565b60405180910390f35b34801561030c57600080fd5b50610315610a0f565b6040516103229190612563565b60405180910390f35b34801561033757600080fd5b50610352600480360381019061034d91906125e3565b610aa1565b60405161035f91906124c0565b60405180910390f35b34801561037457600080fd5b5061038f600480360381019061038a91906125e3565b610ac4565b60405161039c91906124c0565b60405180910390f35b3480156103b157600080fd5b506103ba610ae8565b6040516103c79190612405565b60405180910390f35b3480156103dc57600080fd5b506103f760048036038101906103f29190612623565b610af2565b6040516104049190612405565b60405180910390f35b34801561041957600080fd5b50610434600480360381019061042f9190612663565b610bad565b60405161044191906124c0565b60405180910390f35b34801561045657600080fd5b5061045f610bdc565b60405161046c91906126d2565b60405180910390f35b34801561048157600080fd5b5061049c600480360381019061049791906125e3565b610be5565b6040516104a991906124c0565b60405180910390f35b3480156104be57600080fd5b506104d960048036038101906104d491906125e3565b610c09565b6040516104e691906124c0565b60405180910390f35b3480156104fb57600080fd5b5061051660048036038101906105119190612822565b610c40565b60405161052391906124c0565b60405180910390f35b34801561053857600080fd5b50610553600480360381019061054e919061235d565b610caa565b6040516105609190612405565b60405180910390f35b34801561057557600080fd5b5061057e610cc4565b60405161058b9190612405565b60405180910390f35b3480156105a057600080fd5b506105bb60048036038101906105b69190612891565b610ccc565b6040516105c89190612405565b60405180910390f35b3480156105dd57600080fd5b506105f860048036038101906105f3919061291e565b610d14565b60405161060591906129b5565b60405180910390f35b34801561061a57600080fd5b50610623610d97565b6040516106309190612563565b60405180910390f35b34801561064557600080fd5b50610660600480360381019061065b91906125e3565b610e29565b60405161066d91906124c0565b60405180910390f35b34801561068257600080fd5b5061069d600480360381019061069891906125e3565b610ea0565b6040516106aa91906124c0565b60405180910390f35b3480156106bf57600080fd5b506106c8610ec3565b6040516106d59190612405565b60405180910390f35b3480156106ea57600080fd5b506107056004803603810190610700919061235d565b610891565b6040516107129190612405565b60405180910390f35b34801561072757600080fd5b50610742600480360381019061073d91906129d0565b610ecc565b60405161074f91906124c0565b60405180910390f35b34801561076457600080fd5b5061077f600480360381019061077a9190612822565b610f31565b60405161078c91906124c0565b60405180910390f35b3480156107a157600080fd5b506107bc60048036038101906107b79190612663565b610f93565b6040516107c991906124c0565b60405180910390f35b6107ec60048036038101906107e7919061235d565b6108ab565b005b3480156107fa57600080fd5b5061081560048036038101906108109190612623565b610fb9565b6040516108229190612405565b60405180910390f35b34801561083757600080fd5b50610852600480360381019061084d9190612a53565b61103b565b60405161085f9190612405565b60405180910390f35b34801561087457600080fd5b5061088f600480360381019061088a919061235d565b6110c2565b005b60006108a48261089f610ae8565b610af2565b9050919050565b6108b361116f565b600034116108f6576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016108ed906122f3565b60405180910390fd5b60008111610939576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161093090612adf565b60405180910390fd5b633b9aca00811115610980576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161097790612b4b565b60405180910390fd5b61098a33826111be565b6109926112d8565b50565b60007fc2d06c1e000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19161480610a085750610a07826112e2565b5b9050919050565b606060038054610a1e90612b9a565b80601f0160208091040260200160405190810160405280929190818152602001828054610a4a90612b9a565b8015610a975780601f10610a6c57610100808354040283529160200191610a97565b820191906000526020600020905b815481529060010190602001808311610a7a57829003601f168201915b5050505050905090565b600080610aac61135c565b9050610ab9818585611364565b600191505092915050565b6000610ae0838360405180602001604052806000815250610c40565b905092915050565b6000600254905090565b600080610b3b6003600185610b079190612bfa565b610b119190612d83565b6003620f424087610b229190612dfd565b610b2c9190612e2e565b610b369190612bfa565b61152d565b9050600183610b4a9190612bfa565b811015610b8c576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610b8390612ed4565b60405180910390fd5b60018382610b9a9190612ef4565b610ba49190612ef4565b91505092915050565b600080610bb861135c565b9050610bc5858285611541565b610bd08585856115cd565b60019150509392505050565b60006012905090565b6000610c01838360405180602001604052806000815250610f31565b905092915050565b600080610c1461135c565b9050610c35818585610c26858961103b565b610c309190612bfa565b611364565b600191505092915050565b6000610c4c8484610ea0565b50610c60610c5861135c565b858585611843565b610c9f576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610c9690612f9a565b60405180910390fd5b600190509392505050565b6000610cbd82610cb8610ae8565b610fb9565b9050919050565b633b9aca0081565b60008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b60003073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610d84576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610d7b90613006565b60405180910390fd5b6388a7ca5c60e01b905095945050505050565b606060048054610da690612b9a565b80601f0160208091040260200160405190810160405280929190818152602001828054610dd290612b9a565b8015610e1f5780601f10610df457610100808354040283529160200191610e1f565b820191906000526020600020905b815481529060010190602001808311610e0257829003601f168201915b5050505050905090565b600080610e3461135c565b90506000610e42828661103b565b905083811015610e87576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610e7e90613098565b60405180910390fd5b610e948286868403611364565b60019250505092915050565b600080610eab61135c565b9050610eb88185856115cd565b600191505092915050565b64e8d4a5100081565b6000610ed9858585610bad565b50610ee685858585611843565b610f25576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610f1c90612f9a565b60405180910390fd5b60019050949350505050565b6000610f3d8484610aa1565b50610f498484846119fa565b610f88576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610f7f9061312a565b60405180910390fd5b600190509392505050565b6000610fb084848460405180602001604052806000815250610ecc565b90509392505050565b6000600383610fc89190612dfd565b6003620f42406003600186610fdd9190612bfa565b610fe79190612d83565b600360018888610ff79190612bfa565b6110019190612bfa565b61100b9190612d83565b6110159190612ef4565b61101f9190612e2e565b6110299190612dfd565b6110339190612ef4565b905092915050565b6000600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905092915050565b6110ca61116f565b806110d433610ccc565b1015611115576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161110c90613196565b60405180910390fd5b60006111213083610ea0565b905080611163576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161115a90613202565b60405180910390fd5b5061116c6112d8565b50565b6002600554036111b4576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016111ab9061326e565b60405180910390fd5b6002600581905550565b60006111c982610caa565b90508034101561120e576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611205906122f3565b60405180910390fd5b6112188383611bae565b64e8d4a51000611226610ae8565b1115611267576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161125e906132da565b60405180910390fd5b803411156112855761128483823461127f9190612ef4565b611d04565b5b8273ffffffffffffffffffffffffffffffffffffffff167fe3d4187f6ca4248660cc0ac8b8056515bac4a8132be2eca31d6d0cc170722a7e836040516112cb9190612405565b60405180910390a2505050565b6001600581905550565b60007fb0202a11000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19161480611355575061135482611df8565b5b9050919050565b600033905090565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16036113d3576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016113ca9061336c565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603611442576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611439906133fe565b60405180910390fd5b80600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925836040516115209190612405565b60405180910390a3505050565b600061153a826003611e62565b9050919050565b600061154d848461103b565b90507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff81146115c757818110156115b9576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016115b09061346a565b60405180910390fd5b6115c68484848403611364565b5b50505050565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff160361163c576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611633906134fc565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16036116ab576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016116a29061358e565b60405180910390fd5b6116b6838383611f44565b60008060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205490508181101561173c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161173390613620565b60405180910390fd5b8181036000808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550816000808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825401925050819055508273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef8460405161182a9190612405565b60405180910390a361183d848484611f49565b50505050565b60006118648473ffffffffffffffffffffffffffffffffffffffff16611fc6565b6118a3576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161189a906136b2565b60405180910390fd5b8373ffffffffffffffffffffffffffffffffffffffff166388a7ca5c6118c761135c565b8786866040518563ffffffff1660e01b81526004016118e99493929190613736565b6020604051808303816000875af192505050801561192557506040513d601f19601f820116820180604052508101906119229190613797565b60015b6119a7573d8060008114611955576040519150601f19603f3d011682016040523d82523d6000602084013e61195a565b606091505b50600081510361199f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161199690613836565b60405180910390fd5b805181602001fd5b6388a7ca5c60e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916817bffffffffffffffffffffffffffffffffffffffffffffffffffffffff191614915050949350505050565b6000611a1b8473ffffffffffffffffffffffffffffffffffffffff16611fc6565b611a5a576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611a51906138c8565b60405180910390fd5b8373ffffffffffffffffffffffffffffffffffffffff16637b04a2d0611a7e61135c565b85856040518463ffffffff1660e01b8152600401611a9e939291906138e8565b6020604051808303816000875af1925050508015611ada57506040513d601f19601f82011682018060405250810190611ad79190613797565b60015b611b5c573d8060008114611b0a576040519150601f19603f3d011682016040523d82523d6000602084013e611b0f565b606091505b506000815103611b54576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611b4b90613998565b60405180910390fd5b805181602001fd5b637b04a2d060e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916817bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916149150509392505050565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603611c1d576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611c1490613a04565b60405180910390fd5b611c2960008383611f44565b8060026000828254611c3b9190612bfa565b92505081905550806000808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825401925050819055508173ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef83604051611cec9190612405565b60405180910390a3611d0060008383611f49565b5050565b80471015611d47576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611d3e90613a70565b60405180910390fd5b60008273ffffffffffffffffffffffffffffffffffffffff1682604051611d6d90613ac1565b60006040518083038185875af1925050503d8060008114611daa576040519150601f19603f3d011682016040523d82523d6000602084013e611daf565b606091505b5050905080611df3576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611dea90613b48565b60405180910390fd5b505050565b60007f01ffc9a7000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916149050919050565b6000808211611ea6576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611e9d90613bb4565b60405180910390fd5b60008303611eb75760009050611f3e565b6000808490505b80821015611f2c57600060028284611ed69190612bfa565b611ee09190612dfd565b905060008582611ef09190613bd4565b9050868103611f055781945050505050611f3e565b86811015611f2157600182611f1a9190612bfa565b9350611f25565b8192505b5050611ebe565b600182611f399190612ef4565b925050505b92915050565b505050565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1614158015611fb157503073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16145b15611fc157611fc08382611fe9565b5b505050565b6000808273ffffffffffffffffffffffffffffffffffffffff163b119050919050565b611ff3308261205d565b6000611ffe82610caa565b905061200a8382611d04565b8273ffffffffffffffffffffffffffffffffffffffff167f5e5e995ce3133561afceaa51a9a154d5db228cd7525d34df5185582c18d3df09836040516120509190612405565b60405180910390a2505050565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16036120cc576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016120c390613c91565b60405180910390fd5b6120d882600083611f44565b60008060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205490508181101561215e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161215590613d23565b60405180910390fd5b8181036000808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555081600260008282540392505081905550600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef846040516122119190612405565b60405180910390a361222583600084611f49565b505050565b600082825260208201905092915050565b7f4e6f7420737570706f7274656400000000000000000000000000000000000000600082015250565b6000612271600d8361222a565b915061227c8261223b565b602082019050919050565b600060208201905081810360008301526122a081612264565b9050919050565b7f496e73756666696369656e742066756e64730000000000000000000000000000600082015250565b60006122dd60128361222a565b91506122e8826122a7565b602082019050919050565b6000602082019050818103600083015261230c816122d0565b9050919050565b6000604051905090565b600080fd5b600080fd5b6000819050919050565b61233a81612327565b811461234557600080fd5b50565b60008135905061235781612331565b92915050565b6000602082840312156123735761237261231d565b5b600061238184828501612348565b91505092915050565b7f416d6f756e74206973206e6f7420636f72726563740000000000000000000000600082015250565b60006123c060158361222a565b91506123cb8261238a565b602082019050919050565b600060208201905081810360008301526123ef816123b3565b9050919050565b6123ff81612327565b82525050565b600060208201905061241a60008301846123f6565b92915050565b60007fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b61245581612420565b811461246057600080fd5b50565b6000813590506124728161244c565b92915050565b60006020828403121561248e5761248d61231d565b5b600061249c84828501612463565b91505092915050565b60008115159050919050565b6124ba816124a5565b82525050565b60006020820190506124d560008301846124b1565b92915050565b600081519050919050565b60005b838110156125045780820151818401526020810190506124e9565b83811115612513576000848401525b50505050565b6000601f19601f8301169050919050565b6000612535826124db565b61253f818561222a565b935061254f8185602086016124e6565b61255881612519565b840191505092915050565b6000602082019050818103600083015261257d818461252a565b905092915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006125b082612585565b9050919050565b6125c0816125a5565b81146125cb57600080fd5b50565b6000813590506125dd816125b7565b92915050565b600080604083850312156125fa576125f961231d565b5b6000612608858286016125ce565b925050602061261985828601612348565b9150509250929050565b6000806040838503121561263a5761263961231d565b5b600061264885828601612348565b925050602061265985828601612348565b9150509250929050565b60008060006060848603121561267c5761267b61231d565b5b600061268a868287016125ce565b935050602061269b868287016125ce565b92505060406126ac86828701612348565b9150509250925092565b600060ff82169050919050565b6126cc816126b6565b82525050565b60006020820190506126e760008301846126c3565b92915050565b600080fd5b600080fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b61272f82612519565b810181811067ffffffffffffffff8211171561274e5761274d6126f7565b5b80604052505050565b6000612761612313565b905061276d8282612726565b919050565b600067ffffffffffffffff82111561278d5761278c6126f7565b5b61279682612519565b9050602081019050919050565b82818337600083830152505050565b60006127c56127c084612772565b612757565b9050828152602081018484840111156127e1576127e06126f2565b5b6127ec8482856127a3565b509392505050565b600082601f830112612809576128086126ed565b5b81356128198482602086016127b2565b91505092915050565b60008060006060848603121561283b5761283a61231d565b5b6000612849868287016125ce565b935050602061285a86828701612348565b925050604084013567ffffffffffffffff81111561287b5761287a612322565b5b612887868287016127f4565b9150509250925092565b6000602082840312156128a7576128a661231d565b5b60006128b5848285016125ce565b91505092915050565b600080fd5b600080fd5b60008083601f8401126128de576128dd6126ed565b5b8235905067ffffffffffffffff8111156128fb576128fa6128be565b5b602083019150836001820283011115612917576129166128c3565b5b9250929050565b60008060008060006080868803121561293a5761293961231d565b5b6000612948888289016125ce565b9550506020612959888289016125ce565b945050604061296a88828901612348565b935050606086013567ffffffffffffffff81111561298b5761298a612322565b5b612997888289016128c8565b92509250509295509295909350565b6129af81612420565b82525050565b60006020820190506129ca60008301846129a6565b92915050565b600080600080608085870312156129ea576129e961231d565b5b60006129f8878288016125ce565b9450506020612a09878288016125ce565b9350506040612a1a87828801612348565b925050606085013567ffffffffffffffff811115612a3b57612a3a612322565b5b612a47878288016127f4565b91505092959194509250565b60008060408385031215612a6a57612a6961231d565b5b6000612a78858286016125ce565b9250506020612a89858286016125ce565b9150509250929050565b7f416d6f756e74206973207a65726f000000000000000000000000000000000000600082015250565b6000612ac9600e8361222a565b9150612ad482612a93565b602082019050919050565b60006020820190508181036000830152612af881612abc565b9050919050565b7f416d6f756e7420697320746f6f20686967680000000000000000000000000000600082015250565b6000612b3560128361222a565b9150612b4082612aff565b602082019050919050565b60006020820190508181036000830152612b6481612b28565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b60006002820490506001821680612bb257607f821691505b602082108103612bc557612bc4612b6b565b5b50919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000612c0582612327565b9150612c1083612327565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03821115612c4557612c44612bcb565b5b828201905092915050565b60008160011c9050919050565b6000808291508390505b6001851115612ca757808604811115612c8357612c82612bcb565b5b6001851615612c925780820291505b8081029050612ca085612c50565b9450612c67565b94509492505050565b600082612cc05760019050612d7c565b81612cce5760009050612d7c565b8160018114612ce45760028114612cee57612d1d565b6001915050612d7c565b60ff841115612d0057612cff612bcb565b5b8360020a915084821115612d1757612d16612bcb565b5b50612d7c565b5060208310610133831016604e8410600b8410161715612d525782820a905083811115612d4d57612d4c612bcb565b5b612d7c565b612d5f8484846001612c5d565b92509050818404811115612d7657612d75612bcb565b5b81810290505b9392505050565b6000612d8e82612327565b9150612d99836126b6565b9250612dc67fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8484612cb0565b905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b6000612e0882612327565b9150612e1383612327565b925082612e2357612e22612dce565b5b828204905092915050565b6000612e3982612327565b9150612e4483612327565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0483118215151615612e7d57612e7c612bcb565b5b828202905092915050565b7f416d6f756e7420697320746f6f206c6f77000000000000000000000000000000600082015250565b6000612ebe60118361222a565b9150612ec982612e88565b602082019050919050565b60006020820190508181036000830152612eed81612eb1565b9050919050565b6000612eff82612327565b9150612f0a83612327565b925082821015612f1d57612f1c612bcb565b5b828203905092915050565b7f455243313336333a2072656365697665722072657475726e65642077726f6e6760008201527f2064617461000000000000000000000000000000000000000000000000000000602082015250565b6000612f8460258361222a565b9150612f8f82612f28565b604082019050919050565b60006020820190508181036000830152612fb381612f77565b9050919050565b7f4f6e6c7920616c6c6f77656420746f6b656e0000000000000000000000000000600082015250565b6000612ff060128361222a565b9150612ffb82612fba565b602082019050919050565b6000602082019050818103600083015261301f81612fe3565b9050919050565b7f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f7760008201527f207a65726f000000000000000000000000000000000000000000000000000000602082015250565b600061308260258361222a565b915061308d82613026565b604082019050919050565b600060208201905081810360008301526130b181613075565b9050919050565b7f455243313336333a207370656e6465722072657475726e65642077726f6e672060008201527f6461746100000000000000000000000000000000000000000000000000000000602082015250565b600061311460248361222a565b915061311f826130b8565b604082019050919050565b6000602082019050818103600083015261314381613107565b9050919050565b7f496e73756666696369656e7420616d6f756e7400000000000000000000000000600082015250565b600061318060138361222a565b915061318b8261314a565b602082019050919050565b600060208201905081810360008301526131af81613173565b9050919050565b7f5472616e73666572206661696c65640000000000000000000000000000000000600082015250565b60006131ec600f8361222a565b91506131f7826131b6565b602082019050919050565b6000602082019050818103600083015261321b816131df565b9050919050565b7f5265656e7472616e637947756172643a207265656e7472616e742063616c6c00600082015250565b6000613258601f8361222a565b915061326382613222565b602082019050919050565b600060208201905081810360008301526132878161324b565b9050919050565b7f4d617820737570706c79207468726573686f6c64207265616368656400000000600082015250565b60006132c4601c8361222a565b91506132cf8261328e565b602082019050919050565b600060208201905081810360008301526132f3816132b7565b9050919050565b7f45524332303a20617070726f76652066726f6d20746865207a65726f2061646460008201527f7265737300000000000000000000000000000000000000000000000000000000602082015250565b600061335660248361222a565b9150613361826132fa565b604082019050919050565b6000602082019050818103600083015261338581613349565b9050919050565b7f45524332303a20617070726f766520746f20746865207a65726f20616464726560008201527f7373000000000000000000000000000000000000000000000000000000000000602082015250565b60006133e860228361222a565b91506133f38261338c565b604082019050919050565b60006020820190508181036000830152613417816133db565b9050919050565b7f45524332303a20696e73756666696369656e7420616c6c6f77616e6365000000600082015250565b6000613454601d8361222a565b915061345f8261341e565b602082019050919050565b6000602082019050818103600083015261348381613447565b9050919050565b7f45524332303a207472616e736665722066726f6d20746865207a65726f20616460008201527f6472657373000000000000000000000000000000000000000000000000000000602082015250565b60006134e660258361222a565b91506134f18261348a565b604082019050919050565b60006020820190508181036000830152613515816134d9565b9050919050565b7f45524332303a207472616e7366657220746f20746865207a65726f206164647260008201527f6573730000000000000000000000000000000000000000000000000000000000602082015250565b600061357860238361222a565b91506135838261351c565b604082019050919050565b600060208201905081810360008301526135a78161356b565b9050919050565b7f45524332303a207472616e7366657220616d6f756e742065786365656473206260008201527f616c616e63650000000000000000000000000000000000000000000000000000602082015250565b600061360a60268361222a565b9150613615826135ae565b604082019050919050565b60006020820190508181036000830152613639816135fd565b9050919050565b7f455243313336333a207472616e7366657220746f206e6f6e20636f6e7472616360008201527f7420616464726573730000000000000000000000000000000000000000000000602082015250565b600061369c60298361222a565b91506136a782613640565b604082019050919050565b600060208201905081810360008301526136cb8161368f565b9050919050565b6136db816125a5565b82525050565b600081519050919050565b600082825260208201905092915050565b6000613708826136e1565b61371281856136ec565b93506137228185602086016124e6565b61372b81612519565b840191505092915050565b600060808201905061374b60008301876136d2565b61375860208301866136d2565b61376560408301856123f6565b818103606083015261377781846136fd565b905095945050505050565b6000815190506137918161244c565b92915050565b6000602082840312156137ad576137ac61231d565b5b60006137bb84828501613782565b91505092915050565b7f455243313336333a207472616e7366657220746f206e6f6e204552433133363360008201527f526563656976657220696d706c656d656e746572000000000000000000000000602082015250565b600061382060348361222a565b915061382b826137c4565b604082019050919050565b6000602082019050818103600083015261384f81613813565b9050919050565b7f455243313336333a20617070726f76652061206e6f6e20636f6e74726163742060008201527f6164647265737300000000000000000000000000000000000000000000000000602082015250565b60006138b260278361222a565b91506138bd82613856565b604082019050919050565b600060208201905081810360008301526138e1816138a5565b9050919050565b60006060820190506138fd60008301866136d2565b61390a60208301856123f6565b818103604083015261391c81846136fd565b9050949350505050565b7f455243313336333a20617070726f76652061206e6f6e2045524331333633537060008201527f656e64657220696d706c656d656e746572000000000000000000000000000000602082015250565b600061398260318361222a565b915061398d82613926565b604082019050919050565b600060208201905081810360008301526139b181613975565b9050919050565b7f45524332303a206d696e7420746f20746865207a65726f206164647265737300600082015250565b60006139ee601f8361222a565b91506139f9826139b8565b602082019050919050565b60006020820190508181036000830152613a1d816139e1565b9050919050565b7f416464726573733a20696e73756666696369656e742062616c616e6365000000600082015250565b6000613a5a601d8361222a565b9150613a6582613a24565b602082019050919050565b60006020820190508181036000830152613a8981613a4d565b9050919050565b600081905092915050565b50565b6000613aab600083613a90565b9150613ab682613a9b565b600082019050919050565b6000613acc82613a9e565b9150819050919050565b7f416464726573733a20756e61626c6520746f2073656e642076616c75652c207260008201527f6563697069656e74206d61792068617665207265766572746564000000000000602082015250565b6000613b32603a8361222a565b9150613b3d82613ad6565b604082019050919050565b60006020820190508181036000830152613b6181613b25565b9050919050565b7f526f6f74206d75737420626520706f7369746976650000000000000000000000600082015250565b6000613b9e60158361222a565b9150613ba982613b68565b602082019050919050565b60006020820190508181036000830152613bcd81613b91565b9050919050565b6000613bdf82612327565b9150613bea83612327565b9250613c177fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8484612cb0565b905092915050565b7f45524332303a206275726e2066726f6d20746865207a65726f2061646472657360008201527f7300000000000000000000000000000000000000000000000000000000000000602082015250565b6000613c7b60218361222a565b9150613c8682613c1f565b604082019050919050565b60006020820190508181036000830152613caa81613c6e565b9050919050565b7f45524332303a206275726e20616d6f756e7420657863656564732062616c616e60008201527f6365000000000000000000000000000000000000000000000000000000000000602082015250565b6000613d0d60228361222a565b9150613d1882613cb1565b604082019050919050565b60006020820190508181036000830152613d3c81613d00565b905091905056fea2646970667358221220a8a32fb57c428b8dfbfcd72ad1667f6bbea8cbd5294ff716c1137ddc14edcaa564736f6c634300080f0033", "userdoc": {"methods": {}, "notice": null}, "devdoc": {"methods": {"allowance(address,address)": {"author": null, "details": "See {IERC20-allowance}.", "params": {}, "return": null}, "approve(address,uint256)": {"author": null, "details": "See {IERC20-approve}. NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.", "params": {}, "return": null}, "approveAndCall(address,uint256)": {"author": null, "details": "Approve spender to transfer tokens and then execute a callback on `spender`.", "params": {"amount": "The amount allowed to be transferred", "spender": "The address allowed to transfer to"}, "return": null}, "approveAndCall(address,uint256,bytes)": {"author": null, "details": "Approve spender to transfer tokens and then execute a callback on `spender`.", "params": {"amount": "The amount allowed to be transferred.", "data": "Additional data with no specified format.", "spender": "The address allowed to transfer to."}, "return": null}, "balanceOf(address)": {"author": null, "details": "See {IERC20-balanceOf}.", "params": {}, "return": null}, "buy(uint256)": {"author": null, "details": "Allows a user to buy tokens by sending Ether to the contract.", "params": {"amount": "The amount of tokens to buy."}, "return": null}, "calculatePriceForTokens(uint256)": {"author": null, "details": "Calculates the cost of buying a given amount of tokens.", "params": {"amount": "The amount of tokens to calculate the cost for."}, "return": null}, "calculatePriceForTokens(uint256,uint256)": {"author": null, "details": "The `calculatePriceForTokens` function takes an amount of tokens and the current token supply as input and returns the cost of purchasing that amount of tokens in Ether. priceForTokens = poolBalance(tokenSupply + amount) - poolBalance(tokenSupply) poolBalance = ((tokenSupply + 1) ^ 3) / 3", "params": {}, "return": null}, "calculateTokensForPrice(uint256)": {"author": null, "details": "Calculates the amount of tokens that can be bought with a given amount of Ether.", "params": {"amount": "The amount of Ether to calculate the token amount for."}, "return": null}, "calculateTokensForPrice(uint256,uint256)": {"author": null, "details": "The `calculateTokensForPrice` function takes an amount of Ether and the current token supply as input and returns the number of tokens that can be purchased with that amount of Ether.", "params": {}, "return": null}, "constructor": {"author": null, "details": "Initializes the contract with the given name and symbol.", "params": {"_name": "The name of the token.", "_symbol": "The symbol of the token."}, "return": null}, "decimals()": {"author": null, "details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {ERC20} uses, unless this function is overridden; NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.", "params": {}, "return": null}, "decreaseAllowance(address,uint256)": {"author": null, "details": "Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`.", "params": {}, "return": null}, "increaseAllowance(address,uint256)": {"author": null, "details": "Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address.", "params": {}, "return": null}, "name()": {"author": null, "details": "Returns the name of the token.", "params": {}, "return": null}, "onTransferReceived(address,address,uint256,bytes)": {"author": null, "details": "Called by ERC1363 to indicate that tokens have been transferred to the contract.", "params": {}, "return": null}, "sell(uint256)": {"author": null, "details": "Allows a user to sell tokens back to the contract in exchange for Ether.", "params": {"amount": "The amount of tokens to sell."}, "return": null}, "supportsInterface(bytes4)": {"author": null, "details": "Checks if a contract implements the IBondingToken interface.", "params": {"interfaceId": "The interface ID being checked."}, "return": null}, "symbol()": {"author": null, "details": "Returns the symbol of the token, usually a shorter version of the name.", "params": {}, "return": null}, "totalSupply()": {"author": null, "details": "See {IERC20-totalSupply}.", "params": {}, "return": null}, "transfer(address,uint256)": {"author": null, "details": "See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `amount`.", "params": {}, "return": null}, "transferAndCall(address,uint256)": {"author": null, "details": "Transfer tokens to a specified address and then execute a callback on `to`.", "params": {"amount": "The amount to be transferred.", "to": "The address to transfer to."}, "return": null}, "transferAndCall(address,uint256,bytes)": {"author": null, "details": "Transfer tokens to a specified address and then execute a callback on `to`.", "params": {"amount": "The amount to be transferred", "data": "Additional data with no specified format", "to": "The address to transfer to"}, "return": null}, "transferFrom(address,address,uint256)": {"author": null, "details": "See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `amount`. - the caller must have allowance for ``from``'s tokens of at least `amount`.", "params": {}, "return": null}, "transferFromAndCall(address,address,uint256)": {"author": null, "details": "Transfer tokens from one address to another and then execute a callback on `to`.", "params": {"amount": "The amount of tokens to be transferred", "from": "The address which you want to send tokens from", "to": "The address which you want to transfer to"}, "return": null}, "transferFromAndCall(address,address,uint256,bytes)": {"author": null, "details": "Transfer tokens from one address to another and then execute a callback on `to`.", "params": {"amount": "The amount of tokens to be transferred", "data": "Additional data with no specified format", "from": "The address which you want to send tokens from", "to": "The address which you want to transfer to"}, "return": null}}, "author": null, "details": "A token contract that implements a bonding curve for buying and selling tokens using Ether. The contract uses ERC1363 to accept and transfer tokens, and implements the IBondingToken interface for buying and selling tokens. The contract also implements the IERC1363Receiver interface to receive tokens that are sent to the contract.", "title": "BondingToken"}}, "/Users/vladimirtrifonov/src/playground/solidity/rare-skills/advanced-solidity-bootcamp/fuzzing-with-echidna/bonding-token/src/IBondingToken.sol:IBondingToken": {"srcmap": "", "srcmap-runtime": "", "abi": "[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Buy\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Sell\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"buy\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"calculatePriceForTokens\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"calculateTokensForPrice\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"sell\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}]", "bin": "", "bin-runtime": "", "userdoc": {"methods": {}, "notice": null}, "devdoc": {"methods": {"buy(uint256)": {"author": null, "details": "Buy tokens with ETH at a calculated price.", "params": {"amount": "The amount of tokens to buy."}, "return": null}, "calculatePriceForTokens(uint256)": {"author": null, "details": "Calculate the price for a given amount of tokens.", "params": {"amount": "The amount of tokens to calculate the price for."}, "return": null}, "calculateTokensForPrice(uint256)": {"author": null, "details": "Calculate the amount of tokens for a given price.", "params": {"amount": "The price to calculate the amount of tokens for."}, "return": null}, "sell(uint256)": {"author": null, "details": "Sell tokens at a calculated price and receive ETH.", "params": {"amount": "The amount of tokens to sell."}, "return": null}}, "author": null, "details": "Interface for a bonding token contract that allows buying and selling of tokens at a calculated price.", "title": "IBondingToken"}}, "/Users/vladimirtrifonov/src/playground/solidity/rare-skills/advanced-solidity-bootcamp/fuzzing-with-echidna/bonding-token/test/TestBondingToken.sol:TestBondingToken": {"srcmap": "277:2508:14:-:0;;;456:43;;;;;:::i;:::-;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;441:12;;:58;;;;;;;;;;;;;;;;;;277:2508;;;;;;;;;;:::o;7:169:15:-;91:11;125:6;120:3;113:19;165:4;160:3;156:14;141:29;;7:169;;;;:::o;182:166::-;322:18;318:1;310:6;306:14;299:42;182:166;:::o;354:366::-;496:3;517:67;581:2;576:3;517:67;:::i;:::-;510:74;;593:93;682:3;593:93;:::i;:::-;711:2;706:3;702:12;695:19;;354:366;;;:::o;726:153::-;866:5;862:1;854:6;850:14;843:29;726:153;:::o;885:365::-;1027:3;1048:66;1112:1;1107:3;1048:66;:::i;:::-;1041:73;;1123:93;1212:3;1123:93;:::i;:::-;1241:2;1236:3;1232:12;1225:19;;885:365;;;:::o;1256:726::-;1523:4;1561:2;1550:9;1546:18;1538:26;;1610:9;1604:4;1600:20;1596:1;1585:9;1581:17;1574:47;1638:131;1764:4;1638:131;:::i;:::-;1630:139;;1816:9;1810:4;1806:20;1801:2;1790:9;1786:18;1779:48;1844:131;1970:4;1844:131;:::i;:::-;1836:139;;1256:726;;;:::o;277:2508:14:-;;;;;;;", "srcmap-runtime": "277:2508:14:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;512:452;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2061:687;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;970:1085;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;512:452;581:1;572:6;:10;:58;;594:12;;;;;;;;;;:34;;;:36;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;572:58;;;585:6;572:58;563:67;;663:12;;;;;;;;;;:34;;;:36;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;654:6;:45;;;;:::i;:::-;649:1;:51;;;;:::i;:::-;640:60;;710:15;728:12;;;;;;;;;;;:22;;;759:4;728:37;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;710:55;;775:12;790;;;;;;;;;;;:36;;;827:6;790:44;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;775:59;;844:12;;;;;;;;;;:16;;;868:4;874:6;844:37;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;950:6;940:7;:16;;;;:::i;:::-;899:12;;;;;;;;;;:22;;;930:4;899:37;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:57;892:65;;;;:::i;:::-;;553:411;;512:452;:::o;2061:687::-;2134:1;2125:6;:10;:58;;2147:12;;;;;;;;;;:34;;;:36;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2125:58;;;2138:6;2125:58;2116:67;;2193:22;2218:12;;;;;;;;;;;:22;;;2249:4;2218:37;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2193:62;;2265:18;2286:21;2265:42;;2340:12;;;;;;;;;;:34;;;:36;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2331:6;:45;;;;:::i;:::-;2326:1;:51;;;;:::i;:::-;2317:60;;2387:12;2402;;;;;;;;;;;:36;;;2439:6;2402:44;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2387:59;;2456:12;;;;;;;;;;:16;;;2480:4;2486:6;2456:37;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2507:12;;;;;;;;;;:17;;;2525:6;2507:25;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2503:112;;2598:5;2591:13;;;;:::i;:::-;;2503:112;;;2554:4;2547:12;;;;:::i;:::-;;2503:112;2673:14;2632:12;;;;;;;;;;:22;;;2663:4;2632:37;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:55;2625:63;;;;:::i;:::-;;2719:21;2705:10;:35;2698:43;;;;:::i;:::-;;2106:642;;;2061:687;:::o;970:1085::-;1054:1;1045:6;:10;:58;;1067:12;;;;;;;;;;:34;;;:36;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1045:58;;;1058:6;1045:58;1036:67;;1117:5;1113:830;;;1161:12;;;;;;;;;;:34;;;:36;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1152:6;:45;;;;:::i;:::-;1147:1;:51;;;;:::i;:::-;1138:60;;1212:12;1227;;;;;;;;;;;:36;;;1264:6;1227:44;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1212:59;;1285:12;;;;;;;;;;:16;;;1309:4;1315:6;1285:37;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1124:209;1113:830;;;1353:15;1371:12;;;;;;;;;;;:22;;;1402:4;1371:37;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1353:55;;1436:1;1426:7;:11;1422:511;;;1480:7;1471:6;:16;;;;:::i;:::-;1466:1;:22;;;;:::i;:::-;1457:31;;1524:1;1515:6;:10;:29;;1537:7;1515:29;;;1528:6;1515:29;1506:38;;1566:12;;;;;;;;;;:17;;;1584:6;1566:25;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1562:357;;1679:186;1712:6;1744:12;;;;;;;;;;:36;;;1781:6;1744:44;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1822:12;;;;;;;;;;1814:29;;;1679:186;;;;;;;;:::i;:::-;;;;;;;;1894:5;1887:13;;;;:::i;:::-;;1562:357;;;1621:4;1614:12;;;;:::i;:::-;;1562:357;1422:511;1339:604;1113:830;2003:12;;;;;;;;;;:33;;;:35;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1973:12;;;;;;;;;;:24;;;:26;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:65;;1953:95;;;;:::i;:::-;;970:1085;;:::o;88:117:15:-;197:1;194;187:12;334:77;371:7;400:5;389:16;;334:77;;;:::o;417:122::-;490:24;508:5;490:24;:::i;:::-;483:5;480:35;470:63;;529:1;526;519:12;470:63;417:122;:::o;545:139::-;591:5;629:6;616:20;607:29;;645:33;672:5;645:33;:::i;:::-;545:139;;;;:::o;690:329::-;749:6;798:2;786:9;777:7;773:23;769:32;766:119;;;804:79;;:::i;:::-;766:119;924:1;949:53;994:7;985:6;974:9;970:22;949:53;:::i;:::-;939:63;;895:117;690:329;;;;:::o;1025:90::-;1059:7;1102:5;1095:13;1088:21;1077:32;;1025:90;;;:::o;1121:116::-;1191:21;1206:5;1191:21;:::i;:::-;1184:5;1181:32;1171:60;;1227:1;1224;1217:12;1171:60;1121:116;:::o;1243:133::-;1286:5;1324:6;1311:20;1302:29;;1340:30;1364:5;1340:30;:::i;:::-;1243:133;;;;:::o;1382:468::-;1447:6;1455;1504:2;1492:9;1483:7;1479:23;1475:32;1472:119;;;1510:79;;:::i;:::-;1472:119;1630:1;1655:53;1700:7;1691:6;1680:9;1676:22;1655:53;:::i;:::-;1645:63;;1601:117;1757:2;1783:50;1825:7;1816:6;1805:9;1801:22;1783:50;:::i;:::-;1773:60;;1728:115;1382:468;;;;;:::o;1856:143::-;1913:5;1944:6;1938:13;1929:22;;1960:33;1987:5;1960:33;:::i;:::-;1856:143;;;;:::o;2005:351::-;2075:6;2124:2;2112:9;2103:7;2099:23;2095:32;2092:119;;;2130:79;;:::i;:::-;2092:119;2250:1;2275:64;2331:7;2322:6;2311:9;2307:22;2275:64;:::i;:::-;2265:74;;2221:128;2005:351;;;;:::o;2362:180::-;2410:77;2407:1;2400:88;2507:4;2504:1;2497:15;2531:4;2528:1;2521:15;2548:176;2580:1;2597:20;2615:1;2597:20;:::i;:::-;2592:25;;2631:20;2649:1;2631:20;:::i;:::-;2626:25;;2670:1;2660:35;;2675:18;;:::i;:::-;2660:35;2716:1;2713;2709:9;2704:14;;2548:176;;;;:::o;2730:180::-;2778:77;2775:1;2768:88;2875:4;2872:1;2865:15;2899:4;2896:1;2889:15;2916:305;2956:3;2975:20;2993:1;2975:20;:::i;:::-;2970:25;;3009:20;3027:1;3009:20;:::i;:::-;3004:25;;3163:1;3095:66;3091:74;3088:1;3085:81;3082:107;;;3169:18;;:::i;:::-;3082:107;3213:1;3210;3206:9;3199:16;;2916:305;;;;:::o;3227:126::-;3264:7;3304:42;3297:5;3293:54;3282:65;;3227:126;;;:::o;3359:96::-;3396:7;3425:24;3443:5;3425:24;:::i;:::-;3414:35;;3359:96;;;:::o;3461:118::-;3548:24;3566:5;3548:24;:::i;:::-;3543:3;3536:37;3461:118;;:::o;3585:222::-;3678:4;3716:2;3705:9;3701:18;3693:26;;3729:71;3797:1;3786:9;3782:17;3773:6;3729:71;:::i;:::-;3585:222;;;;:::o;3813:118::-;3900:24;3918:5;3900:24;:::i;:::-;3895:3;3888:37;3813:118;;:::o;3937:222::-;4030:4;4068:2;4057:9;4053:18;4045:26;;4081:71;4149:1;4138:9;4134:17;4125:6;4081:71;:::i;:::-;3937:222;;;;:::o;4165:180::-;4213:77;4210:1;4203:88;4310:4;4307:1;4300:15;4334:4;4331:1;4324:15;4351:442;4500:4;4538:2;4527:9;4523:18;4515:26;;4551:71;4619:1;4608:9;4604:17;4595:6;4551:71;:::i;:::-;4632:72;4700:2;4689:9;4685:18;4676:6;4632:72;:::i;:::-;4714;4782:2;4771:9;4767:18;4758:6;4714:72;:::i;:::-;4351:442;;;;;;:::o", "abi": "[{\"inputs\":[],\"stateMutability\":\"payable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"}],\"name\":\"Balance\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"test_balance\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"test_buy\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"isBuy\",\"type\":\"bool\"}],\"name\":\"test_supply\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}]", "bin": "6080604052604051620000129062000080565b6200001d906200013f565b604051809103906000f0801580156200003a573d6000803e3d6000fd5b506000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555062000176565b61434c80620013f983390190565b600082825260208201905092915050565b7f54657374426f6e64696e67546f6b656e00000000000000000000000000000000600082015250565b6000620000d76010836200008e565b9150620000e4826200009f565b602082019050919050565b7f5442540000000000000000000000000000000000000000000000000000000000600082015250565b6000620001276003836200008e565b91506200013482620000ef565b602082019050919050565b600060408201905081810360008301526200015a81620000c8565b905081810360208301526200016f8162000118565b9050919050565b61127380620001866000396000f3fe6080604052600436106100385760003560e01c80630362550714610044578063ae5847961461006d578063b236c6c2146100965761003f565b3661003f57005b600080fd5b34801561005057600080fd5b5061006b60048036038101906100669190610f85565b6100bf565b005b34801561007957600080fd5b50610094600480360381019061008f9190610f85565b61048a565b005b3480156100a257600080fd5b506100bd60048036038101906100b89190610fea565b61090c565b005b6000811161015b5760008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166354d0a6856040518163ffffffff1660e01b8152600401602060405180830381865afa158015610132573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610156919061103f565b61015d565b805b905060008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166354d0a6856040518163ffffffff1660e01b8152600401602060405180830381865afa1580156101ca573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906101ee919061103f565b816101f9919061109b565b600161020591906110fb565b905060008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b81526004016102639190611192565b602060405180830381865afa158015610280573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102a4919061103f565b905060008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663465fa408846040518263ffffffff1660e01b815260040161030291906111bc565b602060405180830381865afa15801561031f573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610343919061103f565b905060008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663d96a094a82856040518363ffffffff1660e01b815260040161039f91906111bc565b6000604051808303818588803b1580156103b857600080fd5b505af11580156103cc573d6000803e3d6000fd5b505050505082826103dd91906110fb565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b81526004016104369190611192565b602060405180830381865afa158015610453573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610477919061103f565b14610485576104846111d7565b5b505050565b600081116105265760008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166354d0a6856040518163ffffffff1660e01b8152600401602060405180830381865afa1580156104fd573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610521919061103f565b610528565b805b905060008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b81526004016105869190611192565b602060405180830381865afa1580156105a3573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105c7919061103f565b9050600047905060008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166354d0a6856040518163ffffffff1660e01b8152600401602060405180830381865afa158015610639573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061065d919061103f565b83610668919061109b565b600161067491906110fb565b925060008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663465fa408856040518263ffffffff1660e01b81526004016106d291906111bc565b602060405180830381865afa1580156106ef573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610713919061103f565b905060008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663d96a094a82866040518363ffffffff1660e01b815260040161076f91906111bc565b6000604051808303818588803b15801561078857600080fd5b505af115801561079c573d6000803e3d6000fd5b505050505060008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663e4849b32856040518263ffffffff1660e01b81526004016107fa91906111bc565b600060405180830381600087803b15801561081457600080fd5b505af1925050508015610825575060015b61083d576000610838576108376111d7565b5b61084d565b600161084c5761084b6111d7565b5b5b8260008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b81526004016108a79190611192565b602060405180830381865afa1580156108c4573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108e8919061103f565b146108f6576108f56111d7565b5b478214610906576109056111d7565b5b50505050565b600082116109a85760008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166354d0a6856040518163ffffffff1660e01b8152600401602060405180830381865afa15801561097f573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109a3919061103f565b6109aa565b815b91508015610b8b5760008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166354d0a6856040518163ffffffff1660e01b8152600401602060405180830381865afa158015610a1d573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a41919061103f565b82610a4c919061109b565b6001610a5891906110fb565b915060008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663465fa408846040518263ffffffff1660e01b8152600401610ab691906111bc565b602060405180830381865afa158015610ad3573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610af7919061103f565b905060008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663d96a094a82856040518363ffffffff1660e01b8152600401610b5391906111bc565b6000604051808303818588803b158015610b6c57600080fd5b505af1158015610b80573d6000803e3d6000fd5b505050505050610e19565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b8152600401610be79190611192565b602060405180830381865afa158015610c04573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610c28919061103f565b90506000811115610e17578083610c3f919061109b565b6001610c4b91906110fb565b925060008311610c5b5780610c5d565b825b925060008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663e4849b32846040518263ffffffff1660e01b8152600401610cb891906111bc565b600060405180830381600087803b158015610cd257600080fd5b505af1925050508015610ce3575060015b610e06577fce422aac32fa3a960eff96496b10fd05b1688cfaa1f8d2732407f0c4ac52dbc18360008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663465fa408866040518263ffffffff1660e01b8152600401610d6291906111bc565b602060405180830381865afa158015610d7f573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610da3919061103f565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1631604051610dea93929190611206565b60405180910390a16000610e0157610e006111d7565b5b610e16565b6001610e1557610e146111d7565b5b5b5b505b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663b4a0b8c76040518163ffffffff1660e01b8152600401602060405180830381865afa158015610e84573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610ea8919061103f565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166318160ddd6040518163ffffffff1660e01b8152600401602060405180830381865afa158015610f13573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610f37919061103f565b1115610f4657610f456111d7565b5b5050565b600080fd5b6000819050919050565b610f6281610f4f565b8114610f6d57600080fd5b50565b600081359050610f7f81610f59565b92915050565b600060208284031215610f9b57610f9a610f4a565b5b6000610fa984828501610f70565b91505092915050565b60008115159050919050565b610fc781610fb2565b8114610fd257600080fd5b50565b600081359050610fe481610fbe565b92915050565b6000806040838503121561100157611000610f4a565b5b600061100f85828601610f70565b925050602061102085828601610fd5565b9150509250929050565b60008151905061103981610f59565b92915050565b60006020828403121561105557611054610f4a565b5b60006110638482850161102a565b91505092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b60006110a682610f4f565b91506110b183610f4f565b9250826110c1576110c061106c565b5b828206905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600061110682610f4f565b915061111183610f4f565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03821115611146576111456110cc565b5b828201905092915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061117c82611151565b9050919050565b61118c81611171565b82525050565b60006020820190506111a76000830184611183565b92915050565b6111b681610f4f565b82525050565b60006020820190506111d160008301846111ad565b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052600160045260246000fd5b600060608201905061121b60008301866111ad565b61122860208301856111ad565b61123560408301846111ad565b94935050505056fea264697066735822122011985564292ba89eff9b7d5f6f9243cb72c0193fe5a9246c78be89f52854975264736f6c634300080f003360806040523480156200001157600080fd5b506040516200434c3803806200434c83398181016040528101906200003791906200020c565b818181600390816200004a9190620004dc565b5080600490816200005c9190620004dc565b50505060016005819055505050620005c3565b6000604051905090565b600080fd5b600080fd5b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b620000d8826200008d565b810181811067ffffffffffffffff82111715620000fa57620000f96200009e565b5b80604052505050565b60006200010f6200006f565b90506200011d8282620000cd565b919050565b600067ffffffffffffffff82111562000140576200013f6200009e565b5b6200014b826200008d565b9050602081019050919050565b60005b83811015620001785780820151818401526020810190506200015b565b8381111562000188576000848401525b50505050565b6000620001a56200019f8462000122565b62000103565b905082815260208101848484011115620001c457620001c362000088565b5b620001d184828562000158565b509392505050565b600082601f830112620001f157620001f062000083565b5b8151620002038482602086016200018e565b91505092915050565b6000806040838503121562000226576200022562000079565b5b600083015167ffffffffffffffff8111156200024757620002466200007e565b5b6200025585828601620001d9565b925050602083015167ffffffffffffffff8111156200027957620002786200007e565b5b6200028785828601620001d9565b9150509250929050565b600081519050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b60006002820490506001821680620002e457607f821691505b602082108103620002fa57620002f96200029c565b5b50919050565b60008190508160005260206000209050919050565b60006020601f8301049050919050565b600082821b905092915050565b600060088302620003647fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8262000325565b62000370868362000325565b95508019841693508086168417925050509392505050565b6000819050919050565b6000819050919050565b6000620003bd620003b7620003b18462000388565b62000392565b62000388565b9050919050565b6000819050919050565b620003d9836200039c565b620003f1620003e882620003c4565b84845462000332565b825550505050565b600090565b62000408620003f9565b62000415818484620003ce565b505050565b5b818110156200043d5762000431600082620003fe565b6001810190506200041b565b5050565b601f8211156200048c57620004568162000300565b620004618462000315565b8101602085101562000471578190505b62000489620004808562000315565b8301826200041a565b50505b505050565b600082821c905092915050565b6000620004b16000198460080262000491565b1980831691505092915050565b6000620004cc83836200049e565b9150826002028217905092915050565b620004e78262000291565b67ffffffffffffffff8111156200050357620005026200009e565b5b6200050f8254620002cb565b6200051c82828562000441565b600060209050601f8311600181146200055457600084156200053f578287015190505b6200054b8582620004be565b865550620005bb565b601f198416620005648662000300565b60005b828110156200058e5784890151825560018201915060208501945060208101905062000567565b86831015620005ae5784890151620005aa601f8916826200049e565b8355505b6001600288020188555050505b505050505050565b613d7980620005d36000396000f3fe6080604052600436106101a05760003560e01c806370a08231116100ec578063c1d34b891161008a578063d96a094a11610064578063d96a094a146107d2578063dce29da8146107ee578063dd62ed3e1461082b578063e4849b3214610868576101e0565b8063c1d34b891461071b578063cae9ca5114610758578063d8fbe99414610795576101e0565b8063a457c2d7116100c6578063a457c2d714610639578063a9059cbb14610676578063b4a0b8c7146106b3578063b9615a6e146106de576101e0565b806370a082311461059457806388a7ca5c146105d157806395d89b411461060e576101e0565b806323b872dd11610159578063395093511161013357806339509351146104b25780634000aea0146104ef578063465fa4081461052c57806354d0a68514610569576101e0565b806323b872dd1461040d578063313ce5671461044a5780633177029f14610475576101e0565b806301ffc9a7146102c357806306fdde0314610300578063095ea7b31461032b5780631296ee621461036857806318160ddd146103a557806318d8e8e0146103d0576101e0565b366101e0576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016101d790612287565b60405180910390fd5b600036606060003411610228576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161021f906122f3565b60405180910390fd5b600061023334610891565b905060008484810190610246919061235d565b90508082101561028b576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610282906123d6565b60405180910390fd5b610294826108ab565b816040516020016102a59190612405565b60405160208183030381529060405292505050915050805190602001f35b3480156102cf57600080fd5b506102ea60048036038101906102e59190612478565b610995565b6040516102f791906124c0565b60405180910390f35b34801561030c57600080fd5b50610315610a0f565b6040516103229190612563565b60405180910390f35b34801561033757600080fd5b50610352600480360381019061034d91906125e3565b610aa1565b60405161035f91906124c0565b60405180910390f35b34801561037457600080fd5b5061038f600480360381019061038a91906125e3565b610ac4565b60405161039c91906124c0565b60405180910390f35b3480156103b157600080fd5b506103ba610ae8565b6040516103c79190612405565b60405180910390f35b3480156103dc57600080fd5b506103f760048036038101906103f29190612623565b610af2565b6040516104049190612405565b60405180910390f35b34801561041957600080fd5b50610434600480360381019061042f9190612663565b610bad565b60405161044191906124c0565b60405180910390f35b34801561045657600080fd5b5061045f610bdc565b60405161046c91906126d2565b60405180910390f35b34801561048157600080fd5b5061049c600480360381019061049791906125e3565b610be5565b6040516104a991906124c0565b60405180910390f35b3480156104be57600080fd5b506104d960048036038101906104d491906125e3565b610c09565b6040516104e691906124c0565b60405180910390f35b3480156104fb57600080fd5b5061051660048036038101906105119190612822565b610c40565b60405161052391906124c0565b60405180910390f35b34801561053857600080fd5b50610553600480360381019061054e919061235d565b610caa565b6040516105609190612405565b60405180910390f35b34801561057557600080fd5b5061057e610cc4565b60405161058b9190612405565b60405180910390f35b3480156105a057600080fd5b506105bb60048036038101906105b69190612891565b610ccc565b6040516105c89190612405565b60405180910390f35b3480156105dd57600080fd5b506105f860048036038101906105f3919061291e565b610d14565b60405161060591906129b5565b60405180910390f35b34801561061a57600080fd5b50610623610d97565b6040516106309190612563565b60405180910390f35b34801561064557600080fd5b50610660600480360381019061065b91906125e3565b610e29565b60405161066d91906124c0565b60405180910390f35b34801561068257600080fd5b5061069d600480360381019061069891906125e3565b610ea0565b6040516106aa91906124c0565b60405180910390f35b3480156106bf57600080fd5b506106c8610ec3565b6040516106d59190612405565b60405180910390f35b3480156106ea57600080fd5b506107056004803603810190610700919061235d565b610891565b6040516107129190612405565b60405180910390f35b34801561072757600080fd5b50610742600480360381019061073d91906129d0565b610ecc565b60405161074f91906124c0565b60405180910390f35b34801561076457600080fd5b5061077f600480360381019061077a9190612822565b610f31565b60405161078c91906124c0565b60405180910390f35b3480156107a157600080fd5b506107bc60048036038101906107b79190612663565b610f93565b6040516107c991906124c0565b60405180910390f35b6107ec60048036038101906107e7919061235d565b6108ab565b005b3480156107fa57600080fd5b5061081560048036038101906108109190612623565b610fb9565b6040516108229190612405565b60405180910390f35b34801561083757600080fd5b50610852600480360381019061084d9190612a53565b61103b565b60405161085f9190612405565b60405180910390f35b34801561087457600080fd5b5061088f600480360381019061088a919061235d565b6110c2565b005b60006108a48261089f610ae8565b610af2565b9050919050565b6108b361116f565b600034116108f6576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016108ed906122f3565b60405180910390fd5b60008111610939576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161093090612adf565b60405180910390fd5b633b9aca00811115610980576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161097790612b4b565b60405180910390fd5b61098a33826111be565b6109926112d8565b50565b60007fc2d06c1e000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19161480610a085750610a07826112e2565b5b9050919050565b606060038054610a1e90612b9a565b80601f0160208091040260200160405190810160405280929190818152602001828054610a4a90612b9a565b8015610a975780601f10610a6c57610100808354040283529160200191610a97565b820191906000526020600020905b815481529060010190602001808311610a7a57829003601f168201915b5050505050905090565b600080610aac61135c565b9050610ab9818585611364565b600191505092915050565b6000610ae0838360405180602001604052806000815250610c40565b905092915050565b6000600254905090565b600080610b3b6003600185610b079190612bfa565b610b119190612d83565b6003620f424087610b229190612dfd565b610b2c9190612e2e565b610b369190612bfa565b61152d565b9050600183610b4a9190612bfa565b811015610b8c576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610b8390612ed4565b60405180910390fd5b60018382610b9a9190612ef4565b610ba49190612ef4565b91505092915050565b600080610bb861135c565b9050610bc5858285611541565b610bd08585856115cd565b60019150509392505050565b60006012905090565b6000610c01838360405180602001604052806000815250610f31565b905092915050565b600080610c1461135c565b9050610c35818585610c26858961103b565b610c309190612bfa565b611364565b600191505092915050565b6000610c4c8484610ea0565b50610c60610c5861135c565b858585611843565b610c9f576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610c9690612f9a565b60405180910390fd5b600190509392505050565b6000610cbd82610cb8610ae8565b610fb9565b9050919050565b633b9aca0081565b60008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b60003073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610d84576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610d7b90613006565b60405180910390fd5b6388a7ca5c60e01b905095945050505050565b606060048054610da690612b9a565b80601f0160208091040260200160405190810160405280929190818152602001828054610dd290612b9a565b8015610e1f5780601f10610df457610100808354040283529160200191610e1f565b820191906000526020600020905b815481529060010190602001808311610e0257829003601f168201915b5050505050905090565b600080610e3461135c565b90506000610e42828661103b565b905083811015610e87576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610e7e90613098565b60405180910390fd5b610e948286868403611364565b60019250505092915050565b600080610eab61135c565b9050610eb88185856115cd565b600191505092915050565b64e8d4a5100081565b6000610ed9858585610bad565b50610ee685858585611843565b610f25576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610f1c90612f9a565b60405180910390fd5b60019050949350505050565b6000610f3d8484610aa1565b50610f498484846119fa565b610f88576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610f7f9061312a565b60405180910390fd5b600190509392505050565b6000610fb084848460405180602001604052806000815250610ecc565b90509392505050565b6000600383610fc89190612dfd565b6003620f42406003600186610fdd9190612bfa565b610fe79190612d83565b600360018888610ff79190612bfa565b6110019190612bfa565b61100b9190612d83565b6110159190612ef4565b61101f9190612e2e565b6110299190612dfd565b6110339190612ef4565b905092915050565b6000600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905092915050565b6110ca61116f565b806110d433610ccc565b1015611115576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161110c90613196565b60405180910390fd5b60006111213083610ea0565b905080611163576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161115a90613202565b60405180910390fd5b5061116c6112d8565b50565b6002600554036111b4576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016111ab9061326e565b60405180910390fd5b6002600581905550565b60006111c982610caa565b90508034101561120e576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611205906122f3565b60405180910390fd5b6112188383611bae565b64e8d4a51000611226610ae8565b1115611267576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161125e906132da565b60405180910390fd5b803411156112855761128483823461127f9190612ef4565b611d04565b5b8273ffffffffffffffffffffffffffffffffffffffff167fe3d4187f6ca4248660cc0ac8b8056515bac4a8132be2eca31d6d0cc170722a7e836040516112cb9190612405565b60405180910390a2505050565b6001600581905550565b60007fb0202a11000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19161480611355575061135482611df8565b5b9050919050565b600033905090565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16036113d3576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016113ca9061336c565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603611442576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611439906133fe565b60405180910390fd5b80600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925836040516115209190612405565b60405180910390a3505050565b600061153a826003611e62565b9050919050565b600061154d848461103b565b90507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff81146115c757818110156115b9576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016115b09061346a565b60405180910390fd5b6115c68484848403611364565b5b50505050565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff160361163c576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611633906134fc565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16036116ab576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016116a29061358e565b60405180910390fd5b6116b6838383611f44565b60008060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205490508181101561173c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161173390613620565b60405180910390fd5b8181036000808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550816000808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825401925050819055508273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef8460405161182a9190612405565b60405180910390a361183d848484611f49565b50505050565b60006118648473ffffffffffffffffffffffffffffffffffffffff16611fc6565b6118a3576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161189a906136b2565b60405180910390fd5b8373ffffffffffffffffffffffffffffffffffffffff166388a7ca5c6118c761135c565b8786866040518563ffffffff1660e01b81526004016118e99493929190613736565b6020604051808303816000875af192505050801561192557506040513d601f19601f820116820180604052508101906119229190613797565b60015b6119a7573d8060008114611955576040519150601f19603f3d011682016040523d82523d6000602084013e61195a565b606091505b50600081510361199f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161199690613836565b60405180910390fd5b805181602001fd5b6388a7ca5c60e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916817bffffffffffffffffffffffffffffffffffffffffffffffffffffffff191614915050949350505050565b6000611a1b8473ffffffffffffffffffffffffffffffffffffffff16611fc6565b611a5a576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611a51906138c8565b60405180910390fd5b8373ffffffffffffffffffffffffffffffffffffffff16637b04a2d0611a7e61135c565b85856040518463ffffffff1660e01b8152600401611a9e939291906138e8565b6020604051808303816000875af1925050508015611ada57506040513d601f19601f82011682018060405250810190611ad79190613797565b60015b611b5c573d8060008114611b0a576040519150601f19603f3d011682016040523d82523d6000602084013e611b0f565b606091505b506000815103611b54576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611b4b90613998565b60405180910390fd5b805181602001fd5b637b04a2d060e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916817bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916149150509392505050565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603611c1d576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611c1490613a04565b60405180910390fd5b611c2960008383611f44565b8060026000828254611c3b9190612bfa565b92505081905550806000808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825401925050819055508173ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef83604051611cec9190612405565b60405180910390a3611d0060008383611f49565b5050565b80471015611d47576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611d3e90613a70565b60405180910390fd5b60008273ffffffffffffffffffffffffffffffffffffffff1682604051611d6d90613ac1565b60006040518083038185875af1925050503d8060008114611daa576040519150601f19603f3d011682016040523d82523d6000602084013e611daf565b606091505b5050905080611df3576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611dea90613b48565b60405180910390fd5b505050565b60007f01ffc9a7000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916149050919050565b6000808211611ea6576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611e9d90613bb4565b60405180910390fd5b60008303611eb75760009050611f3e565b6000808490505b80821015611f2c57600060028284611ed69190612bfa565b611ee09190612dfd565b905060008582611ef09190613bd4565b9050868103611f055781945050505050611f3e565b86811015611f2157600182611f1a9190612bfa565b9350611f25565b8192505b5050611ebe565b600182611f399190612ef4565b925050505b92915050565b505050565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1614158015611fb157503073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16145b15611fc157611fc08382611fe9565b5b505050565b6000808273ffffffffffffffffffffffffffffffffffffffff163b119050919050565b611ff3308261205d565b6000611ffe82610caa565b905061200a8382611d04565b8273ffffffffffffffffffffffffffffffffffffffff167f5e5e995ce3133561afceaa51a9a154d5db228cd7525d34df5185582c18d3df09836040516120509190612405565b60405180910390a2505050565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16036120cc576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016120c390613c91565b60405180910390fd5b6120d882600083611f44565b60008060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205490508181101561215e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161215590613d23565b60405180910390fd5b8181036000808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555081600260008282540392505081905550600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef846040516122119190612405565b60405180910390a361222583600084611f49565b505050565b600082825260208201905092915050565b7f4e6f7420737570706f7274656400000000000000000000000000000000000000600082015250565b6000612271600d8361222a565b915061227c8261223b565b602082019050919050565b600060208201905081810360008301526122a081612264565b9050919050565b7f496e73756666696369656e742066756e64730000000000000000000000000000600082015250565b60006122dd60128361222a565b91506122e8826122a7565b602082019050919050565b6000602082019050818103600083015261230c816122d0565b9050919050565b6000604051905090565b600080fd5b600080fd5b6000819050919050565b61233a81612327565b811461234557600080fd5b50565b60008135905061235781612331565b92915050565b6000602082840312156123735761237261231d565b5b600061238184828501612348565b91505092915050565b7f416d6f756e74206973206e6f7420636f72726563740000000000000000000000600082015250565b60006123c060158361222a565b91506123cb8261238a565b602082019050919050565b600060208201905081810360008301526123ef816123b3565b9050919050565b6123ff81612327565b82525050565b600060208201905061241a60008301846123f6565b92915050565b60007fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b61245581612420565b811461246057600080fd5b50565b6000813590506124728161244c565b92915050565b60006020828403121561248e5761248d61231d565b5b600061249c84828501612463565b91505092915050565b60008115159050919050565b6124ba816124a5565b82525050565b60006020820190506124d560008301846124b1565b92915050565b600081519050919050565b60005b838110156125045780820151818401526020810190506124e9565b83811115612513576000848401525b50505050565b6000601f19601f8301169050919050565b6000612535826124db565b61253f818561222a565b935061254f8185602086016124e6565b61255881612519565b840191505092915050565b6000602082019050818103600083015261257d818461252a565b905092915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006125b082612585565b9050919050565b6125c0816125a5565b81146125cb57600080fd5b50565b6000813590506125dd816125b7565b92915050565b600080604083850312156125fa576125f961231d565b5b6000612608858286016125ce565b925050602061261985828601612348565b9150509250929050565b6000806040838503121561263a5761263961231d565b5b600061264885828601612348565b925050602061265985828601612348565b9150509250929050565b60008060006060848603121561267c5761267b61231d565b5b600061268a868287016125ce565b935050602061269b868287016125ce565b92505060406126ac86828701612348565b9150509250925092565b600060ff82169050919050565b6126cc816126b6565b82525050565b60006020820190506126e760008301846126c3565b92915050565b600080fd5b600080fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b61272f82612519565b810181811067ffffffffffffffff8211171561274e5761274d6126f7565b5b80604052505050565b6000612761612313565b905061276d8282612726565b919050565b600067ffffffffffffffff82111561278d5761278c6126f7565b5b61279682612519565b9050602081019050919050565b82818337600083830152505050565b60006127c56127c084612772565b612757565b9050828152602081018484840111156127e1576127e06126f2565b5b6127ec8482856127a3565b509392505050565b600082601f830112612809576128086126ed565b5b81356128198482602086016127b2565b91505092915050565b60008060006060848603121561283b5761283a61231d565b5b6000612849868287016125ce565b935050602061285a86828701612348565b925050604084013567ffffffffffffffff81111561287b5761287a612322565b5b612887868287016127f4565b9150509250925092565b6000602082840312156128a7576128a661231d565b5b60006128b5848285016125ce565b91505092915050565b600080fd5b600080fd5b60008083601f8401126128de576128dd6126ed565b5b8235905067ffffffffffffffff8111156128fb576128fa6128be565b5b602083019150836001820283011115612917576129166128c3565b5b9250929050565b60008060008060006080868803121561293a5761293961231d565b5b6000612948888289016125ce565b9550506020612959888289016125ce565b945050604061296a88828901612348565b935050606086013567ffffffffffffffff81111561298b5761298a612322565b5b612997888289016128c8565b92509250509295509295909350565b6129af81612420565b82525050565b60006020820190506129ca60008301846129a6565b92915050565b600080600080608085870312156129ea576129e961231d565b5b60006129f8878288016125ce565b9450506020612a09878288016125ce565b9350506040612a1a87828801612348565b925050606085013567ffffffffffffffff811115612a3b57612a3a612322565b5b612a47878288016127f4565b91505092959194509250565b60008060408385031215612a6a57612a6961231d565b5b6000612a78858286016125ce565b9250506020612a89858286016125ce565b9150509250929050565b7f416d6f756e74206973207a65726f000000000000000000000000000000000000600082015250565b6000612ac9600e8361222a565b9150612ad482612a93565b602082019050919050565b60006020820190508181036000830152612af881612abc565b9050919050565b7f416d6f756e7420697320746f6f20686967680000000000000000000000000000600082015250565b6000612b3560128361222a565b9150612b4082612aff565b602082019050919050565b60006020820190508181036000830152612b6481612b28565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b60006002820490506001821680612bb257607f821691505b602082108103612bc557612bc4612b6b565b5b50919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000612c0582612327565b9150612c1083612327565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03821115612c4557612c44612bcb565b5b828201905092915050565b60008160011c9050919050565b6000808291508390505b6001851115612ca757808604811115612c8357612c82612bcb565b5b6001851615612c925780820291505b8081029050612ca085612c50565b9450612c67565b94509492505050565b600082612cc05760019050612d7c565b81612cce5760009050612d7c565b8160018114612ce45760028114612cee57612d1d565b6001915050612d7c565b60ff841115612d0057612cff612bcb565b5b8360020a915084821115612d1757612d16612bcb565b5b50612d7c565b5060208310610133831016604e8410600b8410161715612d525782820a905083811115612d4d57612d4c612bcb565b5b612d7c565b612d5f8484846001612c5d565b92509050818404811115612d7657612d75612bcb565b5b81810290505b9392505050565b6000612d8e82612327565b9150612d99836126b6565b9250612dc67fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8484612cb0565b905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b6000612e0882612327565b9150612e1383612327565b925082612e2357612e22612dce565b5b828204905092915050565b6000612e3982612327565b9150612e4483612327565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0483118215151615612e7d57612e7c612bcb565b5b828202905092915050565b7f416d6f756e7420697320746f6f206c6f77000000000000000000000000000000600082015250565b6000612ebe60118361222a565b9150612ec982612e88565b602082019050919050565b60006020820190508181036000830152612eed81612eb1565b9050919050565b6000612eff82612327565b9150612f0a83612327565b925082821015612f1d57612f1c612bcb565b5b828203905092915050565b7f455243313336333a2072656365697665722072657475726e65642077726f6e6760008201527f2064617461000000000000000000000000000000000000000000000000000000602082015250565b6000612f8460258361222a565b9150612f8f82612f28565b604082019050919050565b60006020820190508181036000830152612fb381612f77565b9050919050565b7f4f6e6c7920616c6c6f77656420746f6b656e0000000000000000000000000000600082015250565b6000612ff060128361222a565b9150612ffb82612fba565b602082019050919050565b6000602082019050818103600083015261301f81612fe3565b9050919050565b7f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f7760008201527f207a65726f000000000000000000000000000000000000000000000000000000602082015250565b600061308260258361222a565b915061308d82613026565b604082019050919050565b600060208201905081810360008301526130b181613075565b9050919050565b7f455243313336333a207370656e6465722072657475726e65642077726f6e672060008201527f6461746100000000000000000000000000000000000000000000000000000000602082015250565b600061311460248361222a565b915061311f826130b8565b604082019050919050565b6000602082019050818103600083015261314381613107565b9050919050565b7f496e73756666696369656e7420616d6f756e7400000000000000000000000000600082015250565b600061318060138361222a565b915061318b8261314a565b602082019050919050565b600060208201905081810360008301526131af81613173565b9050919050565b7f5472616e73666572206661696c65640000000000000000000000000000000000600082015250565b60006131ec600f8361222a565b91506131f7826131b6565b602082019050919050565b6000602082019050818103600083015261321b816131df565b9050919050565b7f5265656e7472616e637947756172643a207265656e7472616e742063616c6c00600082015250565b6000613258601f8361222a565b915061326382613222565b602082019050919050565b600060208201905081810360008301526132878161324b565b9050919050565b7f4d617820737570706c79207468726573686f6c64207265616368656400000000600082015250565b60006132c4601c8361222a565b91506132cf8261328e565b602082019050919050565b600060208201905081810360008301526132f3816132b7565b9050919050565b7f45524332303a20617070726f76652066726f6d20746865207a65726f2061646460008201527f7265737300000000000000000000000000000000000000000000000000000000602082015250565b600061335660248361222a565b9150613361826132fa565b604082019050919050565b6000602082019050818103600083015261338581613349565b9050919050565b7f45524332303a20617070726f766520746f20746865207a65726f20616464726560008201527f7373000000000000000000000000000000000000000000000000000000000000602082015250565b60006133e860228361222a565b91506133f38261338c565b604082019050919050565b60006020820190508181036000830152613417816133db565b9050919050565b7f45524332303a20696e73756666696369656e7420616c6c6f77616e6365000000600082015250565b6000613454601d8361222a565b915061345f8261341e565b602082019050919050565b6000602082019050818103600083015261348381613447565b9050919050565b7f45524332303a207472616e736665722066726f6d20746865207a65726f20616460008201527f6472657373000000000000000000000000000000000000000000000000000000602082015250565b60006134e660258361222a565b91506134f18261348a565b604082019050919050565b60006020820190508181036000830152613515816134d9565b9050919050565b7f45524332303a207472616e7366657220746f20746865207a65726f206164647260008201527f6573730000000000000000000000000000000000000000000000000000000000602082015250565b600061357860238361222a565b91506135838261351c565b604082019050919050565b600060208201905081810360008301526135a78161356b565b9050919050565b7f45524332303a207472616e7366657220616d6f756e742065786365656473206260008201527f616c616e63650000000000000000000000000000000000000000000000000000602082015250565b600061360a60268361222a565b9150613615826135ae565b604082019050919050565b60006020820190508181036000830152613639816135fd565b9050919050565b7f455243313336333a207472616e7366657220746f206e6f6e20636f6e7472616360008201527f7420616464726573730000000000000000000000000000000000000000000000602082015250565b600061369c60298361222a565b91506136a782613640565b604082019050919050565b600060208201905081810360008301526136cb8161368f565b9050919050565b6136db816125a5565b82525050565b600081519050919050565b600082825260208201905092915050565b6000613708826136e1565b61371281856136ec565b93506137228185602086016124e6565b61372b81612519565b840191505092915050565b600060808201905061374b60008301876136d2565b61375860208301866136d2565b61376560408301856123f6565b818103606083015261377781846136fd565b905095945050505050565b6000815190506137918161244c565b92915050565b6000602082840312156137ad576137ac61231d565b5b60006137bb84828501613782565b91505092915050565b7f455243313336333a207472616e7366657220746f206e6f6e204552433133363360008201527f526563656976657220696d706c656d656e746572000000000000000000000000602082015250565b600061382060348361222a565b915061382b826137c4565b604082019050919050565b6000602082019050818103600083015261384f81613813565b9050919050565b7f455243313336333a20617070726f76652061206e6f6e20636f6e74726163742060008201527f6164647265737300000000000000000000000000000000000000000000000000602082015250565b60006138b260278361222a565b91506138bd82613856565b604082019050919050565b600060208201905081810360008301526138e1816138a5565b9050919050565b60006060820190506138fd60008301866136d2565b61390a60208301856123f6565b818103604083015261391c81846136fd565b9050949350505050565b7f455243313336333a20617070726f76652061206e6f6e2045524331333633537060008201527f656e64657220696d706c656d656e746572000000000000000000000000000000602082015250565b600061398260318361222a565b915061398d82613926565b604082019050919050565b600060208201905081810360008301526139b181613975565b9050919050565b7f45524332303a206d696e7420746f20746865207a65726f206164647265737300600082015250565b60006139ee601f8361222a565b91506139f9826139b8565b602082019050919050565b60006020820190508181036000830152613a1d816139e1565b9050919050565b7f416464726573733a20696e73756666696369656e742062616c616e6365000000600082015250565b6000613a5a601d8361222a565b9150613a6582613a24565b602082019050919050565b60006020820190508181036000830152613a8981613a4d565b9050919050565b600081905092915050565b50565b6000613aab600083613a90565b9150613ab682613a9b565b600082019050919050565b6000613acc82613a9e565b9150819050919050565b7f416464726573733a20756e61626c6520746f2073656e642076616c75652c207260008201527f6563697069656e74206d61792068617665207265766572746564000000000000602082015250565b6000613b32603a8361222a565b9150613b3d82613ad6565b604082019050919050565b60006020820190508181036000830152613b6181613b25565b9050919050565b7f526f6f74206d75737420626520706f7369746976650000000000000000000000600082015250565b6000613b9e60158361222a565b9150613ba982613b68565b602082019050919050565b60006020820190508181036000830152613bcd81613b91565b9050919050565b6000613bdf82612327565b9150613bea83612327565b9250613c177fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8484612cb0565b905092915050565b7f45524332303a206275726e2066726f6d20746865207a65726f2061646472657360008201527f7300000000000000000000000000000000000000000000000000000000000000602082015250565b6000613c7b60218361222a565b9150613c8682613c1f565b604082019050919050565b60006020820190508181036000830152613caa81613c6e565b9050919050565b7f45524332303a206275726e20616d6f756e7420657863656564732062616c616e60008201527f6365000000000000000000000000000000000000000000000000000000000000602082015250565b6000613d0d60228361222a565b9150613d1882613cb1565b604082019050919050565b60006020820190508181036000830152613d3c81613d00565b905091905056fea2646970667358221220a8a32fb57c428b8dfbfcd72ad1667f6bbea8cbd5294ff716c1137ddc14edcaa564736f6c634300080f0033", "bin-runtime": "6080604052600436106100385760003560e01c80630362550714610044578063ae5847961461006d578063b236c6c2146100965761003f565b3661003f57005b600080fd5b34801561005057600080fd5b5061006b60048036038101906100669190610f85565b6100bf565b005b34801561007957600080fd5b50610094600480360381019061008f9190610f85565b61048a565b005b3480156100a257600080fd5b506100bd60048036038101906100b89190610fea565b61090c565b005b6000811161015b5760008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166354d0a6856040518163ffffffff1660e01b8152600401602060405180830381865afa158015610132573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610156919061103f565b61015d565b805b905060008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166354d0a6856040518163ffffffff1660e01b8152600401602060405180830381865afa1580156101ca573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906101ee919061103f565b816101f9919061109b565b600161020591906110fb565b905060008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b81526004016102639190611192565b602060405180830381865afa158015610280573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102a4919061103f565b905060008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663465fa408846040518263ffffffff1660e01b815260040161030291906111bc565b602060405180830381865afa15801561031f573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610343919061103f565b905060008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663d96a094a82856040518363ffffffff1660e01b815260040161039f91906111bc565b6000604051808303818588803b1580156103b857600080fd5b505af11580156103cc573d6000803e3d6000fd5b505050505082826103dd91906110fb565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b81526004016104369190611192565b602060405180830381865afa158015610453573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610477919061103f565b14610485576104846111d7565b5b505050565b600081116105265760008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166354d0a6856040518163ffffffff1660e01b8152600401602060405180830381865afa1580156104fd573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610521919061103f565b610528565b805b905060008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b81526004016105869190611192565b602060405180830381865afa1580156105a3573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105c7919061103f565b9050600047905060008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166354d0a6856040518163ffffffff1660e01b8152600401602060405180830381865afa158015610639573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061065d919061103f565b83610668919061109b565b600161067491906110fb565b925060008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663465fa408856040518263ffffffff1660e01b81526004016106d291906111bc565b602060405180830381865afa1580156106ef573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610713919061103f565b905060008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663d96a094a82866040518363ffffffff1660e01b815260040161076f91906111bc565b6000604051808303818588803b15801561078857600080fd5b505af115801561079c573d6000803e3d6000fd5b505050505060008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663e4849b32856040518263ffffffff1660e01b81526004016107fa91906111bc565b600060405180830381600087803b15801561081457600080fd5b505af1925050508015610825575060015b61083d576000610838576108376111d7565b5b61084d565b600161084c5761084b6111d7565b5b5b8260008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b81526004016108a79190611192565b602060405180830381865afa1580156108c4573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108e8919061103f565b146108f6576108f56111d7565b5b478214610906576109056111d7565b5b50505050565b600082116109a85760008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166354d0a6856040518163ffffffff1660e01b8152600401602060405180830381865afa15801561097f573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109a3919061103f565b6109aa565b815b91508015610b8b5760008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166354d0a6856040518163ffffffff1660e01b8152600401602060405180830381865afa158015610a1d573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a41919061103f565b82610a4c919061109b565b6001610a5891906110fb565b915060008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663465fa408846040518263ffffffff1660e01b8152600401610ab691906111bc565b602060405180830381865afa158015610ad3573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610af7919061103f565b905060008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663d96a094a82856040518363ffffffff1660e01b8152600401610b5391906111bc565b6000604051808303818588803b158015610b6c57600080fd5b505af1158015610b80573d6000803e3d6000fd5b505050505050610e19565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b8152600401610be79190611192565b602060405180830381865afa158015610c04573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610c28919061103f565b90506000811115610e17578083610c3f919061109b565b6001610c4b91906110fb565b925060008311610c5b5780610c5d565b825b925060008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663e4849b32846040518263ffffffff1660e01b8152600401610cb891906111bc565b600060405180830381600087803b158015610cd257600080fd5b505af1925050508015610ce3575060015b610e06577fce422aac32fa3a960eff96496b10fd05b1688cfaa1f8d2732407f0c4ac52dbc18360008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663465fa408866040518263ffffffff1660e01b8152600401610d6291906111bc565b602060405180830381865afa158015610d7f573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610da3919061103f565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1631604051610dea93929190611206565b60405180910390a16000610e0157610e006111d7565b5b610e16565b6001610e1557610e146111d7565b5b5b5b505b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663b4a0b8c76040518163ffffffff1660e01b8152600401602060405180830381865afa158015610e84573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610ea8919061103f565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166318160ddd6040518163ffffffff1660e01b8152600401602060405180830381865afa158015610f13573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610f37919061103f565b1115610f4657610f456111d7565b5b5050565b600080fd5b6000819050919050565b610f6281610f4f565b8114610f6d57600080fd5b50565b600081359050610f7f81610f59565b92915050565b600060208284031215610f9b57610f9a610f4a565b5b6000610fa984828501610f70565b91505092915050565b60008115159050919050565b610fc781610fb2565b8114610fd257600080fd5b50565b600081359050610fe481610fbe565b92915050565b6000806040838503121561100157611000610f4a565b5b600061100f85828601610f70565b925050602061102085828601610fd5565b9150509250929050565b60008151905061103981610f59565b92915050565b60006020828403121561105557611054610f4a565b5b60006110638482850161102a565b91505092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b60006110a682610f4f565b91506110b183610f4f565b9250826110c1576110c061106c565b5b828206905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600061110682610f4f565b915061111183610f4f565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03821115611146576111456110cc565b5b828201905092915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061117c82611151565b9050919050565b61118c81611171565b82525050565b60006020820190506111a76000830184611183565b92915050565b6111b681610f4f565b82525050565b60006020820190506111d160008301846111ad565b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052600160045260246000fd5b600060608201905061121b60008301866111ad565b61122860208301856111ad565b61123560408301846111ad565b94935050505056fea264697066735822122011985564292ba89eff9b7d5f6f9243cb72c0193fe5a9246c78be89f52854975264736f6c634300080f0033", "userdoc": {"methods": {}, "notice": null}, "devdoc": {"methods": {}, "author": null, "details": "Run the template with      ```      solc-select use 0.8.19      echidna ./test/TestBondingToken.sol --contract TestBondingToken --config ./config.yaml      ```", "title": null}}}}